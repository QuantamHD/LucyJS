/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_PLAN_ARCHITECTURE
#define H_LUCY_PLAN_ARCHITECTURE 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Clownfish/Obj.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_ARCHITECTURE
extern uint32_t lucy_Arch_IVARS_OFFSET;
typedef struct lucy_ArchitectureIVARS lucy_ArchitectureIVARS;
static CFISH_INLINE lucy_ArchitectureIVARS*
lucy_Arch_IVARS(lucy_Architecture *self) {
   char *ptr = (char*)self + lucy_Arch_IVARS_OFFSET;
   return (lucy_ArchitectureIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define ArchitectureIVARS lucy_ArchitectureIVARS
  #define Arch_IVARS lucy_Arch_IVARS
#endif


#endif /* C_LUCY_ARCHITECTURE */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_Architecture*
lucy_Arch_new(void);

LUCY_VISIBLE lucy_Architecture*
lucy_Arch_init(lucy_Architecture* self);

void
LUCY_Arch_Init_Seg_Writer_IMP(lucy_Architecture* self, lucy_SegWriter* writer);

void
LUCY_Arch_Register_Lexicon_Writer_IMP(lucy_Architecture* self, lucy_SegWriter* writer);

void
LUCY_Arch_Register_Posting_List_Writer_IMP(lucy_Architecture* self, lucy_SegWriter* writer);

void
LUCY_Arch_Register_Doc_Writer_IMP(lucy_Architecture* self, lucy_SegWriter* writer);

void
LUCY_Arch_Register_Sort_Writer_IMP(lucy_Architecture* self, lucy_SegWriter* writer);

void
LUCY_Arch_Register_Highlight_Writer_IMP(lucy_Architecture* self, lucy_SegWriter* writer);

void
LUCY_Arch_Register_Deletions_Writer_IMP(lucy_Architecture* self, lucy_SegWriter* writer);

void
LUCY_Arch_Init_Seg_Reader_IMP(lucy_Architecture* self, lucy_SegReader* reader);

void
LUCY_Arch_Register_Doc_Reader_IMP(lucy_Architecture* self, lucy_SegReader* reader);

void
LUCY_Arch_Register_Posting_List_Reader_IMP(lucy_Architecture* self, lucy_SegReader* reader);

void
LUCY_Arch_Register_Sort_Reader_IMP(lucy_Architecture* self, lucy_SegReader* reader);

void
LUCY_Arch_Register_Highlight_Reader_IMP(lucy_Architecture* self, lucy_SegReader* reader);

void
LUCY_Arch_Register_Lexicon_Reader_IMP(lucy_Architecture* self, lucy_SegReader* reader);

void
LUCY_Arch_Register_Deletions_Reader_IMP(lucy_Architecture* self, lucy_SegReader* reader);

lucy_Similarity*
LUCY_Arch_Make_Similarity_IMP(lucy_Architecture* self);

int32_t
LUCY_Arch_Index_Interval_IMP(lucy_Architecture* self);

int32_t
LUCY_Arch_Skip_Interval_IMP(lucy_Architecture* self);

bool
LUCY_Arch_Equals_IMP(lucy_Architecture* self, cfish_Obj* other);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_Arch_To_Host_t)(lucy_Architecture* self, void* vcache);

typedef cfish_Obj*
(*LUCY_Arch_Clone_t)(lucy_Architecture* self);

typedef bool
(*LUCY_Arch_Equals_t)(lucy_Architecture* self, cfish_Obj* other);

typedef int32_t
(*LUCY_Arch_Compare_To_t)(lucy_Architecture* self, cfish_Obj* other);

typedef void
(*LUCY_Arch_Destroy_t)(lucy_Architecture* self);

typedef cfish_String*
(*LUCY_Arch_To_String_t)(lucy_Architecture* self);

typedef void
(*LUCY_Arch_Init_Seg_Writer_t)(lucy_Architecture* self, lucy_SegWriter* writer);

typedef void
(*LUCY_Arch_Register_Lexicon_Writer_t)(lucy_Architecture* self, lucy_SegWriter* writer);

typedef void
(*LUCY_Arch_Register_Posting_List_Writer_t)(lucy_Architecture* self, lucy_SegWriter* writer);

typedef void
(*LUCY_Arch_Register_Doc_Writer_t)(lucy_Architecture* self, lucy_SegWriter* writer);

typedef void
(*LUCY_Arch_Register_Sort_Writer_t)(lucy_Architecture* self, lucy_SegWriter* writer);

typedef void
(*LUCY_Arch_Register_Highlight_Writer_t)(lucy_Architecture* self, lucy_SegWriter* writer);

typedef void
(*LUCY_Arch_Register_Deletions_Writer_t)(lucy_Architecture* self, lucy_SegWriter* writer);

typedef void
(*LUCY_Arch_Init_Seg_Reader_t)(lucy_Architecture* self, lucy_SegReader* reader);

typedef void
(*LUCY_Arch_Register_Doc_Reader_t)(lucy_Architecture* self, lucy_SegReader* reader);

typedef void
(*LUCY_Arch_Register_Posting_List_Reader_t)(lucy_Architecture* self, lucy_SegReader* reader);

typedef void
(*LUCY_Arch_Register_Sort_Reader_t)(lucy_Architecture* self, lucy_SegReader* reader);

typedef void
(*LUCY_Arch_Register_Highlight_Reader_t)(lucy_Architecture* self, lucy_SegReader* reader);

typedef void
(*LUCY_Arch_Register_Lexicon_Reader_t)(lucy_Architecture* self, lucy_SegReader* reader);

typedef void
(*LUCY_Arch_Register_Deletions_Reader_t)(lucy_Architecture* self, lucy_SegReader* reader);

typedef lucy_Similarity*
(*LUCY_Arch_Make_Similarity_t)(lucy_Architecture* self);

typedef int32_t
(*LUCY_Arch_Index_Interval_t)(lucy_Architecture* self);

typedef int32_t
(*LUCY_Arch_Skip_Interval_t)(lucy_Architecture* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_Arch_get_class(lucy_Architecture *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_Arch_get_class_name(lucy_Architecture *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_Arch_is_a(lucy_Architecture *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_Arch_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_Arch_To_Host(lucy_Architecture* self, void* vcache) {
    const LUCY_Arch_To_Host_t method = (LUCY_Arch_To_Host_t)cfish_obj_method(self, LUCY_Arch_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_Arch_Clone(lucy_Architecture* self) {
    const LUCY_Arch_Clone_t method = (LUCY_Arch_Clone_t)cfish_obj_method(self, LUCY_Arch_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_Arch_Equals(lucy_Architecture* self, cfish_Obj* other) {
    const LUCY_Arch_Equals_t method = (LUCY_Arch_Equals_t)cfish_obj_method(self, LUCY_Arch_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_Arch_Compare_To(lucy_Architecture* self, cfish_Obj* other) {
    const LUCY_Arch_Compare_To_t method = (LUCY_Arch_Compare_To_t)cfish_obj_method(self, LUCY_Arch_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Destroy(lucy_Architecture* self) {
    const LUCY_Arch_Destroy_t method = (LUCY_Arch_Destroy_t)cfish_obj_method(self, LUCY_Arch_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Arch_To_String(lucy_Architecture* self) {
    const LUCY_Arch_To_String_t method = (LUCY_Arch_To_String_t)cfish_obj_method(self, LUCY_Arch_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Init_Seg_Writer_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Init_Seg_Writer(lucy_Architecture* self, lucy_SegWriter* writer) {
    const LUCY_Arch_Init_Seg_Writer_t method = (LUCY_Arch_Init_Seg_Writer_t)cfish_obj_method(self, LUCY_Arch_Init_Seg_Writer_OFFSET);
    method(self, writer);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Lexicon_Writer_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Lexicon_Writer(lucy_Architecture* self, lucy_SegWriter* writer) {
    const LUCY_Arch_Register_Lexicon_Writer_t method = (LUCY_Arch_Register_Lexicon_Writer_t)cfish_obj_method(self, LUCY_Arch_Register_Lexicon_Writer_OFFSET);
    method(self, writer);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Posting_List_Writer_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Posting_List_Writer(lucy_Architecture* self, lucy_SegWriter* writer) {
    const LUCY_Arch_Register_Posting_List_Writer_t method = (LUCY_Arch_Register_Posting_List_Writer_t)cfish_obj_method(self, LUCY_Arch_Register_Posting_List_Writer_OFFSET);
    method(self, writer);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Doc_Writer_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Doc_Writer(lucy_Architecture* self, lucy_SegWriter* writer) {
    const LUCY_Arch_Register_Doc_Writer_t method = (LUCY_Arch_Register_Doc_Writer_t)cfish_obj_method(self, LUCY_Arch_Register_Doc_Writer_OFFSET);
    method(self, writer);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Sort_Writer_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Sort_Writer(lucy_Architecture* self, lucy_SegWriter* writer) {
    const LUCY_Arch_Register_Sort_Writer_t method = (LUCY_Arch_Register_Sort_Writer_t)cfish_obj_method(self, LUCY_Arch_Register_Sort_Writer_OFFSET);
    method(self, writer);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Highlight_Writer_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Highlight_Writer(lucy_Architecture* self, lucy_SegWriter* writer) {
    const LUCY_Arch_Register_Highlight_Writer_t method = (LUCY_Arch_Register_Highlight_Writer_t)cfish_obj_method(self, LUCY_Arch_Register_Highlight_Writer_OFFSET);
    method(self, writer);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Deletions_Writer_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Deletions_Writer(lucy_Architecture* self, lucy_SegWriter* writer) {
    const LUCY_Arch_Register_Deletions_Writer_t method = (LUCY_Arch_Register_Deletions_Writer_t)cfish_obj_method(self, LUCY_Arch_Register_Deletions_Writer_OFFSET);
    method(self, writer);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Init_Seg_Reader_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Init_Seg_Reader(lucy_Architecture* self, lucy_SegReader* reader) {
    const LUCY_Arch_Init_Seg_Reader_t method = (LUCY_Arch_Init_Seg_Reader_t)cfish_obj_method(self, LUCY_Arch_Init_Seg_Reader_OFFSET);
    method(self, reader);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Doc_Reader_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Doc_Reader(lucy_Architecture* self, lucy_SegReader* reader) {
    const LUCY_Arch_Register_Doc_Reader_t method = (LUCY_Arch_Register_Doc_Reader_t)cfish_obj_method(self, LUCY_Arch_Register_Doc_Reader_OFFSET);
    method(self, reader);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Posting_List_Reader_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Posting_List_Reader(lucy_Architecture* self, lucy_SegReader* reader) {
    const LUCY_Arch_Register_Posting_List_Reader_t method = (LUCY_Arch_Register_Posting_List_Reader_t)cfish_obj_method(self, LUCY_Arch_Register_Posting_List_Reader_OFFSET);
    method(self, reader);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Sort_Reader_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Sort_Reader(lucy_Architecture* self, lucy_SegReader* reader) {
    const LUCY_Arch_Register_Sort_Reader_t method = (LUCY_Arch_Register_Sort_Reader_t)cfish_obj_method(self, LUCY_Arch_Register_Sort_Reader_OFFSET);
    method(self, reader);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Highlight_Reader_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Highlight_Reader(lucy_Architecture* self, lucy_SegReader* reader) {
    const LUCY_Arch_Register_Highlight_Reader_t method = (LUCY_Arch_Register_Highlight_Reader_t)cfish_obj_method(self, LUCY_Arch_Register_Highlight_Reader_OFFSET);
    method(self, reader);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Lexicon_Reader_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Lexicon_Reader(lucy_Architecture* self, lucy_SegReader* reader) {
    const LUCY_Arch_Register_Lexicon_Reader_t method = (LUCY_Arch_Register_Lexicon_Reader_t)cfish_obj_method(self, LUCY_Arch_Register_Lexicon_Reader_OFFSET);
    method(self, reader);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Register_Deletions_Reader_OFFSET;
static CFISH_INLINE void
LUCY_Arch_Register_Deletions_Reader(lucy_Architecture* self, lucy_SegReader* reader) {
    const LUCY_Arch_Register_Deletions_Reader_t method = (LUCY_Arch_Register_Deletions_Reader_t)cfish_obj_method(self, LUCY_Arch_Register_Deletions_Reader_OFFSET);
    method(self, reader);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Make_Similarity_OFFSET;
static CFISH_INLINE lucy_Similarity*
LUCY_Arch_Make_Similarity(lucy_Architecture* self) {
    const LUCY_Arch_Make_Similarity_t method = (LUCY_Arch_Make_Similarity_t)cfish_obj_method(self, LUCY_Arch_Make_Similarity_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Index_Interval_OFFSET;
static CFISH_INLINE int32_t
LUCY_Arch_Index_Interval(lucy_Architecture* self) {
    const LUCY_Arch_Index_Interval_t method = (LUCY_Arch_Index_Interval_t)cfish_obj_method(self, LUCY_Arch_Index_Interval_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Arch_Skip_Interval_OFFSET;
static CFISH_INLINE int32_t
LUCY_Arch_Skip_Interval(lucy_Architecture* self) {
    const LUCY_Arch_Skip_Interval_t method = (LUCY_Arch_Skip_Interval_t)cfish_obj_method(self, LUCY_Arch_Skip_Interval_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_Arch_Init_Seg_Writer_OVERRIDE NULL
#define Lucy_Arch_Register_Lexicon_Writer_OVERRIDE NULL
#define Lucy_Arch_Register_Posting_List_Writer_OVERRIDE NULL
#define Lucy_Arch_Register_Doc_Writer_OVERRIDE NULL
#define Lucy_Arch_Register_Sort_Writer_OVERRIDE NULL
#define Lucy_Arch_Register_Highlight_Writer_OVERRIDE NULL
#define Lucy_Arch_Register_Deletions_Writer_OVERRIDE NULL
#define Lucy_Arch_Init_Seg_Reader_OVERRIDE NULL
#define Lucy_Arch_Register_Doc_Reader_OVERRIDE NULL
#define Lucy_Arch_Register_Posting_List_Reader_OVERRIDE NULL
#define Lucy_Arch_Register_Sort_Reader_OVERRIDE NULL
#define Lucy_Arch_Register_Highlight_Reader_OVERRIDE NULL
#define Lucy_Arch_Register_Lexicon_Reader_OVERRIDE NULL
#define Lucy_Arch_Register_Deletions_Reader_OVERRIDE NULL
#define Lucy_Arch_Make_Similarity_OVERRIDE NULL
#define Lucy_Arch_Index_Interval_OVERRIDE NULL
#define Lucy_Arch_Skip_Interval_OVERRIDE NULL
#else
void
Lucy_Arch_Init_Seg_Writer_OVERRIDE(lucy_Architecture* self, lucy_SegWriter* writer);
void
Lucy_Arch_Register_Lexicon_Writer_OVERRIDE(lucy_Architecture* self, lucy_SegWriter* writer);
void
Lucy_Arch_Register_Posting_List_Writer_OVERRIDE(lucy_Architecture* self, lucy_SegWriter* writer);
void
Lucy_Arch_Register_Doc_Writer_OVERRIDE(lucy_Architecture* self, lucy_SegWriter* writer);
void
Lucy_Arch_Register_Sort_Writer_OVERRIDE(lucy_Architecture* self, lucy_SegWriter* writer);
void
Lucy_Arch_Register_Highlight_Writer_OVERRIDE(lucy_Architecture* self, lucy_SegWriter* writer);
void
Lucy_Arch_Register_Deletions_Writer_OVERRIDE(lucy_Architecture* self, lucy_SegWriter* writer);
void
Lucy_Arch_Init_Seg_Reader_OVERRIDE(lucy_Architecture* self, lucy_SegReader* reader);
void
Lucy_Arch_Register_Doc_Reader_OVERRIDE(lucy_Architecture* self, lucy_SegReader* reader);
void
Lucy_Arch_Register_Posting_List_Reader_OVERRIDE(lucy_Architecture* self, lucy_SegReader* reader);
void
Lucy_Arch_Register_Sort_Reader_OVERRIDE(lucy_Architecture* self, lucy_SegReader* reader);
void
Lucy_Arch_Register_Highlight_Reader_OVERRIDE(lucy_Architecture* self, lucy_SegReader* reader);
void
Lucy_Arch_Register_Lexicon_Reader_OVERRIDE(lucy_Architecture* self, lucy_SegReader* reader);
void
Lucy_Arch_Register_Deletions_Reader_OVERRIDE(lucy_Architecture* self, lucy_SegReader* reader);
lucy_Similarity*
Lucy_Arch_Make_Similarity_OVERRIDE(lucy_Architecture* self);
int32_t
Lucy_Arch_Index_Interval_OVERRIDE(lucy_Architecture* self);
int32_t
Lucy_Arch_Skip_Interval_OVERRIDE(lucy_Architecture* self);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define Architecture lucy_Architecture
  #define ARCHITECTURE LUCY_ARCHITECTURE
  #define Arch_new lucy_Arch_new
  #define Arch_init lucy_Arch_init
  #define Arch_get_class lucy_Arch_get_class
  #define Arch_get_class_name lucy_Arch_get_class_name
  #define Arch_is_a lucy_Arch_is_a
  #define Arch_Init_Seg_Writer_IMP LUCY_Arch_Init_Seg_Writer_IMP
  #define Arch_Register_Lexicon_Writer_IMP LUCY_Arch_Register_Lexicon_Writer_IMP
  #define Arch_Register_Posting_List_Writer_IMP LUCY_Arch_Register_Posting_List_Writer_IMP
  #define Arch_Register_Doc_Writer_IMP LUCY_Arch_Register_Doc_Writer_IMP
  #define Arch_Register_Sort_Writer_IMP LUCY_Arch_Register_Sort_Writer_IMP
  #define Arch_Register_Highlight_Writer_IMP LUCY_Arch_Register_Highlight_Writer_IMP
  #define Arch_Register_Deletions_Writer_IMP LUCY_Arch_Register_Deletions_Writer_IMP
  #define Arch_Init_Seg_Reader_IMP LUCY_Arch_Init_Seg_Reader_IMP
  #define Arch_Register_Doc_Reader_IMP LUCY_Arch_Register_Doc_Reader_IMP
  #define Arch_Register_Posting_List_Reader_IMP LUCY_Arch_Register_Posting_List_Reader_IMP
  #define Arch_Register_Sort_Reader_IMP LUCY_Arch_Register_Sort_Reader_IMP
  #define Arch_Register_Highlight_Reader_IMP LUCY_Arch_Register_Highlight_Reader_IMP
  #define Arch_Register_Lexicon_Reader_IMP LUCY_Arch_Register_Lexicon_Reader_IMP
  #define Arch_Register_Deletions_Reader_IMP LUCY_Arch_Register_Deletions_Reader_IMP
  #define Arch_Make_Similarity_IMP LUCY_Arch_Make_Similarity_IMP
  #define Arch_Index_Interval_IMP LUCY_Arch_Index_Interval_IMP
  #define Arch_Skip_Interval_IMP LUCY_Arch_Skip_Interval_IMP
  #define Arch_Equals_IMP LUCY_Arch_Equals_IMP
  #define Arch_To_Host LUCY_Arch_To_Host
  #define Arch_To_Host_t LUCY_Arch_To_Host_t
  #define Arch_Clone LUCY_Arch_Clone
  #define Arch_Clone_t LUCY_Arch_Clone_t
  #define Arch_Equals LUCY_Arch_Equals
  #define Arch_Equals_t LUCY_Arch_Equals_t
  #define Arch_Compare_To LUCY_Arch_Compare_To
  #define Arch_Compare_To_t LUCY_Arch_Compare_To_t
  #define Arch_Destroy LUCY_Arch_Destroy
  #define Arch_Destroy_t LUCY_Arch_Destroy_t
  #define Arch_To_String LUCY_Arch_To_String
  #define Arch_To_String_t LUCY_Arch_To_String_t
  #define Arch_Init_Seg_Writer LUCY_Arch_Init_Seg_Writer
  #define Arch_Init_Seg_Writer_t LUCY_Arch_Init_Seg_Writer_t
  #define Arch_Register_Lexicon_Writer LUCY_Arch_Register_Lexicon_Writer
  #define Arch_Register_Lexicon_Writer_t LUCY_Arch_Register_Lexicon_Writer_t
  #define Arch_Register_Posting_List_Writer LUCY_Arch_Register_Posting_List_Writer
  #define Arch_Register_Posting_List_Writer_t LUCY_Arch_Register_Posting_List_Writer_t
  #define Arch_Register_Doc_Writer LUCY_Arch_Register_Doc_Writer
  #define Arch_Register_Doc_Writer_t LUCY_Arch_Register_Doc_Writer_t
  #define Arch_Register_Sort_Writer LUCY_Arch_Register_Sort_Writer
  #define Arch_Register_Sort_Writer_t LUCY_Arch_Register_Sort_Writer_t
  #define Arch_Register_Highlight_Writer LUCY_Arch_Register_Highlight_Writer
  #define Arch_Register_Highlight_Writer_t LUCY_Arch_Register_Highlight_Writer_t
  #define Arch_Register_Deletions_Writer LUCY_Arch_Register_Deletions_Writer
  #define Arch_Register_Deletions_Writer_t LUCY_Arch_Register_Deletions_Writer_t
  #define Arch_Init_Seg_Reader LUCY_Arch_Init_Seg_Reader
  #define Arch_Init_Seg_Reader_t LUCY_Arch_Init_Seg_Reader_t
  #define Arch_Register_Doc_Reader LUCY_Arch_Register_Doc_Reader
  #define Arch_Register_Doc_Reader_t LUCY_Arch_Register_Doc_Reader_t
  #define Arch_Register_Posting_List_Reader LUCY_Arch_Register_Posting_List_Reader
  #define Arch_Register_Posting_List_Reader_t LUCY_Arch_Register_Posting_List_Reader_t
  #define Arch_Register_Sort_Reader LUCY_Arch_Register_Sort_Reader
  #define Arch_Register_Sort_Reader_t LUCY_Arch_Register_Sort_Reader_t
  #define Arch_Register_Highlight_Reader LUCY_Arch_Register_Highlight_Reader
  #define Arch_Register_Highlight_Reader_t LUCY_Arch_Register_Highlight_Reader_t
  #define Arch_Register_Lexicon_Reader LUCY_Arch_Register_Lexicon_Reader
  #define Arch_Register_Lexicon_Reader_t LUCY_Arch_Register_Lexicon_Reader_t
  #define Arch_Register_Deletions_Reader LUCY_Arch_Register_Deletions_Reader
  #define Arch_Register_Deletions_Reader_t LUCY_Arch_Register_Deletions_Reader_t
  #define Arch_Make_Similarity LUCY_Arch_Make_Similarity
  #define Arch_Make_Similarity_t LUCY_Arch_Make_Similarity_t
  #define Arch_Index_Interval LUCY_Arch_Index_Interval
  #define Arch_Index_Interval_t LUCY_Arch_Index_Interval_t
  #define Arch_Skip_Interval LUCY_Arch_Skip_Interval
  #define Arch_Skip_Interval_t LUCY_Arch_Skip_Interval_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_PLAN_ARCHITECTURE */




