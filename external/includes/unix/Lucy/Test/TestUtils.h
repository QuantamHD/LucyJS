/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_TEST_TESTUTILS
#define H_LUCY_TEST_TESTUTILS 1


#ifdef __cplusplus
extern "C" {
#endif

#include "testlucy_parcel.h"

/* Declare this class's inert variables.
 */



/* Declare this class's inert functions.
 */

TESTLUCY_VISIBLE cfish_Vector*
testlucy_TestUtils_doc_set(void);

TESTLUCY_VISIBLE lucy_TermQuery*
testlucy_TestUtils_make_term_query(const char* field, const char* term);

TESTLUCY_VISIBLE lucy_PhraseQuery*
testlucy_TestUtils_make_phrase_query(const char* field, ...);

TESTLUCY_VISIBLE lucy_LeafQuery*
testlucy_TestUtils_make_leaf_query(const char* field, const char* term);

TESTLUCY_VISIBLE lucy_NOTQuery*
testlucy_TestUtils_make_not_query(lucy_Query* negated_query);

TESTLUCY_VISIBLE lucy_RangeQuery*
testlucy_TestUtils_make_range_query(const char* field, const char* lower_term, const char* upper_term, bool include_lower, bool include_upper);

TESTLUCY_VISIBLE lucy_PolyQuery*
testlucy_TestUtils_make_poly_query(uint32_t boolop, ...);

TESTLUCY_VISIBLE void
testlucy_TestUtils_test_analyzer(cfish_TestBatchRunner* runner, lucy_Analyzer* analyzer, cfish_String* source, cfish_Vector* expected, const char* message);

TESTLUCY_VISIBLE lucy_FSFolder*
testlucy_TestUtils_modules_folder(void);



/* Define "short names" for this class's symbols.
 */

#ifdef TESTLUCY_USE_SHORT_NAMES
  #define TestUtils_doc_set testlucy_TestUtils_doc_set
  #define TestUtils_make_term_query testlucy_TestUtils_make_term_query
  #define TestUtils_make_phrase_query testlucy_TestUtils_make_phrase_query
  #define TestUtils_make_leaf_query testlucy_TestUtils_make_leaf_query
  #define TestUtils_make_not_query testlucy_TestUtils_make_not_query
  #define TestUtils_make_range_query testlucy_TestUtils_make_range_query
  #define TestUtils_make_poly_query testlucy_TestUtils_make_poly_query
  #define TestUtils_test_analyzer testlucy_TestUtils_test_analyzer
  #define TestUtils_modules_folder testlucy_TestUtils_modules_folder
#endif /* TESTLUCY_USE_SHORT_NAMES */



#define LUCY_TESTUTILS_BOOLOP_OR  1
#define LUCY_TESTUTILS_BOOLOP_AND 2
#ifdef LUCY_USE_SHORT_NAMES
  #define BOOLOP_OR        LUCY_TESTUTILS_BOOLOP_OR
  #define BOOLOP_AND       LUCY_TESTUTILS_BOOLOP_AND
#endif




#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_TEST_TESTUTILS */




