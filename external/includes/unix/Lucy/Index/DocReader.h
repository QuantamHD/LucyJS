/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_INDEX_DOCREADER
#define H_LUCY_INDEX_DOCREADER 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Lucy/Index/DataReader.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_DOCREADER
extern uint32_t lucy_DocReader_IVARS_OFFSET;
typedef struct lucy_DocReaderIVARS lucy_DocReaderIVARS;
static CFISH_INLINE lucy_DocReaderIVARS*
lucy_DocReader_IVARS(lucy_DocReader *self) {
   char *ptr = (char*)self + lucy_DocReader_IVARS_OFFSET;
   return (lucy_DocReaderIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define DocReaderIVARS lucy_DocReaderIVARS
  #define DocReader_IVARS lucy_DocReader_IVARS
#endif

struct lucy_DocReaderIVARS {
    lucy_Schema* schema;
    lucy_Folder* folder;
    lucy_Snapshot* snapshot;
    cfish_Vector* segments;
    lucy_Segment* segment;
    int32_t seg_tick;
};

#endif /* C_LUCY_DOCREADER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_DocReader*
lucy_DocReader_init(lucy_DocReader* self, lucy_Schema* schema, lucy_Folder* folder, lucy_Snapshot* snapshot, cfish_Vector* segments, int32_t seg_tick);

lucy_HitDoc*
LUCY_DocReader_Fetch_Doc_IMP(lucy_DocReader* self, int32_t doc_id);

lucy_DocReader*
LUCY_DocReader_Aggregator_IMP(lucy_DocReader* self, cfish_Vector* readers, lucy_I32Array* offsets);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_DocReader_To_Host_t)(lucy_DocReader* self, void* vcache);

typedef cfish_Obj*
(*LUCY_DocReader_Clone_t)(lucy_DocReader* self);

typedef bool
(*LUCY_DocReader_Equals_t)(lucy_DocReader* self, cfish_Obj* other);

typedef int32_t
(*LUCY_DocReader_Compare_To_t)(lucy_DocReader* self, cfish_Obj* other);

typedef void
(*LUCY_DocReader_Destroy_t)(lucy_DocReader* self);

typedef cfish_String*
(*LUCY_DocReader_To_String_t)(lucy_DocReader* self);

typedef lucy_DocReader*
(*LUCY_DocReader_Aggregator_t)(lucy_DocReader* self, cfish_Vector* readers, lucy_I32Array* offsets);

typedef lucy_Schema*
(*LUCY_DocReader_Get_Schema_t)(lucy_DocReader* self);

typedef lucy_Folder*
(*LUCY_DocReader_Get_Folder_t)(lucy_DocReader* self);

typedef lucy_Snapshot*
(*LUCY_DocReader_Get_Snapshot_t)(lucy_DocReader* self);

typedef cfish_Vector*
(*LUCY_DocReader_Get_Segments_t)(lucy_DocReader* self);

typedef lucy_Segment*
(*LUCY_DocReader_Get_Segment_t)(lucy_DocReader* self);

typedef int32_t
(*LUCY_DocReader_Get_Seg_Tick_t)(lucy_DocReader* self);

typedef void
(*LUCY_DocReader_Close_t)(lucy_DocReader* self);

typedef lucy_HitDoc*
(*LUCY_DocReader_Fetch_Doc_t)(lucy_DocReader* self, int32_t doc_id);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_DocReader_get_class(lucy_DocReader *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_DocReader_get_class_name(lucy_DocReader *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_DocReader_is_a(lucy_DocReader *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_DocReader_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_DocReader_To_Host(lucy_DocReader* self, void* vcache) {
    const LUCY_DocReader_To_Host_t method = (LUCY_DocReader_To_Host_t)cfish_obj_method(self, LUCY_DocReader_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_DocReader_Clone(lucy_DocReader* self) {
    const LUCY_DocReader_Clone_t method = (LUCY_DocReader_Clone_t)cfish_obj_method(self, LUCY_DocReader_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_DocReader_Equals(lucy_DocReader* self, cfish_Obj* other) {
    const LUCY_DocReader_Equals_t method = (LUCY_DocReader_Equals_t)cfish_obj_method(self, LUCY_DocReader_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_DocReader_Compare_To(lucy_DocReader* self, cfish_Obj* other) {
    const LUCY_DocReader_Compare_To_t method = (LUCY_DocReader_Compare_To_t)cfish_obj_method(self, LUCY_DocReader_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_DocReader_Destroy(lucy_DocReader* self) {
    const LUCY_DocReader_Destroy_t method = (LUCY_DocReader_Destroy_t)cfish_obj_method(self, LUCY_DocReader_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_DocReader_To_String(lucy_DocReader* self) {
    const LUCY_DocReader_To_String_t method = (LUCY_DocReader_To_String_t)cfish_obj_method(self, LUCY_DocReader_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Aggregator_OFFSET;
static CFISH_INLINE lucy_DocReader*
LUCY_DocReader_Aggregator(lucy_DocReader* self, cfish_Vector* readers, lucy_I32Array* offsets) {
    const LUCY_DocReader_Aggregator_t method = (LUCY_DocReader_Aggregator_t)cfish_obj_method(self, LUCY_DocReader_Aggregator_OFFSET);
    return method(self, readers, offsets);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Get_Schema_OFFSET;
static CFISH_INLINE lucy_Schema*
LUCY_DocReader_Get_Schema(lucy_DocReader* self) {
    const LUCY_DocReader_Get_Schema_t method = (LUCY_DocReader_Get_Schema_t)cfish_obj_method(self, LUCY_DocReader_Get_Schema_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Get_Folder_OFFSET;
static CFISH_INLINE lucy_Folder*
LUCY_DocReader_Get_Folder(lucy_DocReader* self) {
    const LUCY_DocReader_Get_Folder_t method = (LUCY_DocReader_Get_Folder_t)cfish_obj_method(self, LUCY_DocReader_Get_Folder_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Get_Snapshot_OFFSET;
static CFISH_INLINE lucy_Snapshot*
LUCY_DocReader_Get_Snapshot(lucy_DocReader* self) {
    const LUCY_DocReader_Get_Snapshot_t method = (LUCY_DocReader_Get_Snapshot_t)cfish_obj_method(self, LUCY_DocReader_Get_Snapshot_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Get_Segments_OFFSET;
static CFISH_INLINE cfish_Vector*
LUCY_DocReader_Get_Segments(lucy_DocReader* self) {
    const LUCY_DocReader_Get_Segments_t method = (LUCY_DocReader_Get_Segments_t)cfish_obj_method(self, LUCY_DocReader_Get_Segments_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Get_Segment_OFFSET;
static CFISH_INLINE lucy_Segment*
LUCY_DocReader_Get_Segment(lucy_DocReader* self) {
    const LUCY_DocReader_Get_Segment_t method = (LUCY_DocReader_Get_Segment_t)cfish_obj_method(self, LUCY_DocReader_Get_Segment_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Get_Seg_Tick_OFFSET;
static CFISH_INLINE int32_t
LUCY_DocReader_Get_Seg_Tick(lucy_DocReader* self) {
    const LUCY_DocReader_Get_Seg_Tick_t method = (LUCY_DocReader_Get_Seg_Tick_t)cfish_obj_method(self, LUCY_DocReader_Get_Seg_Tick_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Close_OFFSET;
static CFISH_INLINE void
LUCY_DocReader_Close(lucy_DocReader* self) {
    const LUCY_DocReader_Close_t method = (LUCY_DocReader_Close_t)cfish_obj_method(self, LUCY_DocReader_Close_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DocReader_Fetch_Doc_OFFSET;
static CFISH_INLINE lucy_HitDoc*
LUCY_DocReader_Fetch_Doc(lucy_DocReader* self, int32_t doc_id) {
    const LUCY_DocReader_Fetch_Doc_t method = (LUCY_DocReader_Fetch_Doc_t)cfish_obj_method(self, LUCY_DocReader_Fetch_Doc_OFFSET);
    return method(self, doc_id);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_DocReader_Fetch_Doc_OVERRIDE NULL
#else
lucy_HitDoc*
Lucy_DocReader_Fetch_Doc_OVERRIDE(lucy_DocReader* self, int32_t doc_id);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define DocReader lucy_DocReader
  #define DOCREADER LUCY_DOCREADER
  #define DocReader_init lucy_DocReader_init
  #define DocReader_get_class lucy_DocReader_get_class
  #define DocReader_get_class_name lucy_DocReader_get_class_name
  #define DocReader_is_a lucy_DocReader_is_a
  #define DocReader_Fetch_Doc_IMP LUCY_DocReader_Fetch_Doc_IMP
  #define DocReader_Aggregator_IMP LUCY_DocReader_Aggregator_IMP
  #define DocReader_To_Host LUCY_DocReader_To_Host
  #define DocReader_To_Host_t LUCY_DocReader_To_Host_t
  #define DocReader_Clone LUCY_DocReader_Clone
  #define DocReader_Clone_t LUCY_DocReader_Clone_t
  #define DocReader_Equals LUCY_DocReader_Equals
  #define DocReader_Equals_t LUCY_DocReader_Equals_t
  #define DocReader_Compare_To LUCY_DocReader_Compare_To
  #define DocReader_Compare_To_t LUCY_DocReader_Compare_To_t
  #define DocReader_Destroy LUCY_DocReader_Destroy
  #define DocReader_Destroy_t LUCY_DocReader_Destroy_t
  #define DocReader_To_String LUCY_DocReader_To_String
  #define DocReader_To_String_t LUCY_DocReader_To_String_t
  #define DocReader_Aggregator LUCY_DocReader_Aggregator
  #define DocReader_Aggregator_t LUCY_DocReader_Aggregator_t
  #define DocReader_Get_Schema LUCY_DocReader_Get_Schema
  #define DocReader_Get_Schema_t LUCY_DocReader_Get_Schema_t
  #define DocReader_Get_Folder LUCY_DocReader_Get_Folder
  #define DocReader_Get_Folder_t LUCY_DocReader_Get_Folder_t
  #define DocReader_Get_Snapshot LUCY_DocReader_Get_Snapshot
  #define DocReader_Get_Snapshot_t LUCY_DocReader_Get_Snapshot_t
  #define DocReader_Get_Segments LUCY_DocReader_Get_Segments
  #define DocReader_Get_Segments_t LUCY_DocReader_Get_Segments_t
  #define DocReader_Get_Segment LUCY_DocReader_Get_Segment
  #define DocReader_Get_Segment_t LUCY_DocReader_Get_Segment_t
  #define DocReader_Get_Seg_Tick LUCY_DocReader_Get_Seg_Tick
  #define DocReader_Get_Seg_Tick_t LUCY_DocReader_Get_Seg_Tick_t
  #define DocReader_Close LUCY_DocReader_Close
  #define DocReader_Close_t LUCY_DocReader_Close_t
  #define DocReader_Fetch_Doc LUCY_DocReader_Fetch_Doc
  #define DocReader_Fetch_Doc_t LUCY_DocReader_Fetch_Doc_t
#endif /* LUCY_USE_SHORT_NAMES */



/* Include the header for this class's parent. 
 */

#include "Lucy/Index/DocReader.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_POLYDOCREADER
extern uint32_t lucy_PolyDocReader_IVARS_OFFSET;
typedef struct lucy_PolyDocReaderIVARS lucy_PolyDocReaderIVARS;
static CFISH_INLINE lucy_PolyDocReaderIVARS*
lucy_PolyDocReader_IVARS(lucy_PolyDocReader *self) {
   char *ptr = (char*)self + lucy_PolyDocReader_IVARS_OFFSET;
   return (lucy_PolyDocReaderIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define PolyDocReaderIVARS lucy_PolyDocReaderIVARS
  #define PolyDocReader_IVARS lucy_PolyDocReader_IVARS
#endif

struct lucy_PolyDocReaderIVARS {
    lucy_Schema* schema;
    lucy_Folder* folder;
    lucy_Snapshot* snapshot;
    cfish_Vector* segments;
    lucy_Segment* segment;
    int32_t seg_tick;
    cfish_Vector* readers;
    lucy_I32Array* offsets;
};

#endif /* C_LUCY_POLYDOCREADER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_PolyDocReader*
lucy_PolyDocReader_new(cfish_Vector* readers, lucy_I32Array* offsets);

LUCY_VISIBLE lucy_PolyDocReader*
lucy_PolyDocReader_init(lucy_PolyDocReader* self, cfish_Vector* readers, lucy_I32Array* offsets);

lucy_HitDoc*
LUCY_PolyDocReader_Fetch_Doc_IMP(lucy_PolyDocReader* self, int32_t doc_id);

void
LUCY_PolyDocReader_Close_IMP(lucy_PolyDocReader* self);

void
LUCY_PolyDocReader_Destroy_IMP(lucy_PolyDocReader* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_PolyDocReader_To_Host_t)(lucy_PolyDocReader* self, void* vcache);

typedef cfish_Obj*
(*LUCY_PolyDocReader_Clone_t)(lucy_PolyDocReader* self);

typedef bool
(*LUCY_PolyDocReader_Equals_t)(lucy_PolyDocReader* self, cfish_Obj* other);

typedef int32_t
(*LUCY_PolyDocReader_Compare_To_t)(lucy_PolyDocReader* self, cfish_Obj* other);

typedef void
(*LUCY_PolyDocReader_Destroy_t)(lucy_PolyDocReader* self);

typedef cfish_String*
(*LUCY_PolyDocReader_To_String_t)(lucy_PolyDocReader* self);

typedef lucy_DocReader*
(*LUCY_PolyDocReader_Aggregator_t)(lucy_PolyDocReader* self, cfish_Vector* readers, lucy_I32Array* offsets);

typedef lucy_Schema*
(*LUCY_PolyDocReader_Get_Schema_t)(lucy_PolyDocReader* self);

typedef lucy_Folder*
(*LUCY_PolyDocReader_Get_Folder_t)(lucy_PolyDocReader* self);

typedef lucy_Snapshot*
(*LUCY_PolyDocReader_Get_Snapshot_t)(lucy_PolyDocReader* self);

typedef cfish_Vector*
(*LUCY_PolyDocReader_Get_Segments_t)(lucy_PolyDocReader* self);

typedef lucy_Segment*
(*LUCY_PolyDocReader_Get_Segment_t)(lucy_PolyDocReader* self);

typedef int32_t
(*LUCY_PolyDocReader_Get_Seg_Tick_t)(lucy_PolyDocReader* self);

typedef void
(*LUCY_PolyDocReader_Close_t)(lucy_PolyDocReader* self);

typedef lucy_HitDoc*
(*LUCY_PolyDocReader_Fetch_Doc_t)(lucy_PolyDocReader* self, int32_t doc_id);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_PolyDocReader_get_class(lucy_PolyDocReader *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_PolyDocReader_get_class_name(lucy_PolyDocReader *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_PolyDocReader_is_a(lucy_PolyDocReader *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_PolyDocReader_To_Host(lucy_PolyDocReader* self, void* vcache) {
    const LUCY_PolyDocReader_To_Host_t method = (LUCY_PolyDocReader_To_Host_t)cfish_obj_method(self, LUCY_PolyDocReader_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_PolyDocReader_Clone(lucy_PolyDocReader* self) {
    const LUCY_PolyDocReader_Clone_t method = (LUCY_PolyDocReader_Clone_t)cfish_obj_method(self, LUCY_PolyDocReader_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_PolyDocReader_Equals(lucy_PolyDocReader* self, cfish_Obj* other) {
    const LUCY_PolyDocReader_Equals_t method = (LUCY_PolyDocReader_Equals_t)cfish_obj_method(self, LUCY_PolyDocReader_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_PolyDocReader_Compare_To(lucy_PolyDocReader* self, cfish_Obj* other) {
    const LUCY_PolyDocReader_Compare_To_t method = (LUCY_PolyDocReader_Compare_To_t)cfish_obj_method(self, LUCY_PolyDocReader_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_PolyDocReader_Destroy(lucy_PolyDocReader* self) {
    const LUCY_PolyDocReader_Destroy_t method = (LUCY_PolyDocReader_Destroy_t)cfish_obj_method(self, LUCY_PolyDocReader_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_PolyDocReader_To_String(lucy_PolyDocReader* self) {
    const LUCY_PolyDocReader_To_String_t method = (LUCY_PolyDocReader_To_String_t)cfish_obj_method(self, LUCY_PolyDocReader_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Aggregator_OFFSET;
static CFISH_INLINE lucy_DocReader*
LUCY_PolyDocReader_Aggregator(lucy_PolyDocReader* self, cfish_Vector* readers, lucy_I32Array* offsets) {
    const LUCY_PolyDocReader_Aggregator_t method = (LUCY_PolyDocReader_Aggregator_t)cfish_obj_method(self, LUCY_PolyDocReader_Aggregator_OFFSET);
    return method(self, readers, offsets);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Get_Schema_OFFSET;
static CFISH_INLINE lucy_Schema*
LUCY_PolyDocReader_Get_Schema(lucy_PolyDocReader* self) {
    const LUCY_PolyDocReader_Get_Schema_t method = (LUCY_PolyDocReader_Get_Schema_t)cfish_obj_method(self, LUCY_PolyDocReader_Get_Schema_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Get_Folder_OFFSET;
static CFISH_INLINE lucy_Folder*
LUCY_PolyDocReader_Get_Folder(lucy_PolyDocReader* self) {
    const LUCY_PolyDocReader_Get_Folder_t method = (LUCY_PolyDocReader_Get_Folder_t)cfish_obj_method(self, LUCY_PolyDocReader_Get_Folder_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Get_Snapshot_OFFSET;
static CFISH_INLINE lucy_Snapshot*
LUCY_PolyDocReader_Get_Snapshot(lucy_PolyDocReader* self) {
    const LUCY_PolyDocReader_Get_Snapshot_t method = (LUCY_PolyDocReader_Get_Snapshot_t)cfish_obj_method(self, LUCY_PolyDocReader_Get_Snapshot_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Get_Segments_OFFSET;
static CFISH_INLINE cfish_Vector*
LUCY_PolyDocReader_Get_Segments(lucy_PolyDocReader* self) {
    const LUCY_PolyDocReader_Get_Segments_t method = (LUCY_PolyDocReader_Get_Segments_t)cfish_obj_method(self, LUCY_PolyDocReader_Get_Segments_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Get_Segment_OFFSET;
static CFISH_INLINE lucy_Segment*
LUCY_PolyDocReader_Get_Segment(lucy_PolyDocReader* self) {
    const LUCY_PolyDocReader_Get_Segment_t method = (LUCY_PolyDocReader_Get_Segment_t)cfish_obj_method(self, LUCY_PolyDocReader_Get_Segment_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Get_Seg_Tick_OFFSET;
static CFISH_INLINE int32_t
LUCY_PolyDocReader_Get_Seg_Tick(lucy_PolyDocReader* self) {
    const LUCY_PolyDocReader_Get_Seg_Tick_t method = (LUCY_PolyDocReader_Get_Seg_Tick_t)cfish_obj_method(self, LUCY_PolyDocReader_Get_Seg_Tick_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Close_OFFSET;
static CFISH_INLINE void
LUCY_PolyDocReader_Close(lucy_PolyDocReader* self) {
    const LUCY_PolyDocReader_Close_t method = (LUCY_PolyDocReader_Close_t)cfish_obj_method(self, LUCY_PolyDocReader_Close_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDocReader_Fetch_Doc_OFFSET;
static CFISH_INLINE lucy_HitDoc*
LUCY_PolyDocReader_Fetch_Doc(lucy_PolyDocReader* self, int32_t doc_id) {
    const LUCY_PolyDocReader_Fetch_Doc_t method = (LUCY_PolyDocReader_Fetch_Doc_t)cfish_obj_method(self, LUCY_PolyDocReader_Fetch_Doc_OFFSET);
    return method(self, doc_id);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define PolyDocReader lucy_PolyDocReader
  #define POLYDOCREADER LUCY_POLYDOCREADER
  #define PolyDocReader_new lucy_PolyDocReader_new
  #define PolyDocReader_init lucy_PolyDocReader_init
  #define PolyDocReader_get_class lucy_PolyDocReader_get_class
  #define PolyDocReader_get_class_name lucy_PolyDocReader_get_class_name
  #define PolyDocReader_is_a lucy_PolyDocReader_is_a
  #define PolyDocReader_Fetch_Doc_IMP LUCY_PolyDocReader_Fetch_Doc_IMP
  #define PolyDocReader_Close_IMP LUCY_PolyDocReader_Close_IMP
  #define PolyDocReader_Destroy_IMP LUCY_PolyDocReader_Destroy_IMP
  #define PolyDocReader_To_Host LUCY_PolyDocReader_To_Host
  #define PolyDocReader_To_Host_t LUCY_PolyDocReader_To_Host_t
  #define PolyDocReader_Clone LUCY_PolyDocReader_Clone
  #define PolyDocReader_Clone_t LUCY_PolyDocReader_Clone_t
  #define PolyDocReader_Equals LUCY_PolyDocReader_Equals
  #define PolyDocReader_Equals_t LUCY_PolyDocReader_Equals_t
  #define PolyDocReader_Compare_To LUCY_PolyDocReader_Compare_To
  #define PolyDocReader_Compare_To_t LUCY_PolyDocReader_Compare_To_t
  #define PolyDocReader_Destroy LUCY_PolyDocReader_Destroy
  #define PolyDocReader_Destroy_t LUCY_PolyDocReader_Destroy_t
  #define PolyDocReader_To_String LUCY_PolyDocReader_To_String
  #define PolyDocReader_To_String_t LUCY_PolyDocReader_To_String_t
  #define PolyDocReader_Aggregator LUCY_PolyDocReader_Aggregator
  #define PolyDocReader_Aggregator_t LUCY_PolyDocReader_Aggregator_t
  #define PolyDocReader_Get_Schema LUCY_PolyDocReader_Get_Schema
  #define PolyDocReader_Get_Schema_t LUCY_PolyDocReader_Get_Schema_t
  #define PolyDocReader_Get_Folder LUCY_PolyDocReader_Get_Folder
  #define PolyDocReader_Get_Folder_t LUCY_PolyDocReader_Get_Folder_t
  #define PolyDocReader_Get_Snapshot LUCY_PolyDocReader_Get_Snapshot
  #define PolyDocReader_Get_Snapshot_t LUCY_PolyDocReader_Get_Snapshot_t
  #define PolyDocReader_Get_Segments LUCY_PolyDocReader_Get_Segments
  #define PolyDocReader_Get_Segments_t LUCY_PolyDocReader_Get_Segments_t
  #define PolyDocReader_Get_Segment LUCY_PolyDocReader_Get_Segment
  #define PolyDocReader_Get_Segment_t LUCY_PolyDocReader_Get_Segment_t
  #define PolyDocReader_Get_Seg_Tick LUCY_PolyDocReader_Get_Seg_Tick
  #define PolyDocReader_Get_Seg_Tick_t LUCY_PolyDocReader_Get_Seg_Tick_t
  #define PolyDocReader_Close LUCY_PolyDocReader_Close
  #define PolyDocReader_Close_t LUCY_PolyDocReader_Close_t
  #define PolyDocReader_Fetch_Doc LUCY_PolyDocReader_Fetch_Doc
  #define PolyDocReader_Fetch_Doc_t LUCY_PolyDocReader_Fetch_Doc_t
#endif /* LUCY_USE_SHORT_NAMES */



/* Include the header for this class's parent. 
 */

#include "Lucy/Index/DocReader.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_DEFAULTDOCREADER
extern uint32_t lucy_DefDocReader_IVARS_OFFSET;
typedef struct lucy_DefaultDocReaderIVARS lucy_DefaultDocReaderIVARS;
static CFISH_INLINE lucy_DefaultDocReaderIVARS*
lucy_DefDocReader_IVARS(lucy_DefaultDocReader *self) {
   char *ptr = (char*)self + lucy_DefDocReader_IVARS_OFFSET;
   return (lucy_DefaultDocReaderIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define DefaultDocReaderIVARS lucy_DefaultDocReaderIVARS
  #define DefDocReader_IVARS lucy_DefDocReader_IVARS
#endif

struct lucy_DefaultDocReaderIVARS {
    lucy_Schema* schema;
    lucy_Folder* folder;
    lucy_Snapshot* snapshot;
    cfish_Vector* segments;
    lucy_Segment* segment;
    int32_t seg_tick;
    lucy_InStream* dat_in;
    lucy_InStream* ix_in;
};

#endif /* C_LUCY_DEFAULTDOCREADER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_DefaultDocReader*
lucy_DefDocReader_new(lucy_Schema* schema, lucy_Folder* folder, lucy_Snapshot* snapshot, cfish_Vector* segments, int32_t seg_tick);

LUCY_VISIBLE lucy_DefaultDocReader*
lucy_DefDocReader_init(lucy_DefaultDocReader* self, lucy_Schema* schema, lucy_Folder* folder, lucy_Snapshot* snapshot, cfish_Vector* segments, int32_t seg_tick);

lucy_HitDoc*
LUCY_DefDocReader_Fetch_Doc_IMP(lucy_DefaultDocReader* self, int32_t doc_id);

void
LUCY_DefDocReader_Read_Record_IMP(lucy_DefaultDocReader* self, cfish_ByteBuf* buffer, int32_t doc_id);

void
LUCY_DefDocReader_Close_IMP(lucy_DefaultDocReader* self);

void
LUCY_DefDocReader_Destroy_IMP(lucy_DefaultDocReader* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_DefDocReader_To_Host_t)(lucy_DefaultDocReader* self, void* vcache);

typedef cfish_Obj*
(*LUCY_DefDocReader_Clone_t)(lucy_DefaultDocReader* self);

typedef bool
(*LUCY_DefDocReader_Equals_t)(lucy_DefaultDocReader* self, cfish_Obj* other);

typedef int32_t
(*LUCY_DefDocReader_Compare_To_t)(lucy_DefaultDocReader* self, cfish_Obj* other);

typedef void
(*LUCY_DefDocReader_Destroy_t)(lucy_DefaultDocReader* self);

typedef cfish_String*
(*LUCY_DefDocReader_To_String_t)(lucy_DefaultDocReader* self);

typedef lucy_DocReader*
(*LUCY_DefDocReader_Aggregator_t)(lucy_DefaultDocReader* self, cfish_Vector* readers, lucy_I32Array* offsets);

typedef lucy_Schema*
(*LUCY_DefDocReader_Get_Schema_t)(lucy_DefaultDocReader* self);

typedef lucy_Folder*
(*LUCY_DefDocReader_Get_Folder_t)(lucy_DefaultDocReader* self);

typedef lucy_Snapshot*
(*LUCY_DefDocReader_Get_Snapshot_t)(lucy_DefaultDocReader* self);

typedef cfish_Vector*
(*LUCY_DefDocReader_Get_Segments_t)(lucy_DefaultDocReader* self);

typedef lucy_Segment*
(*LUCY_DefDocReader_Get_Segment_t)(lucy_DefaultDocReader* self);

typedef int32_t
(*LUCY_DefDocReader_Get_Seg_Tick_t)(lucy_DefaultDocReader* self);

typedef void
(*LUCY_DefDocReader_Close_t)(lucy_DefaultDocReader* self);

typedef lucy_HitDoc*
(*LUCY_DefDocReader_Fetch_Doc_t)(lucy_DefaultDocReader* self, int32_t doc_id);

typedef void
(*LUCY_DefDocReader_Read_Record_t)(lucy_DefaultDocReader* self, cfish_ByteBuf* buffer, int32_t doc_id);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_DefDocReader_get_class(lucy_DefaultDocReader *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_DefDocReader_get_class_name(lucy_DefaultDocReader *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_DefDocReader_is_a(lucy_DefaultDocReader *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_DefDocReader_To_Host(lucy_DefaultDocReader* self, void* vcache) {
    const LUCY_DefDocReader_To_Host_t method = (LUCY_DefDocReader_To_Host_t)cfish_obj_method(self, LUCY_DefDocReader_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_DefDocReader_Clone(lucy_DefaultDocReader* self) {
    const LUCY_DefDocReader_Clone_t method = (LUCY_DefDocReader_Clone_t)cfish_obj_method(self, LUCY_DefDocReader_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_DefDocReader_Equals(lucy_DefaultDocReader* self, cfish_Obj* other) {
    const LUCY_DefDocReader_Equals_t method = (LUCY_DefDocReader_Equals_t)cfish_obj_method(self, LUCY_DefDocReader_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_DefDocReader_Compare_To(lucy_DefaultDocReader* self, cfish_Obj* other) {
    const LUCY_DefDocReader_Compare_To_t method = (LUCY_DefDocReader_Compare_To_t)cfish_obj_method(self, LUCY_DefDocReader_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_DefDocReader_Destroy(lucy_DefaultDocReader* self) {
    const LUCY_DefDocReader_Destroy_t method = (LUCY_DefDocReader_Destroy_t)cfish_obj_method(self, LUCY_DefDocReader_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_DefDocReader_To_String(lucy_DefaultDocReader* self) {
    const LUCY_DefDocReader_To_String_t method = (LUCY_DefDocReader_To_String_t)cfish_obj_method(self, LUCY_DefDocReader_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Aggregator_OFFSET;
static CFISH_INLINE lucy_DocReader*
LUCY_DefDocReader_Aggregator(lucy_DefaultDocReader* self, cfish_Vector* readers, lucy_I32Array* offsets) {
    const LUCY_DefDocReader_Aggregator_t method = (LUCY_DefDocReader_Aggregator_t)cfish_obj_method(self, LUCY_DefDocReader_Aggregator_OFFSET);
    return method(self, readers, offsets);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Get_Schema_OFFSET;
static CFISH_INLINE lucy_Schema*
LUCY_DefDocReader_Get_Schema(lucy_DefaultDocReader* self) {
    const LUCY_DefDocReader_Get_Schema_t method = (LUCY_DefDocReader_Get_Schema_t)cfish_obj_method(self, LUCY_DefDocReader_Get_Schema_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Get_Folder_OFFSET;
static CFISH_INLINE lucy_Folder*
LUCY_DefDocReader_Get_Folder(lucy_DefaultDocReader* self) {
    const LUCY_DefDocReader_Get_Folder_t method = (LUCY_DefDocReader_Get_Folder_t)cfish_obj_method(self, LUCY_DefDocReader_Get_Folder_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Get_Snapshot_OFFSET;
static CFISH_INLINE lucy_Snapshot*
LUCY_DefDocReader_Get_Snapshot(lucy_DefaultDocReader* self) {
    const LUCY_DefDocReader_Get_Snapshot_t method = (LUCY_DefDocReader_Get_Snapshot_t)cfish_obj_method(self, LUCY_DefDocReader_Get_Snapshot_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Get_Segments_OFFSET;
static CFISH_INLINE cfish_Vector*
LUCY_DefDocReader_Get_Segments(lucy_DefaultDocReader* self) {
    const LUCY_DefDocReader_Get_Segments_t method = (LUCY_DefDocReader_Get_Segments_t)cfish_obj_method(self, LUCY_DefDocReader_Get_Segments_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Get_Segment_OFFSET;
static CFISH_INLINE lucy_Segment*
LUCY_DefDocReader_Get_Segment(lucy_DefaultDocReader* self) {
    const LUCY_DefDocReader_Get_Segment_t method = (LUCY_DefDocReader_Get_Segment_t)cfish_obj_method(self, LUCY_DefDocReader_Get_Segment_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Get_Seg_Tick_OFFSET;
static CFISH_INLINE int32_t
LUCY_DefDocReader_Get_Seg_Tick(lucy_DefaultDocReader* self) {
    const LUCY_DefDocReader_Get_Seg_Tick_t method = (LUCY_DefDocReader_Get_Seg_Tick_t)cfish_obj_method(self, LUCY_DefDocReader_Get_Seg_Tick_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Close_OFFSET;
static CFISH_INLINE void
LUCY_DefDocReader_Close(lucy_DefaultDocReader* self) {
    const LUCY_DefDocReader_Close_t method = (LUCY_DefDocReader_Close_t)cfish_obj_method(self, LUCY_DefDocReader_Close_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Fetch_Doc_OFFSET;
static CFISH_INLINE lucy_HitDoc*
LUCY_DefDocReader_Fetch_Doc(lucy_DefaultDocReader* self, int32_t doc_id) {
    const LUCY_DefDocReader_Fetch_Doc_t method = (LUCY_DefDocReader_Fetch_Doc_t)cfish_obj_method(self, LUCY_DefDocReader_Fetch_Doc_OFFSET);
    return method(self, doc_id);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDocReader_Read_Record_OFFSET;
static CFISH_INLINE void
LUCY_DefDocReader_Read_Record(lucy_DefaultDocReader* self, cfish_ByteBuf* buffer, int32_t doc_id) {
    const LUCY_DefDocReader_Read_Record_t method = (LUCY_DefDocReader_Read_Record_t)cfish_obj_method(self, LUCY_DefDocReader_Read_Record_OFFSET);
    method(self, buffer, doc_id);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_DefDocReader_Read_Record_OVERRIDE NULL
#else
void
Lucy_DefDocReader_Read_Record_OVERRIDE(lucy_DefaultDocReader* self, cfish_ByteBuf* buffer, int32_t doc_id);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define DefaultDocReader lucy_DefaultDocReader
  #define DEFAULTDOCREADER LUCY_DEFAULTDOCREADER
  #define DefDocReader_new lucy_DefDocReader_new
  #define DefDocReader_init lucy_DefDocReader_init
  #define DefDocReader_get_class lucy_DefDocReader_get_class
  #define DefDocReader_get_class_name lucy_DefDocReader_get_class_name
  #define DefDocReader_is_a lucy_DefDocReader_is_a
  #define DefDocReader_Fetch_Doc_IMP LUCY_DefDocReader_Fetch_Doc_IMP
  #define DefDocReader_Read_Record_IMP LUCY_DefDocReader_Read_Record_IMP
  #define DefDocReader_Close_IMP LUCY_DefDocReader_Close_IMP
  #define DefDocReader_Destroy_IMP LUCY_DefDocReader_Destroy_IMP
  #define DefDocReader_To_Host LUCY_DefDocReader_To_Host
  #define DefDocReader_To_Host_t LUCY_DefDocReader_To_Host_t
  #define DefDocReader_Clone LUCY_DefDocReader_Clone
  #define DefDocReader_Clone_t LUCY_DefDocReader_Clone_t
  #define DefDocReader_Equals LUCY_DefDocReader_Equals
  #define DefDocReader_Equals_t LUCY_DefDocReader_Equals_t
  #define DefDocReader_Compare_To LUCY_DefDocReader_Compare_To
  #define DefDocReader_Compare_To_t LUCY_DefDocReader_Compare_To_t
  #define DefDocReader_Destroy LUCY_DefDocReader_Destroy
  #define DefDocReader_Destroy_t LUCY_DefDocReader_Destroy_t
  #define DefDocReader_To_String LUCY_DefDocReader_To_String
  #define DefDocReader_To_String_t LUCY_DefDocReader_To_String_t
  #define DefDocReader_Aggregator LUCY_DefDocReader_Aggregator
  #define DefDocReader_Aggregator_t LUCY_DefDocReader_Aggregator_t
  #define DefDocReader_Get_Schema LUCY_DefDocReader_Get_Schema
  #define DefDocReader_Get_Schema_t LUCY_DefDocReader_Get_Schema_t
  #define DefDocReader_Get_Folder LUCY_DefDocReader_Get_Folder
  #define DefDocReader_Get_Folder_t LUCY_DefDocReader_Get_Folder_t
  #define DefDocReader_Get_Snapshot LUCY_DefDocReader_Get_Snapshot
  #define DefDocReader_Get_Snapshot_t LUCY_DefDocReader_Get_Snapshot_t
  #define DefDocReader_Get_Segments LUCY_DefDocReader_Get_Segments
  #define DefDocReader_Get_Segments_t LUCY_DefDocReader_Get_Segments_t
  #define DefDocReader_Get_Segment LUCY_DefDocReader_Get_Segment
  #define DefDocReader_Get_Segment_t LUCY_DefDocReader_Get_Segment_t
  #define DefDocReader_Get_Seg_Tick LUCY_DefDocReader_Get_Seg_Tick
  #define DefDocReader_Get_Seg_Tick_t LUCY_DefDocReader_Get_Seg_Tick_t
  #define DefDocReader_Close LUCY_DefDocReader_Close
  #define DefDocReader_Close_t LUCY_DefDocReader_Close_t
  #define DefDocReader_Fetch_Doc LUCY_DefDocReader_Fetch_Doc
  #define DefDocReader_Fetch_Doc_t LUCY_DefDocReader_Fetch_Doc_t
  #define DefDocReader_Read_Record LUCY_DefDocReader_Read_Record
  #define DefDocReader_Read_Record_t LUCY_DefDocReader_Read_Record_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_INDEX_DOCREADER */




