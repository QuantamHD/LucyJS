/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_SEARCH_REQUIREDOPTIONALMATCHER
#define H_LUCY_SEARCH_REQUIREDOPTIONALMATCHER 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Lucy/Search/PolyMatcher.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_REQUIREDOPTIONALMATCHER
extern uint32_t lucy_ReqOptMatcher_IVARS_OFFSET;
typedef struct lucy_RequiredOptionalMatcherIVARS lucy_RequiredOptionalMatcherIVARS;
static CFISH_INLINE lucy_RequiredOptionalMatcherIVARS*
lucy_ReqOptMatcher_IVARS(lucy_RequiredOptionalMatcher *self) {
   char *ptr = (char*)self + lucy_ReqOptMatcher_IVARS_OFFSET;
   return (lucy_RequiredOptionalMatcherIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define RequiredOptionalMatcherIVARS lucy_RequiredOptionalMatcherIVARS
  #define ReqOptMatcher_IVARS lucy_ReqOptMatcher_IVARS
#endif

struct lucy_RequiredOptionalMatcherIVARS {
    cfish_Vector* children;
    lucy_Similarity* sim;
    uint32_t num_kids;
    uint32_t matching_kids;
    float* coord_factors;
    lucy_Matcher* req_matcher;
    lucy_Matcher* opt_matcher;
    bool opt_matcher_first_time;
};

#endif /* C_LUCY_REQUIREDOPTIONALMATCHER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_RequiredOptionalMatcher*
lucy_ReqOptMatcher_new(lucy_Similarity* similarity, lucy_Matcher* required_matcher, lucy_Matcher* optional_matcher);

LUCY_VISIBLE lucy_RequiredOptionalMatcher*
lucy_ReqOptMatcher_init(lucy_RequiredOptionalMatcher* self, lucy_Similarity* similarity, lucy_Matcher* required_matcher, lucy_Matcher* optional_matcher);

void
LUCY_ReqOptMatcher_Destroy_IMP(lucy_RequiredOptionalMatcher* self);

int32_t
LUCY_ReqOptMatcher_Next_IMP(lucy_RequiredOptionalMatcher* self);

int32_t
LUCY_ReqOptMatcher_Advance_IMP(lucy_RequiredOptionalMatcher* self, int32_t target);

float
LUCY_ReqOptMatcher_Score_IMP(lucy_RequiredOptionalMatcher* self);

int32_t
LUCY_ReqOptMatcher_Get_Doc_ID_IMP(lucy_RequiredOptionalMatcher* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_ReqOptMatcher_To_Host_t)(lucy_RequiredOptionalMatcher* self, void* vcache);

typedef cfish_Obj*
(*LUCY_ReqOptMatcher_Clone_t)(lucy_RequiredOptionalMatcher* self);

typedef bool
(*LUCY_ReqOptMatcher_Equals_t)(lucy_RequiredOptionalMatcher* self, cfish_Obj* other);

typedef int32_t
(*LUCY_ReqOptMatcher_Compare_To_t)(lucy_RequiredOptionalMatcher* self, cfish_Obj* other);

typedef void
(*LUCY_ReqOptMatcher_Destroy_t)(lucy_RequiredOptionalMatcher* self);

typedef cfish_String*
(*LUCY_ReqOptMatcher_To_String_t)(lucy_RequiredOptionalMatcher* self);

typedef int32_t
(*LUCY_ReqOptMatcher_Next_t)(lucy_RequiredOptionalMatcher* self);

typedef int32_t
(*LUCY_ReqOptMatcher_Advance_t)(lucy_RequiredOptionalMatcher* self, int32_t target);

typedef int32_t
(*LUCY_ReqOptMatcher_Get_Doc_ID_t)(lucy_RequiredOptionalMatcher* self);

typedef float
(*LUCY_ReqOptMatcher_Score_t)(lucy_RequiredOptionalMatcher* self);

typedef void
(*LUCY_ReqOptMatcher_Collect_t)(lucy_RequiredOptionalMatcher* self, lucy_Collector* collector, lucy_Matcher* deletions);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_ReqOptMatcher_get_class(lucy_RequiredOptionalMatcher *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_ReqOptMatcher_get_class_name(lucy_RequiredOptionalMatcher *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_ReqOptMatcher_is_a(lucy_RequiredOptionalMatcher *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_ReqOptMatcher_To_Host(lucy_RequiredOptionalMatcher* self, void* vcache) {
    const LUCY_ReqOptMatcher_To_Host_t method = (LUCY_ReqOptMatcher_To_Host_t)cfish_obj_method(self, LUCY_ReqOptMatcher_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_ReqOptMatcher_Clone(lucy_RequiredOptionalMatcher* self) {
    const LUCY_ReqOptMatcher_Clone_t method = (LUCY_ReqOptMatcher_Clone_t)cfish_obj_method(self, LUCY_ReqOptMatcher_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_ReqOptMatcher_Equals(lucy_RequiredOptionalMatcher* self, cfish_Obj* other) {
    const LUCY_ReqOptMatcher_Equals_t method = (LUCY_ReqOptMatcher_Equals_t)cfish_obj_method(self, LUCY_ReqOptMatcher_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_ReqOptMatcher_Compare_To(lucy_RequiredOptionalMatcher* self, cfish_Obj* other) {
    const LUCY_ReqOptMatcher_Compare_To_t method = (LUCY_ReqOptMatcher_Compare_To_t)cfish_obj_method(self, LUCY_ReqOptMatcher_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_ReqOptMatcher_Destroy(lucy_RequiredOptionalMatcher* self) {
    const LUCY_ReqOptMatcher_Destroy_t method = (LUCY_ReqOptMatcher_Destroy_t)cfish_obj_method(self, LUCY_ReqOptMatcher_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_ReqOptMatcher_To_String(lucy_RequiredOptionalMatcher* self) {
    const LUCY_ReqOptMatcher_To_String_t method = (LUCY_ReqOptMatcher_To_String_t)cfish_obj_method(self, LUCY_ReqOptMatcher_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_Next_OFFSET;
static CFISH_INLINE int32_t
LUCY_ReqOptMatcher_Next(lucy_RequiredOptionalMatcher* self) {
    const LUCY_ReqOptMatcher_Next_t method = (LUCY_ReqOptMatcher_Next_t)cfish_obj_method(self, LUCY_ReqOptMatcher_Next_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_Advance_OFFSET;
static CFISH_INLINE int32_t
LUCY_ReqOptMatcher_Advance(lucy_RequiredOptionalMatcher* self, int32_t target) {
    const LUCY_ReqOptMatcher_Advance_t method = (LUCY_ReqOptMatcher_Advance_t)cfish_obj_method(self, LUCY_ReqOptMatcher_Advance_OFFSET);
    return method(self, target);
}

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_Get_Doc_ID_OFFSET;
static CFISH_INLINE int32_t
LUCY_ReqOptMatcher_Get_Doc_ID(lucy_RequiredOptionalMatcher* self) {
    const LUCY_ReqOptMatcher_Get_Doc_ID_t method = (LUCY_ReqOptMatcher_Get_Doc_ID_t)cfish_obj_method(self, LUCY_ReqOptMatcher_Get_Doc_ID_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_Score_OFFSET;
static CFISH_INLINE float
LUCY_ReqOptMatcher_Score(lucy_RequiredOptionalMatcher* self) {
    const LUCY_ReqOptMatcher_Score_t method = (LUCY_ReqOptMatcher_Score_t)cfish_obj_method(self, LUCY_ReqOptMatcher_Score_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_ReqOptMatcher_Collect_OFFSET;
static CFISH_INLINE void
LUCY_ReqOptMatcher_Collect(lucy_RequiredOptionalMatcher* self, lucy_Collector* collector, lucy_Matcher* deletions) {
    const LUCY_ReqOptMatcher_Collect_t method = (LUCY_ReqOptMatcher_Collect_t)cfish_obj_method(self, LUCY_ReqOptMatcher_Collect_OFFSET);
    method(self, collector, deletions);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define RequiredOptionalMatcher lucy_RequiredOptionalMatcher
  #define REQUIREDOPTIONALMATCHER LUCY_REQUIREDOPTIONALMATCHER
  #define ReqOptMatcher_new lucy_ReqOptMatcher_new
  #define ReqOptMatcher_init lucy_ReqOptMatcher_init
  #define ReqOptMatcher_get_class lucy_ReqOptMatcher_get_class
  #define ReqOptMatcher_get_class_name lucy_ReqOptMatcher_get_class_name
  #define ReqOptMatcher_is_a lucy_ReqOptMatcher_is_a
  #define ReqOptMatcher_Destroy_IMP LUCY_ReqOptMatcher_Destroy_IMP
  #define ReqOptMatcher_Next_IMP LUCY_ReqOptMatcher_Next_IMP
  #define ReqOptMatcher_Advance_IMP LUCY_ReqOptMatcher_Advance_IMP
  #define ReqOptMatcher_Score_IMP LUCY_ReqOptMatcher_Score_IMP
  #define ReqOptMatcher_Get_Doc_ID_IMP LUCY_ReqOptMatcher_Get_Doc_ID_IMP
  #define ReqOptMatcher_To_Host LUCY_ReqOptMatcher_To_Host
  #define ReqOptMatcher_To_Host_t LUCY_ReqOptMatcher_To_Host_t
  #define ReqOptMatcher_Clone LUCY_ReqOptMatcher_Clone
  #define ReqOptMatcher_Clone_t LUCY_ReqOptMatcher_Clone_t
  #define ReqOptMatcher_Equals LUCY_ReqOptMatcher_Equals
  #define ReqOptMatcher_Equals_t LUCY_ReqOptMatcher_Equals_t
  #define ReqOptMatcher_Compare_To LUCY_ReqOptMatcher_Compare_To
  #define ReqOptMatcher_Compare_To_t LUCY_ReqOptMatcher_Compare_To_t
  #define ReqOptMatcher_Destroy LUCY_ReqOptMatcher_Destroy
  #define ReqOptMatcher_Destroy_t LUCY_ReqOptMatcher_Destroy_t
  #define ReqOptMatcher_To_String LUCY_ReqOptMatcher_To_String
  #define ReqOptMatcher_To_String_t LUCY_ReqOptMatcher_To_String_t
  #define ReqOptMatcher_Next LUCY_ReqOptMatcher_Next
  #define ReqOptMatcher_Next_t LUCY_ReqOptMatcher_Next_t
  #define ReqOptMatcher_Advance LUCY_ReqOptMatcher_Advance
  #define ReqOptMatcher_Advance_t LUCY_ReqOptMatcher_Advance_t
  #define ReqOptMatcher_Get_Doc_ID LUCY_ReqOptMatcher_Get_Doc_ID
  #define ReqOptMatcher_Get_Doc_ID_t LUCY_ReqOptMatcher_Get_Doc_ID_t
  #define ReqOptMatcher_Score LUCY_ReqOptMatcher_Score
  #define ReqOptMatcher_Score_t LUCY_ReqOptMatcher_Score_t
  #define ReqOptMatcher_Collect LUCY_ReqOptMatcher_Collect
  #define ReqOptMatcher_Collect_t LUCY_ReqOptMatcher_Collect_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_SEARCH_REQUIREDOPTIONALMATCHER */




