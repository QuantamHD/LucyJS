/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_SEARCH_QUERY
#define H_LUCY_SEARCH_QUERY 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Clownfish/Obj.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_QUERY
extern uint32_t lucy_Query_IVARS_OFFSET;
typedef struct lucy_QueryIVARS lucy_QueryIVARS;
static CFISH_INLINE lucy_QueryIVARS*
lucy_Query_IVARS(lucy_Query *self) {
   char *ptr = (char*)self + lucy_Query_IVARS_OFFSET;
   return (lucy_QueryIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define QueryIVARS lucy_QueryIVARS
  #define Query_IVARS lucy_Query_IVARS
#endif

struct lucy_QueryIVARS {
    float boost;
};

#endif /* C_LUCY_QUERY */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_Query*
lucy_Query_init(lucy_Query* self, float boost);

lucy_Compiler*
LUCY_Query_Make_Compiler_IMP(lucy_Query* self, lucy_Searcher* searcher, float boost, bool subordinate);

void
LUCY_Query_Set_Boost_IMP(lucy_Query* self, float boost);

float
LUCY_Query_Get_Boost_IMP(lucy_Query* self);

void
LUCY_Query_Serialize_IMP(lucy_Query* self, lucy_OutStream* outstream);

lucy_Query*
LUCY_Query_Deserialize_IMP(lucy_Query* self, lucy_InStream* instream);

cfish_Obj*
LUCY_Query_Dump_IMP(lucy_Query* self);

cfish_Obj*
LUCY_Query_Load_IMP(lucy_Query* self, cfish_Obj* dump);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_Query_To_Host_t)(lucy_Query* self, void* vcache);

typedef cfish_Obj*
(*LUCY_Query_Clone_t)(lucy_Query* self);

typedef bool
(*LUCY_Query_Equals_t)(lucy_Query* self, cfish_Obj* other);

typedef int32_t
(*LUCY_Query_Compare_To_t)(lucy_Query* self, cfish_Obj* other);

typedef void
(*LUCY_Query_Destroy_t)(lucy_Query* self);

typedef cfish_String*
(*LUCY_Query_To_String_t)(lucy_Query* self);

typedef lucy_Compiler*
(*LUCY_Query_Make_Compiler_t)(lucy_Query* self, lucy_Searcher* searcher, float boost, bool subordinate);

typedef void
(*LUCY_Query_Set_Boost_t)(lucy_Query* self, float boost);

typedef float
(*LUCY_Query_Get_Boost_t)(lucy_Query* self);

typedef void
(*LUCY_Query_Serialize_t)(lucy_Query* self, lucy_OutStream* outstream);

typedef lucy_Query*
(*LUCY_Query_Deserialize_t)(lucy_Query* self, lucy_InStream* instream);

typedef cfish_Obj*
(*LUCY_Query_Dump_t)(lucy_Query* self);

typedef cfish_Obj*
(*LUCY_Query_Load_t)(lucy_Query* self, cfish_Obj* dump);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_Query_get_class(lucy_Query *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_Query_get_class_name(lucy_Query *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_Query_is_a(lucy_Query *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_Query_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_Query_To_Host(lucy_Query* self, void* vcache) {
    const LUCY_Query_To_Host_t method = (LUCY_Query_To_Host_t)cfish_obj_method(self, LUCY_Query_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_Query_Clone(lucy_Query* self) {
    const LUCY_Query_Clone_t method = (LUCY_Query_Clone_t)cfish_obj_method(self, LUCY_Query_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_Query_Equals(lucy_Query* self, cfish_Obj* other) {
    const LUCY_Query_Equals_t method = (LUCY_Query_Equals_t)cfish_obj_method(self, LUCY_Query_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_Query_Compare_To(lucy_Query* self, cfish_Obj* other) {
    const LUCY_Query_Compare_To_t method = (LUCY_Query_Compare_To_t)cfish_obj_method(self, LUCY_Query_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_Query_Destroy(lucy_Query* self) {
    const LUCY_Query_Destroy_t method = (LUCY_Query_Destroy_t)cfish_obj_method(self, LUCY_Query_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Query_To_String(lucy_Query* self) {
    const LUCY_Query_To_String_t method = (LUCY_Query_To_String_t)cfish_obj_method(self, LUCY_Query_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Make_Compiler_OFFSET;
static CFISH_INLINE lucy_Compiler*
LUCY_Query_Make_Compiler(lucy_Query* self, lucy_Searcher* searcher, float boost, bool subordinate) {
    const LUCY_Query_Make_Compiler_t method = (LUCY_Query_Make_Compiler_t)cfish_obj_method(self, LUCY_Query_Make_Compiler_OFFSET);
    return method(self, searcher, boost, subordinate);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Set_Boost_OFFSET;
static CFISH_INLINE void
LUCY_Query_Set_Boost(lucy_Query* self, float boost) {
    const LUCY_Query_Set_Boost_t method = (LUCY_Query_Set_Boost_t)cfish_obj_method(self, LUCY_Query_Set_Boost_OFFSET);
    method(self, boost);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Get_Boost_OFFSET;
static CFISH_INLINE float
LUCY_Query_Get_Boost(lucy_Query* self) {
    const LUCY_Query_Get_Boost_t method = (LUCY_Query_Get_Boost_t)cfish_obj_method(self, LUCY_Query_Get_Boost_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Serialize_OFFSET;
static CFISH_INLINE void
LUCY_Query_Serialize(lucy_Query* self, lucy_OutStream* outstream) {
    const LUCY_Query_Serialize_t method = (LUCY_Query_Serialize_t)cfish_obj_method(self, LUCY_Query_Serialize_OFFSET);
    method(self, outstream);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Deserialize_OFFSET;
static CFISH_INLINE lucy_Query*
LUCY_Query_Deserialize(lucy_Query* self, lucy_InStream* instream) {
    const LUCY_Query_Deserialize_t method = (LUCY_Query_Deserialize_t)cfish_obj_method(self, LUCY_Query_Deserialize_OFFSET);
    return method(self, instream);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Dump_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_Query_Dump(lucy_Query* self) {
    const LUCY_Query_Dump_t method = (LUCY_Query_Dump_t)cfish_obj_method(self, LUCY_Query_Dump_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Query_Load_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_Query_Load(lucy_Query* self, cfish_Obj* dump) {
    const LUCY_Query_Load_t method = (LUCY_Query_Load_t)cfish_obj_method(self, LUCY_Query_Load_OFFSET);
    return method(self, dump);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_Query_Make_Compiler_OVERRIDE NULL
#define Lucy_Query_Set_Boost_OVERRIDE NULL
#define Lucy_Query_Get_Boost_OVERRIDE NULL
#define Lucy_Query_Serialize_OVERRIDE NULL
#define Lucy_Query_Deserialize_OVERRIDE NULL
#define Lucy_Query_Dump_OVERRIDE NULL
#define Lucy_Query_Load_OVERRIDE NULL
#else
lucy_Compiler*
Lucy_Query_Make_Compiler_OVERRIDE(lucy_Query* self, lucy_Searcher* searcher, float boost, bool subordinate);
void
Lucy_Query_Set_Boost_OVERRIDE(lucy_Query* self, float boost);
float
Lucy_Query_Get_Boost_OVERRIDE(lucy_Query* self);
void
Lucy_Query_Serialize_OVERRIDE(lucy_Query* self, lucy_OutStream* outstream);
lucy_Query*
Lucy_Query_Deserialize_OVERRIDE(lucy_Query* self, lucy_InStream* instream);
cfish_Obj*
Lucy_Query_Dump_OVERRIDE(lucy_Query* self);
cfish_Obj*
Lucy_Query_Load_OVERRIDE(lucy_Query* self, cfish_Obj* dump);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define Query lucy_Query
  #define QUERY LUCY_QUERY
  #define Query_init lucy_Query_init
  #define Query_get_class lucy_Query_get_class
  #define Query_get_class_name lucy_Query_get_class_name
  #define Query_is_a lucy_Query_is_a
  #define Query_Make_Compiler_IMP LUCY_Query_Make_Compiler_IMP
  #define Query_Set_Boost_IMP LUCY_Query_Set_Boost_IMP
  #define Query_Get_Boost_IMP LUCY_Query_Get_Boost_IMP
  #define Query_Serialize_IMP LUCY_Query_Serialize_IMP
  #define Query_Deserialize_IMP LUCY_Query_Deserialize_IMP
  #define Query_Dump_IMP LUCY_Query_Dump_IMP
  #define Query_Load_IMP LUCY_Query_Load_IMP
  #define Query_To_Host LUCY_Query_To_Host
  #define Query_To_Host_t LUCY_Query_To_Host_t
  #define Query_Clone LUCY_Query_Clone
  #define Query_Clone_t LUCY_Query_Clone_t
  #define Query_Equals LUCY_Query_Equals
  #define Query_Equals_t LUCY_Query_Equals_t
  #define Query_Compare_To LUCY_Query_Compare_To
  #define Query_Compare_To_t LUCY_Query_Compare_To_t
  #define Query_Destroy LUCY_Query_Destroy
  #define Query_Destroy_t LUCY_Query_Destroy_t
  #define Query_To_String LUCY_Query_To_String
  #define Query_To_String_t LUCY_Query_To_String_t
  #define Query_Make_Compiler LUCY_Query_Make_Compiler
  #define Query_Make_Compiler_t LUCY_Query_Make_Compiler_t
  #define Query_Set_Boost LUCY_Query_Set_Boost
  #define Query_Set_Boost_t LUCY_Query_Set_Boost_t
  #define Query_Get_Boost LUCY_Query_Get_Boost
  #define Query_Get_Boost_t LUCY_Query_Get_Boost_t
  #define Query_Serialize LUCY_Query_Serialize
  #define Query_Serialize_t LUCY_Query_Serialize_t
  #define Query_Deserialize LUCY_Query_Deserialize
  #define Query_Deserialize_t LUCY_Query_Deserialize_t
  #define Query_Dump LUCY_Query_Dump
  #define Query_Dump_t LUCY_Query_Dump_t
  #define Query_Load LUCY_Query_Load
  #define Query_Load_t LUCY_Query_Load_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_SEARCH_QUERY */




