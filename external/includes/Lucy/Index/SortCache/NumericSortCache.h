/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_INDEX_SORTCACHE_NUMERICSORTCACHE
#define H_LUCY_INDEX_SORTCACHE_NUMERICSORTCACHE 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Lucy/Index/SortCache.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_NUMERICSORTCACHE
extern uint32_t lucy_NumSortCache_IVARS_OFFSET;
typedef struct lucy_NumericSortCacheIVARS lucy_NumericSortCacheIVARS;
static CFISH_INLINE lucy_NumericSortCacheIVARS*
lucy_NumSortCache_IVARS(lucy_NumericSortCache *self) {
   char *ptr = (char*)self + lucy_NumSortCache_IVARS_OFFSET;
   return (lucy_NumericSortCacheIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define NumericSortCacheIVARS lucy_NumericSortCacheIVARS
  #define NumSortCache_IVARS lucy_NumSortCache_IVARS
#endif

struct lucy_NumericSortCacheIVARS {
    cfish_String* field;
    lucy_FieldType* type;
    const void* ords;
    int32_t doc_max;
    int32_t cardinality;
    int32_t ord_width;
    int32_t null_ord;
    bool native_ords;
    lucy_InStream* ord_in;
    lucy_InStream* dat_in;
};

#endif /* C_LUCY_NUMERICSORTCACHE */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_NumericSortCache*
lucy_NumSortCache_init(lucy_NumericSortCache* self, cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* dat_in);

void
LUCY_NumSortCache_Destroy_IMP(lucy_NumericSortCache* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_NumSortCache_To_Host_t)(lucy_NumericSortCache* self, void* vcache);

typedef cfish_Obj*
(*LUCY_NumSortCache_Clone_t)(lucy_NumericSortCache* self);

typedef bool
(*LUCY_NumSortCache_Equals_t)(lucy_NumericSortCache* self, cfish_Obj* other);

typedef int32_t
(*LUCY_NumSortCache_Compare_To_t)(lucy_NumericSortCache* self, cfish_Obj* other);

typedef void
(*LUCY_NumSortCache_Destroy_t)(lucy_NumericSortCache* self);

typedef cfish_String*
(*LUCY_NumSortCache_To_String_t)(lucy_NumericSortCache* self);

typedef cfish_Obj*
(*LUCY_NumSortCache_Value_t)(lucy_NumericSortCache* self, int32_t ord);

typedef const void*
(*LUCY_NumSortCache_Get_Ords_t)(lucy_NumericSortCache* self);

typedef int32_t
(*LUCY_NumSortCache_Get_Cardinality_t)(lucy_NumericSortCache* self);

typedef int32_t
(*LUCY_NumSortCache_Get_Ord_Width_t)(lucy_NumericSortCache* self);

typedef int32_t
(*LUCY_NumSortCache_Get_Null_Ord_t)(lucy_NumericSortCache* self);

typedef int32_t
(*LUCY_NumSortCache_Ordinal_t)(lucy_NumericSortCache* self, int32_t doc_id);

typedef int32_t
(*LUCY_NumSortCache_Find_t)(lucy_NumericSortCache* self, cfish_Obj* term);

typedef void
(*LUCY_NumSortCache_Set_Native_Ords_t)(lucy_NumericSortCache* self, bool native_ords);

typedef bool
(*LUCY_NumSortCache_Get_Native_Ords_t)(lucy_NumericSortCache* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_NumSortCache_get_class(lucy_NumericSortCache *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_NumSortCache_get_class_name(lucy_NumericSortCache *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_NumSortCache_is_a(lucy_NumericSortCache *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_NumSortCache_To_Host(lucy_NumericSortCache* self, void* vcache) {
    const LUCY_NumSortCache_To_Host_t method = (LUCY_NumSortCache_To_Host_t)cfish_obj_method(self, LUCY_NumSortCache_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_NumSortCache_Clone(lucy_NumericSortCache* self) {
    const LUCY_NumSortCache_Clone_t method = (LUCY_NumSortCache_Clone_t)cfish_obj_method(self, LUCY_NumSortCache_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_NumSortCache_Equals(lucy_NumericSortCache* self, cfish_Obj* other) {
    const LUCY_NumSortCache_Equals_t method = (LUCY_NumSortCache_Equals_t)cfish_obj_method(self, LUCY_NumSortCache_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_NumSortCache_Compare_To(lucy_NumericSortCache* self, cfish_Obj* other) {
    const LUCY_NumSortCache_Compare_To_t method = (LUCY_NumSortCache_Compare_To_t)cfish_obj_method(self, LUCY_NumSortCache_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_NumSortCache_Destroy(lucy_NumericSortCache* self) {
    const LUCY_NumSortCache_Destroy_t method = (LUCY_NumSortCache_Destroy_t)cfish_obj_method(self, LUCY_NumSortCache_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_NumSortCache_To_String(lucy_NumericSortCache* self) {
    const LUCY_NumSortCache_To_String_t method = (LUCY_NumSortCache_To_String_t)cfish_obj_method(self, LUCY_NumSortCache_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Value_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_NumSortCache_Value(lucy_NumericSortCache* self, int32_t ord) {
    const LUCY_NumSortCache_Value_t method = (LUCY_NumSortCache_Value_t)cfish_obj_method(self, LUCY_NumSortCache_Value_OFFSET);
    return method(self, ord);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Get_Ords_OFFSET;
static CFISH_INLINE const void*
LUCY_NumSortCache_Get_Ords(lucy_NumericSortCache* self) {
    const LUCY_NumSortCache_Get_Ords_t method = (LUCY_NumSortCache_Get_Ords_t)cfish_obj_method(self, LUCY_NumSortCache_Get_Ords_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Get_Cardinality_OFFSET;
static CFISH_INLINE int32_t
LUCY_NumSortCache_Get_Cardinality(lucy_NumericSortCache* self) {
    const LUCY_NumSortCache_Get_Cardinality_t method = (LUCY_NumSortCache_Get_Cardinality_t)cfish_obj_method(self, LUCY_NumSortCache_Get_Cardinality_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Get_Ord_Width_OFFSET;
static CFISH_INLINE int32_t
LUCY_NumSortCache_Get_Ord_Width(lucy_NumericSortCache* self) {
    const LUCY_NumSortCache_Get_Ord_Width_t method = (LUCY_NumSortCache_Get_Ord_Width_t)cfish_obj_method(self, LUCY_NumSortCache_Get_Ord_Width_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Get_Null_Ord_OFFSET;
static CFISH_INLINE int32_t
LUCY_NumSortCache_Get_Null_Ord(lucy_NumericSortCache* self) {
    const LUCY_NumSortCache_Get_Null_Ord_t method = (LUCY_NumSortCache_Get_Null_Ord_t)cfish_obj_method(self, LUCY_NumSortCache_Get_Null_Ord_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Ordinal_OFFSET;
static CFISH_INLINE int32_t
LUCY_NumSortCache_Ordinal(lucy_NumericSortCache* self, int32_t doc_id) {
    const LUCY_NumSortCache_Ordinal_t method = (LUCY_NumSortCache_Ordinal_t)cfish_obj_method(self, LUCY_NumSortCache_Ordinal_OFFSET);
    return method(self, doc_id);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Find_OFFSET;
static CFISH_INLINE int32_t
LUCY_NumSortCache_Find(lucy_NumericSortCache* self, cfish_Obj* term) {
    const LUCY_NumSortCache_Find_t method = (LUCY_NumSortCache_Find_t)cfish_obj_method(self, LUCY_NumSortCache_Find_OFFSET);
    return method(self, term);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Set_Native_Ords_OFFSET;
static CFISH_INLINE void
LUCY_NumSortCache_Set_Native_Ords(lucy_NumericSortCache* self, bool native_ords) {
    const LUCY_NumSortCache_Set_Native_Ords_t method = (LUCY_NumSortCache_Set_Native_Ords_t)cfish_obj_method(self, LUCY_NumSortCache_Set_Native_Ords_OFFSET);
    method(self, native_ords);
}

extern LUCY_VISIBLE uint32_t LUCY_NumSortCache_Get_Native_Ords_OFFSET;
static CFISH_INLINE bool
LUCY_NumSortCache_Get_Native_Ords(lucy_NumericSortCache* self) {
    const LUCY_NumSortCache_Get_Native_Ords_t method = (LUCY_NumSortCache_Get_Native_Ords_t)cfish_obj_method(self, LUCY_NumSortCache_Get_Native_Ords_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define NumericSortCache lucy_NumericSortCache
  #define NUMERICSORTCACHE LUCY_NUMERICSORTCACHE
  #define NumSortCache_init lucy_NumSortCache_init
  #define NumSortCache_get_class lucy_NumSortCache_get_class
  #define NumSortCache_get_class_name lucy_NumSortCache_get_class_name
  #define NumSortCache_is_a lucy_NumSortCache_is_a
  #define NumSortCache_Destroy_IMP LUCY_NumSortCache_Destroy_IMP
  #define NumSortCache_To_Host LUCY_NumSortCache_To_Host
  #define NumSortCache_To_Host_t LUCY_NumSortCache_To_Host_t
  #define NumSortCache_Clone LUCY_NumSortCache_Clone
  #define NumSortCache_Clone_t LUCY_NumSortCache_Clone_t
  #define NumSortCache_Equals LUCY_NumSortCache_Equals
  #define NumSortCache_Equals_t LUCY_NumSortCache_Equals_t
  #define NumSortCache_Compare_To LUCY_NumSortCache_Compare_To
  #define NumSortCache_Compare_To_t LUCY_NumSortCache_Compare_To_t
  #define NumSortCache_Destroy LUCY_NumSortCache_Destroy
  #define NumSortCache_Destroy_t LUCY_NumSortCache_Destroy_t
  #define NumSortCache_To_String LUCY_NumSortCache_To_String
  #define NumSortCache_To_String_t LUCY_NumSortCache_To_String_t
  #define NumSortCache_Value LUCY_NumSortCache_Value
  #define NumSortCache_Value_t LUCY_NumSortCache_Value_t
  #define NumSortCache_Get_Ords LUCY_NumSortCache_Get_Ords
  #define NumSortCache_Get_Ords_t LUCY_NumSortCache_Get_Ords_t
  #define NumSortCache_Get_Cardinality LUCY_NumSortCache_Get_Cardinality
  #define NumSortCache_Get_Cardinality_t LUCY_NumSortCache_Get_Cardinality_t
  #define NumSortCache_Get_Ord_Width LUCY_NumSortCache_Get_Ord_Width
  #define NumSortCache_Get_Ord_Width_t LUCY_NumSortCache_Get_Ord_Width_t
  #define NumSortCache_Get_Null_Ord LUCY_NumSortCache_Get_Null_Ord
  #define NumSortCache_Get_Null_Ord_t LUCY_NumSortCache_Get_Null_Ord_t
  #define NumSortCache_Ordinal LUCY_NumSortCache_Ordinal
  #define NumSortCache_Ordinal_t LUCY_NumSortCache_Ordinal_t
  #define NumSortCache_Find LUCY_NumSortCache_Find
  #define NumSortCache_Find_t LUCY_NumSortCache_Find_t
  #define NumSortCache_Set_Native_Ords LUCY_NumSortCache_Set_Native_Ords
  #define NumSortCache_Set_Native_Ords_t LUCY_NumSortCache_Set_Native_Ords_t
  #define NumSortCache_Get_Native_Ords LUCY_NumSortCache_Get_Native_Ords
  #define NumSortCache_Get_Native_Ords_t LUCY_NumSortCache_Get_Native_Ords_t
#endif /* LUCY_USE_SHORT_NAMES */



/* Include the header for this class's parent. 
 */

#include "Lucy/Index/SortCache/NumericSortCache.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_FLOAT64SORTCACHE
extern uint32_t lucy_F64SortCache_IVARS_OFFSET;
typedef struct lucy_Float64SortCacheIVARS lucy_Float64SortCacheIVARS;
static CFISH_INLINE lucy_Float64SortCacheIVARS*
lucy_F64SortCache_IVARS(lucy_Float64SortCache *self) {
   char *ptr = (char*)self + lucy_F64SortCache_IVARS_OFFSET;
   return (lucy_Float64SortCacheIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define Float64SortCacheIVARS lucy_Float64SortCacheIVARS
  #define F64SortCache_IVARS lucy_F64SortCache_IVARS
#endif

struct lucy_Float64SortCacheIVARS {
    cfish_String* field;
    lucy_FieldType* type;
    const void* ords;
    int32_t doc_max;
    int32_t cardinality;
    int32_t ord_width;
    int32_t null_ord;
    bool native_ords;
    lucy_InStream* ord_in;
    lucy_InStream* dat_in;
};

#endif /* C_LUCY_FLOAT64SORTCACHE */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_Float64SortCache*
lucy_F64SortCache_new(cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* dat_in);

LUCY_VISIBLE lucy_Float64SortCache*
lucy_F64SortCache_init(lucy_Float64SortCache* self, cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* dat_in);

cfish_Obj*
LUCY_F64SortCache_Value_IMP(lucy_Float64SortCache* self, int32_t ord);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_F64SortCache_To_Host_t)(lucy_Float64SortCache* self, void* vcache);

typedef cfish_Obj*
(*LUCY_F64SortCache_Clone_t)(lucy_Float64SortCache* self);

typedef bool
(*LUCY_F64SortCache_Equals_t)(lucy_Float64SortCache* self, cfish_Obj* other);

typedef int32_t
(*LUCY_F64SortCache_Compare_To_t)(lucy_Float64SortCache* self, cfish_Obj* other);

typedef void
(*LUCY_F64SortCache_Destroy_t)(lucy_Float64SortCache* self);

typedef cfish_String*
(*LUCY_F64SortCache_To_String_t)(lucy_Float64SortCache* self);

typedef cfish_Obj*
(*LUCY_F64SortCache_Value_t)(lucy_Float64SortCache* self, int32_t ord);

typedef const void*
(*LUCY_F64SortCache_Get_Ords_t)(lucy_Float64SortCache* self);

typedef int32_t
(*LUCY_F64SortCache_Get_Cardinality_t)(lucy_Float64SortCache* self);

typedef int32_t
(*LUCY_F64SortCache_Get_Ord_Width_t)(lucy_Float64SortCache* self);

typedef int32_t
(*LUCY_F64SortCache_Get_Null_Ord_t)(lucy_Float64SortCache* self);

typedef int32_t
(*LUCY_F64SortCache_Ordinal_t)(lucy_Float64SortCache* self, int32_t doc_id);

typedef int32_t
(*LUCY_F64SortCache_Find_t)(lucy_Float64SortCache* self, cfish_Obj* term);

typedef void
(*LUCY_F64SortCache_Set_Native_Ords_t)(lucy_Float64SortCache* self, bool native_ords);

typedef bool
(*LUCY_F64SortCache_Get_Native_Ords_t)(lucy_Float64SortCache* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_F64SortCache_get_class(lucy_Float64SortCache *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_F64SortCache_get_class_name(lucy_Float64SortCache *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_F64SortCache_is_a(lucy_Float64SortCache *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_F64SortCache_To_Host(lucy_Float64SortCache* self, void* vcache) {
    const LUCY_F64SortCache_To_Host_t method = (LUCY_F64SortCache_To_Host_t)cfish_obj_method(self, LUCY_F64SortCache_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_F64SortCache_Clone(lucy_Float64SortCache* self) {
    const LUCY_F64SortCache_Clone_t method = (LUCY_F64SortCache_Clone_t)cfish_obj_method(self, LUCY_F64SortCache_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_F64SortCache_Equals(lucy_Float64SortCache* self, cfish_Obj* other) {
    const LUCY_F64SortCache_Equals_t method = (LUCY_F64SortCache_Equals_t)cfish_obj_method(self, LUCY_F64SortCache_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_F64SortCache_Compare_To(lucy_Float64SortCache* self, cfish_Obj* other) {
    const LUCY_F64SortCache_Compare_To_t method = (LUCY_F64SortCache_Compare_To_t)cfish_obj_method(self, LUCY_F64SortCache_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_F64SortCache_Destroy(lucy_Float64SortCache* self) {
    const LUCY_F64SortCache_Destroy_t method = (LUCY_F64SortCache_Destroy_t)cfish_obj_method(self, LUCY_F64SortCache_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_F64SortCache_To_String(lucy_Float64SortCache* self) {
    const LUCY_F64SortCache_To_String_t method = (LUCY_F64SortCache_To_String_t)cfish_obj_method(self, LUCY_F64SortCache_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Value_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_F64SortCache_Value(lucy_Float64SortCache* self, int32_t ord) {
    const LUCY_F64SortCache_Value_t method = (LUCY_F64SortCache_Value_t)cfish_obj_method(self, LUCY_F64SortCache_Value_OFFSET);
    return method(self, ord);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Get_Ords_OFFSET;
static CFISH_INLINE const void*
LUCY_F64SortCache_Get_Ords(lucy_Float64SortCache* self) {
    const LUCY_F64SortCache_Get_Ords_t method = (LUCY_F64SortCache_Get_Ords_t)cfish_obj_method(self, LUCY_F64SortCache_Get_Ords_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Get_Cardinality_OFFSET;
static CFISH_INLINE int32_t
LUCY_F64SortCache_Get_Cardinality(lucy_Float64SortCache* self) {
    const LUCY_F64SortCache_Get_Cardinality_t method = (LUCY_F64SortCache_Get_Cardinality_t)cfish_obj_method(self, LUCY_F64SortCache_Get_Cardinality_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Get_Ord_Width_OFFSET;
static CFISH_INLINE int32_t
LUCY_F64SortCache_Get_Ord_Width(lucy_Float64SortCache* self) {
    const LUCY_F64SortCache_Get_Ord_Width_t method = (LUCY_F64SortCache_Get_Ord_Width_t)cfish_obj_method(self, LUCY_F64SortCache_Get_Ord_Width_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Get_Null_Ord_OFFSET;
static CFISH_INLINE int32_t
LUCY_F64SortCache_Get_Null_Ord(lucy_Float64SortCache* self) {
    const LUCY_F64SortCache_Get_Null_Ord_t method = (LUCY_F64SortCache_Get_Null_Ord_t)cfish_obj_method(self, LUCY_F64SortCache_Get_Null_Ord_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Ordinal_OFFSET;
static CFISH_INLINE int32_t
LUCY_F64SortCache_Ordinal(lucy_Float64SortCache* self, int32_t doc_id) {
    const LUCY_F64SortCache_Ordinal_t method = (LUCY_F64SortCache_Ordinal_t)cfish_obj_method(self, LUCY_F64SortCache_Ordinal_OFFSET);
    return method(self, doc_id);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Find_OFFSET;
static CFISH_INLINE int32_t
LUCY_F64SortCache_Find(lucy_Float64SortCache* self, cfish_Obj* term) {
    const LUCY_F64SortCache_Find_t method = (LUCY_F64SortCache_Find_t)cfish_obj_method(self, LUCY_F64SortCache_Find_OFFSET);
    return method(self, term);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Set_Native_Ords_OFFSET;
static CFISH_INLINE void
LUCY_F64SortCache_Set_Native_Ords(lucy_Float64SortCache* self, bool native_ords) {
    const LUCY_F64SortCache_Set_Native_Ords_t method = (LUCY_F64SortCache_Set_Native_Ords_t)cfish_obj_method(self, LUCY_F64SortCache_Set_Native_Ords_OFFSET);
    method(self, native_ords);
}

extern LUCY_VISIBLE uint32_t LUCY_F64SortCache_Get_Native_Ords_OFFSET;
static CFISH_INLINE bool
LUCY_F64SortCache_Get_Native_Ords(lucy_Float64SortCache* self) {
    const LUCY_F64SortCache_Get_Native_Ords_t method = (LUCY_F64SortCache_Get_Native_Ords_t)cfish_obj_method(self, LUCY_F64SortCache_Get_Native_Ords_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define Float64SortCache lucy_Float64SortCache
  #define FLOAT64SORTCACHE LUCY_FLOAT64SORTCACHE
  #define F64SortCache_new lucy_F64SortCache_new
  #define F64SortCache_init lucy_F64SortCache_init
  #define F64SortCache_get_class lucy_F64SortCache_get_class
  #define F64SortCache_get_class_name lucy_F64SortCache_get_class_name
  #define F64SortCache_is_a lucy_F64SortCache_is_a
  #define F64SortCache_Value_IMP LUCY_F64SortCache_Value_IMP
  #define F64SortCache_To_Host LUCY_F64SortCache_To_Host
  #define F64SortCache_To_Host_t LUCY_F64SortCache_To_Host_t
  #define F64SortCache_Clone LUCY_F64SortCache_Clone
  #define F64SortCache_Clone_t LUCY_F64SortCache_Clone_t
  #define F64SortCache_Equals LUCY_F64SortCache_Equals
  #define F64SortCache_Equals_t LUCY_F64SortCache_Equals_t
  #define F64SortCache_Compare_To LUCY_F64SortCache_Compare_To
  #define F64SortCache_Compare_To_t LUCY_F64SortCache_Compare_To_t
  #define F64SortCache_Destroy LUCY_F64SortCache_Destroy
  #define F64SortCache_Destroy_t LUCY_F64SortCache_Destroy_t
  #define F64SortCache_To_String LUCY_F64SortCache_To_String
  #define F64SortCache_To_String_t LUCY_F64SortCache_To_String_t
  #define F64SortCache_Value LUCY_F64SortCache_Value
  #define F64SortCache_Value_t LUCY_F64SortCache_Value_t
  #define F64SortCache_Get_Ords LUCY_F64SortCache_Get_Ords
  #define F64SortCache_Get_Ords_t LUCY_F64SortCache_Get_Ords_t
  #define F64SortCache_Get_Cardinality LUCY_F64SortCache_Get_Cardinality
  #define F64SortCache_Get_Cardinality_t LUCY_F64SortCache_Get_Cardinality_t
  #define F64SortCache_Get_Ord_Width LUCY_F64SortCache_Get_Ord_Width
  #define F64SortCache_Get_Ord_Width_t LUCY_F64SortCache_Get_Ord_Width_t
  #define F64SortCache_Get_Null_Ord LUCY_F64SortCache_Get_Null_Ord
  #define F64SortCache_Get_Null_Ord_t LUCY_F64SortCache_Get_Null_Ord_t
  #define F64SortCache_Ordinal LUCY_F64SortCache_Ordinal
  #define F64SortCache_Ordinal_t LUCY_F64SortCache_Ordinal_t
  #define F64SortCache_Find LUCY_F64SortCache_Find
  #define F64SortCache_Find_t LUCY_F64SortCache_Find_t
  #define F64SortCache_Set_Native_Ords LUCY_F64SortCache_Set_Native_Ords
  #define F64SortCache_Set_Native_Ords_t LUCY_F64SortCache_Set_Native_Ords_t
  #define F64SortCache_Get_Native_Ords LUCY_F64SortCache_Get_Native_Ords
  #define F64SortCache_Get_Native_Ords_t LUCY_F64SortCache_Get_Native_Ords_t
#endif /* LUCY_USE_SHORT_NAMES */



/* Include the header for this class's parent. 
 */

#include "Lucy/Index/SortCache/NumericSortCache.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_FLOAT32SORTCACHE
extern uint32_t lucy_F32SortCache_IVARS_OFFSET;
typedef struct lucy_Float32SortCacheIVARS lucy_Float32SortCacheIVARS;
static CFISH_INLINE lucy_Float32SortCacheIVARS*
lucy_F32SortCache_IVARS(lucy_Float32SortCache *self) {
   char *ptr = (char*)self + lucy_F32SortCache_IVARS_OFFSET;
   return (lucy_Float32SortCacheIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define Float32SortCacheIVARS lucy_Float32SortCacheIVARS
  #define F32SortCache_IVARS lucy_F32SortCache_IVARS
#endif

struct lucy_Float32SortCacheIVARS {
    cfish_String* field;
    lucy_FieldType* type;
    const void* ords;
    int32_t doc_max;
    int32_t cardinality;
    int32_t ord_width;
    int32_t null_ord;
    bool native_ords;
    lucy_InStream* ord_in;
    lucy_InStream* dat_in;
};

#endif /* C_LUCY_FLOAT32SORTCACHE */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_Float32SortCache*
lucy_F32SortCache_new(cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* dat_in);

LUCY_VISIBLE lucy_Float32SortCache*
lucy_F32SortCache_init(lucy_Float32SortCache* self, cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* dat_in);

cfish_Obj*
LUCY_F32SortCache_Value_IMP(lucy_Float32SortCache* self, int32_t ord);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_F32SortCache_To_Host_t)(lucy_Float32SortCache* self, void* vcache);

typedef cfish_Obj*
(*LUCY_F32SortCache_Clone_t)(lucy_Float32SortCache* self);

typedef bool
(*LUCY_F32SortCache_Equals_t)(lucy_Float32SortCache* self, cfish_Obj* other);

typedef int32_t
(*LUCY_F32SortCache_Compare_To_t)(lucy_Float32SortCache* self, cfish_Obj* other);

typedef void
(*LUCY_F32SortCache_Destroy_t)(lucy_Float32SortCache* self);

typedef cfish_String*
(*LUCY_F32SortCache_To_String_t)(lucy_Float32SortCache* self);

typedef cfish_Obj*
(*LUCY_F32SortCache_Value_t)(lucy_Float32SortCache* self, int32_t ord);

typedef const void*
(*LUCY_F32SortCache_Get_Ords_t)(lucy_Float32SortCache* self);

typedef int32_t
(*LUCY_F32SortCache_Get_Cardinality_t)(lucy_Float32SortCache* self);

typedef int32_t
(*LUCY_F32SortCache_Get_Ord_Width_t)(lucy_Float32SortCache* self);

typedef int32_t
(*LUCY_F32SortCache_Get_Null_Ord_t)(lucy_Float32SortCache* self);

typedef int32_t
(*LUCY_F32SortCache_Ordinal_t)(lucy_Float32SortCache* self, int32_t doc_id);

typedef int32_t
(*LUCY_F32SortCache_Find_t)(lucy_Float32SortCache* self, cfish_Obj* term);

typedef void
(*LUCY_F32SortCache_Set_Native_Ords_t)(lucy_Float32SortCache* self, bool native_ords);

typedef bool
(*LUCY_F32SortCache_Get_Native_Ords_t)(lucy_Float32SortCache* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_F32SortCache_get_class(lucy_Float32SortCache *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_F32SortCache_get_class_name(lucy_Float32SortCache *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_F32SortCache_is_a(lucy_Float32SortCache *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_F32SortCache_To_Host(lucy_Float32SortCache* self, void* vcache) {
    const LUCY_F32SortCache_To_Host_t method = (LUCY_F32SortCache_To_Host_t)cfish_obj_method(self, LUCY_F32SortCache_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_F32SortCache_Clone(lucy_Float32SortCache* self) {
    const LUCY_F32SortCache_Clone_t method = (LUCY_F32SortCache_Clone_t)cfish_obj_method(self, LUCY_F32SortCache_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_F32SortCache_Equals(lucy_Float32SortCache* self, cfish_Obj* other) {
    const LUCY_F32SortCache_Equals_t method = (LUCY_F32SortCache_Equals_t)cfish_obj_method(self, LUCY_F32SortCache_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_F32SortCache_Compare_To(lucy_Float32SortCache* self, cfish_Obj* other) {
    const LUCY_F32SortCache_Compare_To_t method = (LUCY_F32SortCache_Compare_To_t)cfish_obj_method(self, LUCY_F32SortCache_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_F32SortCache_Destroy(lucy_Float32SortCache* self) {
    const LUCY_F32SortCache_Destroy_t method = (LUCY_F32SortCache_Destroy_t)cfish_obj_method(self, LUCY_F32SortCache_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_F32SortCache_To_String(lucy_Float32SortCache* self) {
    const LUCY_F32SortCache_To_String_t method = (LUCY_F32SortCache_To_String_t)cfish_obj_method(self, LUCY_F32SortCache_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Value_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_F32SortCache_Value(lucy_Float32SortCache* self, int32_t ord) {
    const LUCY_F32SortCache_Value_t method = (LUCY_F32SortCache_Value_t)cfish_obj_method(self, LUCY_F32SortCache_Value_OFFSET);
    return method(self, ord);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Get_Ords_OFFSET;
static CFISH_INLINE const void*
LUCY_F32SortCache_Get_Ords(lucy_Float32SortCache* self) {
    const LUCY_F32SortCache_Get_Ords_t method = (LUCY_F32SortCache_Get_Ords_t)cfish_obj_method(self, LUCY_F32SortCache_Get_Ords_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Get_Cardinality_OFFSET;
static CFISH_INLINE int32_t
LUCY_F32SortCache_Get_Cardinality(lucy_Float32SortCache* self) {
    const LUCY_F32SortCache_Get_Cardinality_t method = (LUCY_F32SortCache_Get_Cardinality_t)cfish_obj_method(self, LUCY_F32SortCache_Get_Cardinality_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Get_Ord_Width_OFFSET;
static CFISH_INLINE int32_t
LUCY_F32SortCache_Get_Ord_Width(lucy_Float32SortCache* self) {
    const LUCY_F32SortCache_Get_Ord_Width_t method = (LUCY_F32SortCache_Get_Ord_Width_t)cfish_obj_method(self, LUCY_F32SortCache_Get_Ord_Width_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Get_Null_Ord_OFFSET;
static CFISH_INLINE int32_t
LUCY_F32SortCache_Get_Null_Ord(lucy_Float32SortCache* self) {
    const LUCY_F32SortCache_Get_Null_Ord_t method = (LUCY_F32SortCache_Get_Null_Ord_t)cfish_obj_method(self, LUCY_F32SortCache_Get_Null_Ord_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Ordinal_OFFSET;
static CFISH_INLINE int32_t
LUCY_F32SortCache_Ordinal(lucy_Float32SortCache* self, int32_t doc_id) {
    const LUCY_F32SortCache_Ordinal_t method = (LUCY_F32SortCache_Ordinal_t)cfish_obj_method(self, LUCY_F32SortCache_Ordinal_OFFSET);
    return method(self, doc_id);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Find_OFFSET;
static CFISH_INLINE int32_t
LUCY_F32SortCache_Find(lucy_Float32SortCache* self, cfish_Obj* term) {
    const LUCY_F32SortCache_Find_t method = (LUCY_F32SortCache_Find_t)cfish_obj_method(self, LUCY_F32SortCache_Find_OFFSET);
    return method(self, term);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Set_Native_Ords_OFFSET;
static CFISH_INLINE void
LUCY_F32SortCache_Set_Native_Ords(lucy_Float32SortCache* self, bool native_ords) {
    const LUCY_F32SortCache_Set_Native_Ords_t method = (LUCY_F32SortCache_Set_Native_Ords_t)cfish_obj_method(self, LUCY_F32SortCache_Set_Native_Ords_OFFSET);
    method(self, native_ords);
}

extern LUCY_VISIBLE uint32_t LUCY_F32SortCache_Get_Native_Ords_OFFSET;
static CFISH_INLINE bool
LUCY_F32SortCache_Get_Native_Ords(lucy_Float32SortCache* self) {
    const LUCY_F32SortCache_Get_Native_Ords_t method = (LUCY_F32SortCache_Get_Native_Ords_t)cfish_obj_method(self, LUCY_F32SortCache_Get_Native_Ords_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define Float32SortCache lucy_Float32SortCache
  #define FLOAT32SORTCACHE LUCY_FLOAT32SORTCACHE
  #define F32SortCache_new lucy_F32SortCache_new
  #define F32SortCache_init lucy_F32SortCache_init
  #define F32SortCache_get_class lucy_F32SortCache_get_class
  #define F32SortCache_get_class_name lucy_F32SortCache_get_class_name
  #define F32SortCache_is_a lucy_F32SortCache_is_a
  #define F32SortCache_Value_IMP LUCY_F32SortCache_Value_IMP
  #define F32SortCache_To_Host LUCY_F32SortCache_To_Host
  #define F32SortCache_To_Host_t LUCY_F32SortCache_To_Host_t
  #define F32SortCache_Clone LUCY_F32SortCache_Clone
  #define F32SortCache_Clone_t LUCY_F32SortCache_Clone_t
  #define F32SortCache_Equals LUCY_F32SortCache_Equals
  #define F32SortCache_Equals_t LUCY_F32SortCache_Equals_t
  #define F32SortCache_Compare_To LUCY_F32SortCache_Compare_To
  #define F32SortCache_Compare_To_t LUCY_F32SortCache_Compare_To_t
  #define F32SortCache_Destroy LUCY_F32SortCache_Destroy
  #define F32SortCache_Destroy_t LUCY_F32SortCache_Destroy_t
  #define F32SortCache_To_String LUCY_F32SortCache_To_String
  #define F32SortCache_To_String_t LUCY_F32SortCache_To_String_t
  #define F32SortCache_Value LUCY_F32SortCache_Value
  #define F32SortCache_Value_t LUCY_F32SortCache_Value_t
  #define F32SortCache_Get_Ords LUCY_F32SortCache_Get_Ords
  #define F32SortCache_Get_Ords_t LUCY_F32SortCache_Get_Ords_t
  #define F32SortCache_Get_Cardinality LUCY_F32SortCache_Get_Cardinality
  #define F32SortCache_Get_Cardinality_t LUCY_F32SortCache_Get_Cardinality_t
  #define F32SortCache_Get_Ord_Width LUCY_F32SortCache_Get_Ord_Width
  #define F32SortCache_Get_Ord_Width_t LUCY_F32SortCache_Get_Ord_Width_t
  #define F32SortCache_Get_Null_Ord LUCY_F32SortCache_Get_Null_Ord
  #define F32SortCache_Get_Null_Ord_t LUCY_F32SortCache_Get_Null_Ord_t
  #define F32SortCache_Ordinal LUCY_F32SortCache_Ordinal
  #define F32SortCache_Ordinal_t LUCY_F32SortCache_Ordinal_t
  #define F32SortCache_Find LUCY_F32SortCache_Find
  #define F32SortCache_Find_t LUCY_F32SortCache_Find_t
  #define F32SortCache_Set_Native_Ords LUCY_F32SortCache_Set_Native_Ords
  #define F32SortCache_Set_Native_Ords_t LUCY_F32SortCache_Set_Native_Ords_t
  #define F32SortCache_Get_Native_Ords LUCY_F32SortCache_Get_Native_Ords
  #define F32SortCache_Get_Native_Ords_t LUCY_F32SortCache_Get_Native_Ords_t
#endif /* LUCY_USE_SHORT_NAMES */



/* Include the header for this class's parent. 
 */

#include "Lucy/Index/SortCache/NumericSortCache.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_INT32SORTCACHE
extern uint32_t lucy_I32SortCache_IVARS_OFFSET;
typedef struct lucy_Int32SortCacheIVARS lucy_Int32SortCacheIVARS;
static CFISH_INLINE lucy_Int32SortCacheIVARS*
lucy_I32SortCache_IVARS(lucy_Int32SortCache *self) {
   char *ptr = (char*)self + lucy_I32SortCache_IVARS_OFFSET;
   return (lucy_Int32SortCacheIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define Int32SortCacheIVARS lucy_Int32SortCacheIVARS
  #define I32SortCache_IVARS lucy_I32SortCache_IVARS
#endif

struct lucy_Int32SortCacheIVARS {
    cfish_String* field;
    lucy_FieldType* type;
    const void* ords;
    int32_t doc_max;
    int32_t cardinality;
    int32_t ord_width;
    int32_t null_ord;
    bool native_ords;
    lucy_InStream* ord_in;
    lucy_InStream* dat_in;
};

#endif /* C_LUCY_INT32SORTCACHE */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_Int32SortCache*
lucy_I32SortCache_new(cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* dat_in);

LUCY_VISIBLE lucy_Int32SortCache*
lucy_I32SortCache_init(lucy_Int32SortCache* self, cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* dat_in);

cfish_Obj*
LUCY_I32SortCache_Value_IMP(lucy_Int32SortCache* self, int32_t ord);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_I32SortCache_To_Host_t)(lucy_Int32SortCache* self, void* vcache);

typedef cfish_Obj*
(*LUCY_I32SortCache_Clone_t)(lucy_Int32SortCache* self);

typedef bool
(*LUCY_I32SortCache_Equals_t)(lucy_Int32SortCache* self, cfish_Obj* other);

typedef int32_t
(*LUCY_I32SortCache_Compare_To_t)(lucy_Int32SortCache* self, cfish_Obj* other);

typedef void
(*LUCY_I32SortCache_Destroy_t)(lucy_Int32SortCache* self);

typedef cfish_String*
(*LUCY_I32SortCache_To_String_t)(lucy_Int32SortCache* self);

typedef cfish_Obj*
(*LUCY_I32SortCache_Value_t)(lucy_Int32SortCache* self, int32_t ord);

typedef const void*
(*LUCY_I32SortCache_Get_Ords_t)(lucy_Int32SortCache* self);

typedef int32_t
(*LUCY_I32SortCache_Get_Cardinality_t)(lucy_Int32SortCache* self);

typedef int32_t
(*LUCY_I32SortCache_Get_Ord_Width_t)(lucy_Int32SortCache* self);

typedef int32_t
(*LUCY_I32SortCache_Get_Null_Ord_t)(lucy_Int32SortCache* self);

typedef int32_t
(*LUCY_I32SortCache_Ordinal_t)(lucy_Int32SortCache* self, int32_t doc_id);

typedef int32_t
(*LUCY_I32SortCache_Find_t)(lucy_Int32SortCache* self, cfish_Obj* term);

typedef void
(*LUCY_I32SortCache_Set_Native_Ords_t)(lucy_Int32SortCache* self, bool native_ords);

typedef bool
(*LUCY_I32SortCache_Get_Native_Ords_t)(lucy_Int32SortCache* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_I32SortCache_get_class(lucy_Int32SortCache *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_I32SortCache_get_class_name(lucy_Int32SortCache *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_I32SortCache_is_a(lucy_Int32SortCache *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_I32SortCache_To_Host(lucy_Int32SortCache* self, void* vcache) {
    const LUCY_I32SortCache_To_Host_t method = (LUCY_I32SortCache_To_Host_t)cfish_obj_method(self, LUCY_I32SortCache_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_I32SortCache_Clone(lucy_Int32SortCache* self) {
    const LUCY_I32SortCache_Clone_t method = (LUCY_I32SortCache_Clone_t)cfish_obj_method(self, LUCY_I32SortCache_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_I32SortCache_Equals(lucy_Int32SortCache* self, cfish_Obj* other) {
    const LUCY_I32SortCache_Equals_t method = (LUCY_I32SortCache_Equals_t)cfish_obj_method(self, LUCY_I32SortCache_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_I32SortCache_Compare_To(lucy_Int32SortCache* self, cfish_Obj* other) {
    const LUCY_I32SortCache_Compare_To_t method = (LUCY_I32SortCache_Compare_To_t)cfish_obj_method(self, LUCY_I32SortCache_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_I32SortCache_Destroy(lucy_Int32SortCache* self) {
    const LUCY_I32SortCache_Destroy_t method = (LUCY_I32SortCache_Destroy_t)cfish_obj_method(self, LUCY_I32SortCache_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_I32SortCache_To_String(lucy_Int32SortCache* self) {
    const LUCY_I32SortCache_To_String_t method = (LUCY_I32SortCache_To_String_t)cfish_obj_method(self, LUCY_I32SortCache_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Value_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_I32SortCache_Value(lucy_Int32SortCache* self, int32_t ord) {
    const LUCY_I32SortCache_Value_t method = (LUCY_I32SortCache_Value_t)cfish_obj_method(self, LUCY_I32SortCache_Value_OFFSET);
    return method(self, ord);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Get_Ords_OFFSET;
static CFISH_INLINE const void*
LUCY_I32SortCache_Get_Ords(lucy_Int32SortCache* self) {
    const LUCY_I32SortCache_Get_Ords_t method = (LUCY_I32SortCache_Get_Ords_t)cfish_obj_method(self, LUCY_I32SortCache_Get_Ords_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Get_Cardinality_OFFSET;
static CFISH_INLINE int32_t
LUCY_I32SortCache_Get_Cardinality(lucy_Int32SortCache* self) {
    const LUCY_I32SortCache_Get_Cardinality_t method = (LUCY_I32SortCache_Get_Cardinality_t)cfish_obj_method(self, LUCY_I32SortCache_Get_Cardinality_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Get_Ord_Width_OFFSET;
static CFISH_INLINE int32_t
LUCY_I32SortCache_Get_Ord_Width(lucy_Int32SortCache* self) {
    const LUCY_I32SortCache_Get_Ord_Width_t method = (LUCY_I32SortCache_Get_Ord_Width_t)cfish_obj_method(self, LUCY_I32SortCache_Get_Ord_Width_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Get_Null_Ord_OFFSET;
static CFISH_INLINE int32_t
LUCY_I32SortCache_Get_Null_Ord(lucy_Int32SortCache* self) {
    const LUCY_I32SortCache_Get_Null_Ord_t method = (LUCY_I32SortCache_Get_Null_Ord_t)cfish_obj_method(self, LUCY_I32SortCache_Get_Null_Ord_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Ordinal_OFFSET;
static CFISH_INLINE int32_t
LUCY_I32SortCache_Ordinal(lucy_Int32SortCache* self, int32_t doc_id) {
    const LUCY_I32SortCache_Ordinal_t method = (LUCY_I32SortCache_Ordinal_t)cfish_obj_method(self, LUCY_I32SortCache_Ordinal_OFFSET);
    return method(self, doc_id);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Find_OFFSET;
static CFISH_INLINE int32_t
LUCY_I32SortCache_Find(lucy_Int32SortCache* self, cfish_Obj* term) {
    const LUCY_I32SortCache_Find_t method = (LUCY_I32SortCache_Find_t)cfish_obj_method(self, LUCY_I32SortCache_Find_OFFSET);
    return method(self, term);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Set_Native_Ords_OFFSET;
static CFISH_INLINE void
LUCY_I32SortCache_Set_Native_Ords(lucy_Int32SortCache* self, bool native_ords) {
    const LUCY_I32SortCache_Set_Native_Ords_t method = (LUCY_I32SortCache_Set_Native_Ords_t)cfish_obj_method(self, LUCY_I32SortCache_Set_Native_Ords_OFFSET);
    method(self, native_ords);
}

extern LUCY_VISIBLE uint32_t LUCY_I32SortCache_Get_Native_Ords_OFFSET;
static CFISH_INLINE bool
LUCY_I32SortCache_Get_Native_Ords(lucy_Int32SortCache* self) {
    const LUCY_I32SortCache_Get_Native_Ords_t method = (LUCY_I32SortCache_Get_Native_Ords_t)cfish_obj_method(self, LUCY_I32SortCache_Get_Native_Ords_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define Int32SortCache lucy_Int32SortCache
  #define INT32SORTCACHE LUCY_INT32SORTCACHE
  #define I32SortCache_new lucy_I32SortCache_new
  #define I32SortCache_init lucy_I32SortCache_init
  #define I32SortCache_get_class lucy_I32SortCache_get_class
  #define I32SortCache_get_class_name lucy_I32SortCache_get_class_name
  #define I32SortCache_is_a lucy_I32SortCache_is_a
  #define I32SortCache_Value_IMP LUCY_I32SortCache_Value_IMP
  #define I32SortCache_To_Host LUCY_I32SortCache_To_Host
  #define I32SortCache_To_Host_t LUCY_I32SortCache_To_Host_t
  #define I32SortCache_Clone LUCY_I32SortCache_Clone
  #define I32SortCache_Clone_t LUCY_I32SortCache_Clone_t
  #define I32SortCache_Equals LUCY_I32SortCache_Equals
  #define I32SortCache_Equals_t LUCY_I32SortCache_Equals_t
  #define I32SortCache_Compare_To LUCY_I32SortCache_Compare_To
  #define I32SortCache_Compare_To_t LUCY_I32SortCache_Compare_To_t
  #define I32SortCache_Destroy LUCY_I32SortCache_Destroy
  #define I32SortCache_Destroy_t LUCY_I32SortCache_Destroy_t
  #define I32SortCache_To_String LUCY_I32SortCache_To_String
  #define I32SortCache_To_String_t LUCY_I32SortCache_To_String_t
  #define I32SortCache_Value LUCY_I32SortCache_Value
  #define I32SortCache_Value_t LUCY_I32SortCache_Value_t
  #define I32SortCache_Get_Ords LUCY_I32SortCache_Get_Ords
  #define I32SortCache_Get_Ords_t LUCY_I32SortCache_Get_Ords_t
  #define I32SortCache_Get_Cardinality LUCY_I32SortCache_Get_Cardinality
  #define I32SortCache_Get_Cardinality_t LUCY_I32SortCache_Get_Cardinality_t
  #define I32SortCache_Get_Ord_Width LUCY_I32SortCache_Get_Ord_Width
  #define I32SortCache_Get_Ord_Width_t LUCY_I32SortCache_Get_Ord_Width_t
  #define I32SortCache_Get_Null_Ord LUCY_I32SortCache_Get_Null_Ord
  #define I32SortCache_Get_Null_Ord_t LUCY_I32SortCache_Get_Null_Ord_t
  #define I32SortCache_Ordinal LUCY_I32SortCache_Ordinal
  #define I32SortCache_Ordinal_t LUCY_I32SortCache_Ordinal_t
  #define I32SortCache_Find LUCY_I32SortCache_Find
  #define I32SortCache_Find_t LUCY_I32SortCache_Find_t
  #define I32SortCache_Set_Native_Ords LUCY_I32SortCache_Set_Native_Ords
  #define I32SortCache_Set_Native_Ords_t LUCY_I32SortCache_Set_Native_Ords_t
  #define I32SortCache_Get_Native_Ords LUCY_I32SortCache_Get_Native_Ords
  #define I32SortCache_Get_Native_Ords_t LUCY_I32SortCache_Get_Native_Ords_t
#endif /* LUCY_USE_SHORT_NAMES */



/* Include the header for this class's parent. 
 */

#include "Lucy/Index/SortCache/NumericSortCache.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_INT64SORTCACHE
extern uint32_t lucy_I64SortCache_IVARS_OFFSET;
typedef struct lucy_Int64SortCacheIVARS lucy_Int64SortCacheIVARS;
static CFISH_INLINE lucy_Int64SortCacheIVARS*
lucy_I64SortCache_IVARS(lucy_Int64SortCache *self) {
   char *ptr = (char*)self + lucy_I64SortCache_IVARS_OFFSET;
   return (lucy_Int64SortCacheIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define Int64SortCacheIVARS lucy_Int64SortCacheIVARS
  #define I64SortCache_IVARS lucy_I64SortCache_IVARS
#endif

struct lucy_Int64SortCacheIVARS {
    cfish_String* field;
    lucy_FieldType* type;
    const void* ords;
    int32_t doc_max;
    int32_t cardinality;
    int32_t ord_width;
    int32_t null_ord;
    bool native_ords;
    lucy_InStream* ord_in;
    lucy_InStream* dat_in;
};

#endif /* C_LUCY_INT64SORTCACHE */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_Int64SortCache*
lucy_I64SortCache_new(cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* dat_in);

LUCY_VISIBLE lucy_Int64SortCache*
lucy_I64SortCache_init(lucy_Int64SortCache* self, cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* dat_in);

cfish_Obj*
LUCY_I64SortCache_Value_IMP(lucy_Int64SortCache* self, int32_t ord);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_I64SortCache_To_Host_t)(lucy_Int64SortCache* self, void* vcache);

typedef cfish_Obj*
(*LUCY_I64SortCache_Clone_t)(lucy_Int64SortCache* self);

typedef bool
(*LUCY_I64SortCache_Equals_t)(lucy_Int64SortCache* self, cfish_Obj* other);

typedef int32_t
(*LUCY_I64SortCache_Compare_To_t)(lucy_Int64SortCache* self, cfish_Obj* other);

typedef void
(*LUCY_I64SortCache_Destroy_t)(lucy_Int64SortCache* self);

typedef cfish_String*
(*LUCY_I64SortCache_To_String_t)(lucy_Int64SortCache* self);

typedef cfish_Obj*
(*LUCY_I64SortCache_Value_t)(lucy_Int64SortCache* self, int32_t ord);

typedef const void*
(*LUCY_I64SortCache_Get_Ords_t)(lucy_Int64SortCache* self);

typedef int32_t
(*LUCY_I64SortCache_Get_Cardinality_t)(lucy_Int64SortCache* self);

typedef int32_t
(*LUCY_I64SortCache_Get_Ord_Width_t)(lucy_Int64SortCache* self);

typedef int32_t
(*LUCY_I64SortCache_Get_Null_Ord_t)(lucy_Int64SortCache* self);

typedef int32_t
(*LUCY_I64SortCache_Ordinal_t)(lucy_Int64SortCache* self, int32_t doc_id);

typedef int32_t
(*LUCY_I64SortCache_Find_t)(lucy_Int64SortCache* self, cfish_Obj* term);

typedef void
(*LUCY_I64SortCache_Set_Native_Ords_t)(lucy_Int64SortCache* self, bool native_ords);

typedef bool
(*LUCY_I64SortCache_Get_Native_Ords_t)(lucy_Int64SortCache* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_I64SortCache_get_class(lucy_Int64SortCache *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_I64SortCache_get_class_name(lucy_Int64SortCache *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_I64SortCache_is_a(lucy_Int64SortCache *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_I64SortCache_To_Host(lucy_Int64SortCache* self, void* vcache) {
    const LUCY_I64SortCache_To_Host_t method = (LUCY_I64SortCache_To_Host_t)cfish_obj_method(self, LUCY_I64SortCache_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_I64SortCache_Clone(lucy_Int64SortCache* self) {
    const LUCY_I64SortCache_Clone_t method = (LUCY_I64SortCache_Clone_t)cfish_obj_method(self, LUCY_I64SortCache_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_I64SortCache_Equals(lucy_Int64SortCache* self, cfish_Obj* other) {
    const LUCY_I64SortCache_Equals_t method = (LUCY_I64SortCache_Equals_t)cfish_obj_method(self, LUCY_I64SortCache_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_I64SortCache_Compare_To(lucy_Int64SortCache* self, cfish_Obj* other) {
    const LUCY_I64SortCache_Compare_To_t method = (LUCY_I64SortCache_Compare_To_t)cfish_obj_method(self, LUCY_I64SortCache_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_I64SortCache_Destroy(lucy_Int64SortCache* self) {
    const LUCY_I64SortCache_Destroy_t method = (LUCY_I64SortCache_Destroy_t)cfish_obj_method(self, LUCY_I64SortCache_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_I64SortCache_To_String(lucy_Int64SortCache* self) {
    const LUCY_I64SortCache_To_String_t method = (LUCY_I64SortCache_To_String_t)cfish_obj_method(self, LUCY_I64SortCache_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Value_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_I64SortCache_Value(lucy_Int64SortCache* self, int32_t ord) {
    const LUCY_I64SortCache_Value_t method = (LUCY_I64SortCache_Value_t)cfish_obj_method(self, LUCY_I64SortCache_Value_OFFSET);
    return method(self, ord);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Get_Ords_OFFSET;
static CFISH_INLINE const void*
LUCY_I64SortCache_Get_Ords(lucy_Int64SortCache* self) {
    const LUCY_I64SortCache_Get_Ords_t method = (LUCY_I64SortCache_Get_Ords_t)cfish_obj_method(self, LUCY_I64SortCache_Get_Ords_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Get_Cardinality_OFFSET;
static CFISH_INLINE int32_t
LUCY_I64SortCache_Get_Cardinality(lucy_Int64SortCache* self) {
    const LUCY_I64SortCache_Get_Cardinality_t method = (LUCY_I64SortCache_Get_Cardinality_t)cfish_obj_method(self, LUCY_I64SortCache_Get_Cardinality_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Get_Ord_Width_OFFSET;
static CFISH_INLINE int32_t
LUCY_I64SortCache_Get_Ord_Width(lucy_Int64SortCache* self) {
    const LUCY_I64SortCache_Get_Ord_Width_t method = (LUCY_I64SortCache_Get_Ord_Width_t)cfish_obj_method(self, LUCY_I64SortCache_Get_Ord_Width_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Get_Null_Ord_OFFSET;
static CFISH_INLINE int32_t
LUCY_I64SortCache_Get_Null_Ord(lucy_Int64SortCache* self) {
    const LUCY_I64SortCache_Get_Null_Ord_t method = (LUCY_I64SortCache_Get_Null_Ord_t)cfish_obj_method(self, LUCY_I64SortCache_Get_Null_Ord_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Ordinal_OFFSET;
static CFISH_INLINE int32_t
LUCY_I64SortCache_Ordinal(lucy_Int64SortCache* self, int32_t doc_id) {
    const LUCY_I64SortCache_Ordinal_t method = (LUCY_I64SortCache_Ordinal_t)cfish_obj_method(self, LUCY_I64SortCache_Ordinal_OFFSET);
    return method(self, doc_id);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Find_OFFSET;
static CFISH_INLINE int32_t
LUCY_I64SortCache_Find(lucy_Int64SortCache* self, cfish_Obj* term) {
    const LUCY_I64SortCache_Find_t method = (LUCY_I64SortCache_Find_t)cfish_obj_method(self, LUCY_I64SortCache_Find_OFFSET);
    return method(self, term);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Set_Native_Ords_OFFSET;
static CFISH_INLINE void
LUCY_I64SortCache_Set_Native_Ords(lucy_Int64SortCache* self, bool native_ords) {
    const LUCY_I64SortCache_Set_Native_Ords_t method = (LUCY_I64SortCache_Set_Native_Ords_t)cfish_obj_method(self, LUCY_I64SortCache_Set_Native_Ords_OFFSET);
    method(self, native_ords);
}

extern LUCY_VISIBLE uint32_t LUCY_I64SortCache_Get_Native_Ords_OFFSET;
static CFISH_INLINE bool
LUCY_I64SortCache_Get_Native_Ords(lucy_Int64SortCache* self) {
    const LUCY_I64SortCache_Get_Native_Ords_t method = (LUCY_I64SortCache_Get_Native_Ords_t)cfish_obj_method(self, LUCY_I64SortCache_Get_Native_Ords_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define Int64SortCache lucy_Int64SortCache
  #define INT64SORTCACHE LUCY_INT64SORTCACHE
  #define I64SortCache_new lucy_I64SortCache_new
  #define I64SortCache_init lucy_I64SortCache_init
  #define I64SortCache_get_class lucy_I64SortCache_get_class
  #define I64SortCache_get_class_name lucy_I64SortCache_get_class_name
  #define I64SortCache_is_a lucy_I64SortCache_is_a
  #define I64SortCache_Value_IMP LUCY_I64SortCache_Value_IMP
  #define I64SortCache_To_Host LUCY_I64SortCache_To_Host
  #define I64SortCache_To_Host_t LUCY_I64SortCache_To_Host_t
  #define I64SortCache_Clone LUCY_I64SortCache_Clone
  #define I64SortCache_Clone_t LUCY_I64SortCache_Clone_t
  #define I64SortCache_Equals LUCY_I64SortCache_Equals
  #define I64SortCache_Equals_t LUCY_I64SortCache_Equals_t
  #define I64SortCache_Compare_To LUCY_I64SortCache_Compare_To
  #define I64SortCache_Compare_To_t LUCY_I64SortCache_Compare_To_t
  #define I64SortCache_Destroy LUCY_I64SortCache_Destroy
  #define I64SortCache_Destroy_t LUCY_I64SortCache_Destroy_t
  #define I64SortCache_To_String LUCY_I64SortCache_To_String
  #define I64SortCache_To_String_t LUCY_I64SortCache_To_String_t
  #define I64SortCache_Value LUCY_I64SortCache_Value
  #define I64SortCache_Value_t LUCY_I64SortCache_Value_t
  #define I64SortCache_Get_Ords LUCY_I64SortCache_Get_Ords
  #define I64SortCache_Get_Ords_t LUCY_I64SortCache_Get_Ords_t
  #define I64SortCache_Get_Cardinality LUCY_I64SortCache_Get_Cardinality
  #define I64SortCache_Get_Cardinality_t LUCY_I64SortCache_Get_Cardinality_t
  #define I64SortCache_Get_Ord_Width LUCY_I64SortCache_Get_Ord_Width
  #define I64SortCache_Get_Ord_Width_t LUCY_I64SortCache_Get_Ord_Width_t
  #define I64SortCache_Get_Null_Ord LUCY_I64SortCache_Get_Null_Ord
  #define I64SortCache_Get_Null_Ord_t LUCY_I64SortCache_Get_Null_Ord_t
  #define I64SortCache_Ordinal LUCY_I64SortCache_Ordinal
  #define I64SortCache_Ordinal_t LUCY_I64SortCache_Ordinal_t
  #define I64SortCache_Find LUCY_I64SortCache_Find
  #define I64SortCache_Find_t LUCY_I64SortCache_Find_t
  #define I64SortCache_Set_Native_Ords LUCY_I64SortCache_Set_Native_Ords
  #define I64SortCache_Set_Native_Ords_t LUCY_I64SortCache_Set_Native_Ords_t
  #define I64SortCache_Get_Native_Ords LUCY_I64SortCache_Get_Native_Ords
  #define I64SortCache_Get_Native_Ords_t LUCY_I64SortCache_Get_Native_Ords_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_INDEX_SORTCACHE_NUMERICSORTCACHE */




