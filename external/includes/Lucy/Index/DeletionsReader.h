/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_INDEX_DELETIONSREADER
#define H_LUCY_INDEX_DELETIONSREADER 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Lucy/Index/DataReader.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_DELETIONSREADER
extern uint32_t lucy_DelReader_IVARS_OFFSET;
typedef struct lucy_DeletionsReaderIVARS lucy_DeletionsReaderIVARS;
static CFISH_INLINE lucy_DeletionsReaderIVARS*
lucy_DelReader_IVARS(lucy_DeletionsReader *self) {
   char *ptr = (char*)self + lucy_DelReader_IVARS_OFFSET;
   return (lucy_DeletionsReaderIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define DeletionsReaderIVARS lucy_DeletionsReaderIVARS
  #define DelReader_IVARS lucy_DelReader_IVARS
#endif

struct lucy_DeletionsReaderIVARS {
    lucy_Schema* schema;
    lucy_Folder* folder;
    lucy_Snapshot* snapshot;
    cfish_Vector* segments;
    lucy_Segment* segment;
    int32_t seg_tick;
};

#endif /* C_LUCY_DELETIONSREADER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_DeletionsReader*
lucy_DelReader_init(lucy_DeletionsReader* self, lucy_Schema* schema, lucy_Folder* folder, lucy_Snapshot* snapshot, cfish_Vector* segments, int32_t seg_tick);

int32_t
LUCY_DelReader_Del_Count_IMP(lucy_DeletionsReader* self);

lucy_Matcher*
LUCY_DelReader_Iterator_IMP(lucy_DeletionsReader* self);

lucy_DeletionsReader*
LUCY_DelReader_Aggregator_IMP(lucy_DeletionsReader* self, cfish_Vector* readers, lucy_I32Array* offsets);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_DelReader_To_Host_t)(lucy_DeletionsReader* self, void* vcache);

typedef cfish_Obj*
(*LUCY_DelReader_Clone_t)(lucy_DeletionsReader* self);

typedef bool
(*LUCY_DelReader_Equals_t)(lucy_DeletionsReader* self, cfish_Obj* other);

typedef int32_t
(*LUCY_DelReader_Compare_To_t)(lucy_DeletionsReader* self, cfish_Obj* other);

typedef void
(*LUCY_DelReader_Destroy_t)(lucy_DeletionsReader* self);

typedef cfish_String*
(*LUCY_DelReader_To_String_t)(lucy_DeletionsReader* self);

typedef lucy_DeletionsReader*
(*LUCY_DelReader_Aggregator_t)(lucy_DeletionsReader* self, cfish_Vector* readers, lucy_I32Array* offsets);

typedef lucy_Schema*
(*LUCY_DelReader_Get_Schema_t)(lucy_DeletionsReader* self);

typedef lucy_Folder*
(*LUCY_DelReader_Get_Folder_t)(lucy_DeletionsReader* self);

typedef lucy_Snapshot*
(*LUCY_DelReader_Get_Snapshot_t)(lucy_DeletionsReader* self);

typedef cfish_Vector*
(*LUCY_DelReader_Get_Segments_t)(lucy_DeletionsReader* self);

typedef lucy_Segment*
(*LUCY_DelReader_Get_Segment_t)(lucy_DeletionsReader* self);

typedef int32_t
(*LUCY_DelReader_Get_Seg_Tick_t)(lucy_DeletionsReader* self);

typedef void
(*LUCY_DelReader_Close_t)(lucy_DeletionsReader* self);

typedef int32_t
(*LUCY_DelReader_Del_Count_t)(lucy_DeletionsReader* self);

typedef lucy_Matcher*
(*LUCY_DelReader_Iterator_t)(lucy_DeletionsReader* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_DelReader_get_class(lucy_DeletionsReader *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_DelReader_get_class_name(lucy_DeletionsReader *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_DelReader_is_a(lucy_DeletionsReader *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_DelReader_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_DelReader_To_Host(lucy_DeletionsReader* self, void* vcache) {
    const LUCY_DelReader_To_Host_t method = (LUCY_DelReader_To_Host_t)cfish_obj_method(self, LUCY_DelReader_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_DelReader_Clone(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Clone_t method = (LUCY_DelReader_Clone_t)cfish_obj_method(self, LUCY_DelReader_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_DelReader_Equals(lucy_DeletionsReader* self, cfish_Obj* other) {
    const LUCY_DelReader_Equals_t method = (LUCY_DelReader_Equals_t)cfish_obj_method(self, LUCY_DelReader_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_DelReader_Compare_To(lucy_DeletionsReader* self, cfish_Obj* other) {
    const LUCY_DelReader_Compare_To_t method = (LUCY_DelReader_Compare_To_t)cfish_obj_method(self, LUCY_DelReader_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_DelReader_Destroy(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Destroy_t method = (LUCY_DelReader_Destroy_t)cfish_obj_method(self, LUCY_DelReader_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_DelReader_To_String(lucy_DeletionsReader* self) {
    const LUCY_DelReader_To_String_t method = (LUCY_DelReader_To_String_t)cfish_obj_method(self, LUCY_DelReader_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Aggregator_OFFSET;
static CFISH_INLINE lucy_DeletionsReader*
LUCY_DelReader_Aggregator(lucy_DeletionsReader* self, cfish_Vector* readers, lucy_I32Array* offsets) {
    const LUCY_DelReader_Aggregator_t method = (LUCY_DelReader_Aggregator_t)cfish_obj_method(self, LUCY_DelReader_Aggregator_OFFSET);
    return method(self, readers, offsets);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Get_Schema_OFFSET;
static CFISH_INLINE lucy_Schema*
LUCY_DelReader_Get_Schema(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Get_Schema_t method = (LUCY_DelReader_Get_Schema_t)cfish_obj_method(self, LUCY_DelReader_Get_Schema_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Get_Folder_OFFSET;
static CFISH_INLINE lucy_Folder*
LUCY_DelReader_Get_Folder(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Get_Folder_t method = (LUCY_DelReader_Get_Folder_t)cfish_obj_method(self, LUCY_DelReader_Get_Folder_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Get_Snapshot_OFFSET;
static CFISH_INLINE lucy_Snapshot*
LUCY_DelReader_Get_Snapshot(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Get_Snapshot_t method = (LUCY_DelReader_Get_Snapshot_t)cfish_obj_method(self, LUCY_DelReader_Get_Snapshot_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Get_Segments_OFFSET;
static CFISH_INLINE cfish_Vector*
LUCY_DelReader_Get_Segments(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Get_Segments_t method = (LUCY_DelReader_Get_Segments_t)cfish_obj_method(self, LUCY_DelReader_Get_Segments_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Get_Segment_OFFSET;
static CFISH_INLINE lucy_Segment*
LUCY_DelReader_Get_Segment(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Get_Segment_t method = (LUCY_DelReader_Get_Segment_t)cfish_obj_method(self, LUCY_DelReader_Get_Segment_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Get_Seg_Tick_OFFSET;
static CFISH_INLINE int32_t
LUCY_DelReader_Get_Seg_Tick(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Get_Seg_Tick_t method = (LUCY_DelReader_Get_Seg_Tick_t)cfish_obj_method(self, LUCY_DelReader_Get_Seg_Tick_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Close_OFFSET;
static CFISH_INLINE void
LUCY_DelReader_Close(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Close_t method = (LUCY_DelReader_Close_t)cfish_obj_method(self, LUCY_DelReader_Close_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Del_Count_OFFSET;
static CFISH_INLINE int32_t
LUCY_DelReader_Del_Count(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Del_Count_t method = (LUCY_DelReader_Del_Count_t)cfish_obj_method(self, LUCY_DelReader_Del_Count_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DelReader_Iterator_OFFSET;
static CFISH_INLINE lucy_Matcher*
LUCY_DelReader_Iterator(lucy_DeletionsReader* self) {
    const LUCY_DelReader_Iterator_t method = (LUCY_DelReader_Iterator_t)cfish_obj_method(self, LUCY_DelReader_Iterator_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_DelReader_Del_Count_OVERRIDE NULL
#define Lucy_DelReader_Iterator_OVERRIDE NULL
#else
int32_t
Lucy_DelReader_Del_Count_OVERRIDE(lucy_DeletionsReader* self);
lucy_Matcher*
Lucy_DelReader_Iterator_OVERRIDE(lucy_DeletionsReader* self);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define DeletionsReader lucy_DeletionsReader
  #define DELETIONSREADER LUCY_DELETIONSREADER
  #define DelReader_init lucy_DelReader_init
  #define DelReader_get_class lucy_DelReader_get_class
  #define DelReader_get_class_name lucy_DelReader_get_class_name
  #define DelReader_is_a lucy_DelReader_is_a
  #define DelReader_Del_Count_IMP LUCY_DelReader_Del_Count_IMP
  #define DelReader_Iterator_IMP LUCY_DelReader_Iterator_IMP
  #define DelReader_Aggregator_IMP LUCY_DelReader_Aggregator_IMP
  #define DelReader_To_Host LUCY_DelReader_To_Host
  #define DelReader_To_Host_t LUCY_DelReader_To_Host_t
  #define DelReader_Clone LUCY_DelReader_Clone
  #define DelReader_Clone_t LUCY_DelReader_Clone_t
  #define DelReader_Equals LUCY_DelReader_Equals
  #define DelReader_Equals_t LUCY_DelReader_Equals_t
  #define DelReader_Compare_To LUCY_DelReader_Compare_To
  #define DelReader_Compare_To_t LUCY_DelReader_Compare_To_t
  #define DelReader_Destroy LUCY_DelReader_Destroy
  #define DelReader_Destroy_t LUCY_DelReader_Destroy_t
  #define DelReader_To_String LUCY_DelReader_To_String
  #define DelReader_To_String_t LUCY_DelReader_To_String_t
  #define DelReader_Aggregator LUCY_DelReader_Aggregator
  #define DelReader_Aggregator_t LUCY_DelReader_Aggregator_t
  #define DelReader_Get_Schema LUCY_DelReader_Get_Schema
  #define DelReader_Get_Schema_t LUCY_DelReader_Get_Schema_t
  #define DelReader_Get_Folder LUCY_DelReader_Get_Folder
  #define DelReader_Get_Folder_t LUCY_DelReader_Get_Folder_t
  #define DelReader_Get_Snapshot LUCY_DelReader_Get_Snapshot
  #define DelReader_Get_Snapshot_t LUCY_DelReader_Get_Snapshot_t
  #define DelReader_Get_Segments LUCY_DelReader_Get_Segments
  #define DelReader_Get_Segments_t LUCY_DelReader_Get_Segments_t
  #define DelReader_Get_Segment LUCY_DelReader_Get_Segment
  #define DelReader_Get_Segment_t LUCY_DelReader_Get_Segment_t
  #define DelReader_Get_Seg_Tick LUCY_DelReader_Get_Seg_Tick
  #define DelReader_Get_Seg_Tick_t LUCY_DelReader_Get_Seg_Tick_t
  #define DelReader_Close LUCY_DelReader_Close
  #define DelReader_Close_t LUCY_DelReader_Close_t
  #define DelReader_Del_Count LUCY_DelReader_Del_Count
  #define DelReader_Del_Count_t LUCY_DelReader_Del_Count_t
  #define DelReader_Iterator LUCY_DelReader_Iterator
  #define DelReader_Iterator_t LUCY_DelReader_Iterator_t
#endif /* LUCY_USE_SHORT_NAMES */



/* Include the header for this class's parent. 
 */

#include "Lucy/Index/DeletionsReader.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_POLYDELETIONSREADER
extern uint32_t lucy_PolyDelReader_IVARS_OFFSET;
typedef struct lucy_PolyDeletionsReaderIVARS lucy_PolyDeletionsReaderIVARS;
static CFISH_INLINE lucy_PolyDeletionsReaderIVARS*
lucy_PolyDelReader_IVARS(lucy_PolyDeletionsReader *self) {
   char *ptr = (char*)self + lucy_PolyDelReader_IVARS_OFFSET;
   return (lucy_PolyDeletionsReaderIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define PolyDeletionsReaderIVARS lucy_PolyDeletionsReaderIVARS
  #define PolyDelReader_IVARS lucy_PolyDelReader_IVARS
#endif

struct lucy_PolyDeletionsReaderIVARS {
    lucy_Schema* schema;
    lucy_Folder* folder;
    lucy_Snapshot* snapshot;
    cfish_Vector* segments;
    lucy_Segment* segment;
    int32_t seg_tick;
    cfish_Vector* readers;
    lucy_I32Array* offsets;
    int32_t del_count;
};

#endif /* C_LUCY_POLYDELETIONSREADER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_PolyDeletionsReader*
lucy_PolyDelReader_new(cfish_Vector* readers, lucy_I32Array* offsets);

LUCY_VISIBLE lucy_PolyDeletionsReader*
lucy_PolyDelReader_init(lucy_PolyDeletionsReader* self, cfish_Vector* readers, lucy_I32Array* offsets);

int32_t
LUCY_PolyDelReader_Del_Count_IMP(lucy_PolyDeletionsReader* self);

lucy_Matcher*
LUCY_PolyDelReader_Iterator_IMP(lucy_PolyDeletionsReader* self);

void
LUCY_PolyDelReader_Close_IMP(lucy_PolyDeletionsReader* self);

void
LUCY_PolyDelReader_Destroy_IMP(lucy_PolyDeletionsReader* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_PolyDelReader_To_Host_t)(lucy_PolyDeletionsReader* self, void* vcache);

typedef cfish_Obj*
(*LUCY_PolyDelReader_Clone_t)(lucy_PolyDeletionsReader* self);

typedef bool
(*LUCY_PolyDelReader_Equals_t)(lucy_PolyDeletionsReader* self, cfish_Obj* other);

typedef int32_t
(*LUCY_PolyDelReader_Compare_To_t)(lucy_PolyDeletionsReader* self, cfish_Obj* other);

typedef void
(*LUCY_PolyDelReader_Destroy_t)(lucy_PolyDeletionsReader* self);

typedef cfish_String*
(*LUCY_PolyDelReader_To_String_t)(lucy_PolyDeletionsReader* self);

typedef lucy_DeletionsReader*
(*LUCY_PolyDelReader_Aggregator_t)(lucy_PolyDeletionsReader* self, cfish_Vector* readers, lucy_I32Array* offsets);

typedef lucy_Schema*
(*LUCY_PolyDelReader_Get_Schema_t)(lucy_PolyDeletionsReader* self);

typedef lucy_Folder*
(*LUCY_PolyDelReader_Get_Folder_t)(lucy_PolyDeletionsReader* self);

typedef lucy_Snapshot*
(*LUCY_PolyDelReader_Get_Snapshot_t)(lucy_PolyDeletionsReader* self);

typedef cfish_Vector*
(*LUCY_PolyDelReader_Get_Segments_t)(lucy_PolyDeletionsReader* self);

typedef lucy_Segment*
(*LUCY_PolyDelReader_Get_Segment_t)(lucy_PolyDeletionsReader* self);

typedef int32_t
(*LUCY_PolyDelReader_Get_Seg_Tick_t)(lucy_PolyDeletionsReader* self);

typedef void
(*LUCY_PolyDelReader_Close_t)(lucy_PolyDeletionsReader* self);

typedef int32_t
(*LUCY_PolyDelReader_Del_Count_t)(lucy_PolyDeletionsReader* self);

typedef lucy_Matcher*
(*LUCY_PolyDelReader_Iterator_t)(lucy_PolyDeletionsReader* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_PolyDelReader_get_class(lucy_PolyDeletionsReader *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_PolyDelReader_get_class_name(lucy_PolyDeletionsReader *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_PolyDelReader_is_a(lucy_PolyDeletionsReader *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_PolyDelReader_To_Host(lucy_PolyDeletionsReader* self, void* vcache) {
    const LUCY_PolyDelReader_To_Host_t method = (LUCY_PolyDelReader_To_Host_t)cfish_obj_method(self, LUCY_PolyDelReader_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_PolyDelReader_Clone(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Clone_t method = (LUCY_PolyDelReader_Clone_t)cfish_obj_method(self, LUCY_PolyDelReader_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_PolyDelReader_Equals(lucy_PolyDeletionsReader* self, cfish_Obj* other) {
    const LUCY_PolyDelReader_Equals_t method = (LUCY_PolyDelReader_Equals_t)cfish_obj_method(self, LUCY_PolyDelReader_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_PolyDelReader_Compare_To(lucy_PolyDeletionsReader* self, cfish_Obj* other) {
    const LUCY_PolyDelReader_Compare_To_t method = (LUCY_PolyDelReader_Compare_To_t)cfish_obj_method(self, LUCY_PolyDelReader_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_PolyDelReader_Destroy(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Destroy_t method = (LUCY_PolyDelReader_Destroy_t)cfish_obj_method(self, LUCY_PolyDelReader_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_PolyDelReader_To_String(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_To_String_t method = (LUCY_PolyDelReader_To_String_t)cfish_obj_method(self, LUCY_PolyDelReader_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Aggregator_OFFSET;
static CFISH_INLINE lucy_DeletionsReader*
LUCY_PolyDelReader_Aggregator(lucy_PolyDeletionsReader* self, cfish_Vector* readers, lucy_I32Array* offsets) {
    const LUCY_PolyDelReader_Aggregator_t method = (LUCY_PolyDelReader_Aggregator_t)cfish_obj_method(self, LUCY_PolyDelReader_Aggregator_OFFSET);
    return method(self, readers, offsets);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Get_Schema_OFFSET;
static CFISH_INLINE lucy_Schema*
LUCY_PolyDelReader_Get_Schema(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Get_Schema_t method = (LUCY_PolyDelReader_Get_Schema_t)cfish_obj_method(self, LUCY_PolyDelReader_Get_Schema_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Get_Folder_OFFSET;
static CFISH_INLINE lucy_Folder*
LUCY_PolyDelReader_Get_Folder(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Get_Folder_t method = (LUCY_PolyDelReader_Get_Folder_t)cfish_obj_method(self, LUCY_PolyDelReader_Get_Folder_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Get_Snapshot_OFFSET;
static CFISH_INLINE lucy_Snapshot*
LUCY_PolyDelReader_Get_Snapshot(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Get_Snapshot_t method = (LUCY_PolyDelReader_Get_Snapshot_t)cfish_obj_method(self, LUCY_PolyDelReader_Get_Snapshot_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Get_Segments_OFFSET;
static CFISH_INLINE cfish_Vector*
LUCY_PolyDelReader_Get_Segments(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Get_Segments_t method = (LUCY_PolyDelReader_Get_Segments_t)cfish_obj_method(self, LUCY_PolyDelReader_Get_Segments_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Get_Segment_OFFSET;
static CFISH_INLINE lucy_Segment*
LUCY_PolyDelReader_Get_Segment(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Get_Segment_t method = (LUCY_PolyDelReader_Get_Segment_t)cfish_obj_method(self, LUCY_PolyDelReader_Get_Segment_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Get_Seg_Tick_OFFSET;
static CFISH_INLINE int32_t
LUCY_PolyDelReader_Get_Seg_Tick(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Get_Seg_Tick_t method = (LUCY_PolyDelReader_Get_Seg_Tick_t)cfish_obj_method(self, LUCY_PolyDelReader_Get_Seg_Tick_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Close_OFFSET;
static CFISH_INLINE void
LUCY_PolyDelReader_Close(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Close_t method = (LUCY_PolyDelReader_Close_t)cfish_obj_method(self, LUCY_PolyDelReader_Close_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Del_Count_OFFSET;
static CFISH_INLINE int32_t
LUCY_PolyDelReader_Del_Count(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Del_Count_t method = (LUCY_PolyDelReader_Del_Count_t)cfish_obj_method(self, LUCY_PolyDelReader_Del_Count_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_PolyDelReader_Iterator_OFFSET;
static CFISH_INLINE lucy_Matcher*
LUCY_PolyDelReader_Iterator(lucy_PolyDeletionsReader* self) {
    const LUCY_PolyDelReader_Iterator_t method = (LUCY_PolyDelReader_Iterator_t)cfish_obj_method(self, LUCY_PolyDelReader_Iterator_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define PolyDeletionsReader lucy_PolyDeletionsReader
  #define POLYDELETIONSREADER LUCY_POLYDELETIONSREADER
  #define PolyDelReader_new lucy_PolyDelReader_new
  #define PolyDelReader_init lucy_PolyDelReader_init
  #define PolyDelReader_get_class lucy_PolyDelReader_get_class
  #define PolyDelReader_get_class_name lucy_PolyDelReader_get_class_name
  #define PolyDelReader_is_a lucy_PolyDelReader_is_a
  #define PolyDelReader_Del_Count_IMP LUCY_PolyDelReader_Del_Count_IMP
  #define PolyDelReader_Iterator_IMP LUCY_PolyDelReader_Iterator_IMP
  #define PolyDelReader_Close_IMP LUCY_PolyDelReader_Close_IMP
  #define PolyDelReader_Destroy_IMP LUCY_PolyDelReader_Destroy_IMP
  #define PolyDelReader_To_Host LUCY_PolyDelReader_To_Host
  #define PolyDelReader_To_Host_t LUCY_PolyDelReader_To_Host_t
  #define PolyDelReader_Clone LUCY_PolyDelReader_Clone
  #define PolyDelReader_Clone_t LUCY_PolyDelReader_Clone_t
  #define PolyDelReader_Equals LUCY_PolyDelReader_Equals
  #define PolyDelReader_Equals_t LUCY_PolyDelReader_Equals_t
  #define PolyDelReader_Compare_To LUCY_PolyDelReader_Compare_To
  #define PolyDelReader_Compare_To_t LUCY_PolyDelReader_Compare_To_t
  #define PolyDelReader_Destroy LUCY_PolyDelReader_Destroy
  #define PolyDelReader_Destroy_t LUCY_PolyDelReader_Destroy_t
  #define PolyDelReader_To_String LUCY_PolyDelReader_To_String
  #define PolyDelReader_To_String_t LUCY_PolyDelReader_To_String_t
  #define PolyDelReader_Aggregator LUCY_PolyDelReader_Aggregator
  #define PolyDelReader_Aggregator_t LUCY_PolyDelReader_Aggregator_t
  #define PolyDelReader_Get_Schema LUCY_PolyDelReader_Get_Schema
  #define PolyDelReader_Get_Schema_t LUCY_PolyDelReader_Get_Schema_t
  #define PolyDelReader_Get_Folder LUCY_PolyDelReader_Get_Folder
  #define PolyDelReader_Get_Folder_t LUCY_PolyDelReader_Get_Folder_t
  #define PolyDelReader_Get_Snapshot LUCY_PolyDelReader_Get_Snapshot
  #define PolyDelReader_Get_Snapshot_t LUCY_PolyDelReader_Get_Snapshot_t
  #define PolyDelReader_Get_Segments LUCY_PolyDelReader_Get_Segments
  #define PolyDelReader_Get_Segments_t LUCY_PolyDelReader_Get_Segments_t
  #define PolyDelReader_Get_Segment LUCY_PolyDelReader_Get_Segment
  #define PolyDelReader_Get_Segment_t LUCY_PolyDelReader_Get_Segment_t
  #define PolyDelReader_Get_Seg_Tick LUCY_PolyDelReader_Get_Seg_Tick
  #define PolyDelReader_Get_Seg_Tick_t LUCY_PolyDelReader_Get_Seg_Tick_t
  #define PolyDelReader_Close LUCY_PolyDelReader_Close
  #define PolyDelReader_Close_t LUCY_PolyDelReader_Close_t
  #define PolyDelReader_Del_Count LUCY_PolyDelReader_Del_Count
  #define PolyDelReader_Del_Count_t LUCY_PolyDelReader_Del_Count_t
  #define PolyDelReader_Iterator LUCY_PolyDelReader_Iterator
  #define PolyDelReader_Iterator_t LUCY_PolyDelReader_Iterator_t
#endif /* LUCY_USE_SHORT_NAMES */



/* Include the header for this class's parent. 
 */

#include "Lucy/Index/DeletionsReader.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_DEFAULTDELETIONSREADER
extern uint32_t lucy_DefDelReader_IVARS_OFFSET;
typedef struct lucy_DefaultDeletionsReaderIVARS lucy_DefaultDeletionsReaderIVARS;
static CFISH_INLINE lucy_DefaultDeletionsReaderIVARS*
lucy_DefDelReader_IVARS(lucy_DefaultDeletionsReader *self) {
   char *ptr = (char*)self + lucy_DefDelReader_IVARS_OFFSET;
   return (lucy_DefaultDeletionsReaderIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define DefaultDeletionsReaderIVARS lucy_DefaultDeletionsReaderIVARS
  #define DefDelReader_IVARS lucy_DefDelReader_IVARS
#endif

struct lucy_DefaultDeletionsReaderIVARS {
    lucy_Schema* schema;
    lucy_Folder* folder;
    lucy_Snapshot* snapshot;
    cfish_Vector* segments;
    lucy_Segment* segment;
    int32_t seg_tick;
    lucy_BitVector* deldocs;
    int32_t del_count;
};

#endif /* C_LUCY_DEFAULTDELETIONSREADER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_DefaultDeletionsReader*
lucy_DefDelReader_new(lucy_Schema* schema, lucy_Folder* folder, lucy_Snapshot* snapshot, cfish_Vector* segments, int32_t seg_tick);

LUCY_VISIBLE lucy_DefaultDeletionsReader*
lucy_DefDelReader_init(lucy_DefaultDeletionsReader* self, lucy_Schema* schema, lucy_Folder* folder, lucy_Snapshot* snapshot, cfish_Vector* segments, int32_t seg_tick);

int32_t
LUCY_DefDelReader_Del_Count_IMP(lucy_DefaultDeletionsReader* self);

lucy_Matcher*
LUCY_DefDelReader_Iterator_IMP(lucy_DefaultDeletionsReader* self);

lucy_BitVector*
LUCY_DefDelReader_Read_Deletions_IMP(lucy_DefaultDeletionsReader* self);

void
LUCY_DefDelReader_Close_IMP(lucy_DefaultDeletionsReader* self);

void
LUCY_DefDelReader_Destroy_IMP(lucy_DefaultDeletionsReader* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_DefDelReader_To_Host_t)(lucy_DefaultDeletionsReader* self, void* vcache);

typedef cfish_Obj*
(*LUCY_DefDelReader_Clone_t)(lucy_DefaultDeletionsReader* self);

typedef bool
(*LUCY_DefDelReader_Equals_t)(lucy_DefaultDeletionsReader* self, cfish_Obj* other);

typedef int32_t
(*LUCY_DefDelReader_Compare_To_t)(lucy_DefaultDeletionsReader* self, cfish_Obj* other);

typedef void
(*LUCY_DefDelReader_Destroy_t)(lucy_DefaultDeletionsReader* self);

typedef cfish_String*
(*LUCY_DefDelReader_To_String_t)(lucy_DefaultDeletionsReader* self);

typedef lucy_DeletionsReader*
(*LUCY_DefDelReader_Aggregator_t)(lucy_DefaultDeletionsReader* self, cfish_Vector* readers, lucy_I32Array* offsets);

typedef lucy_Schema*
(*LUCY_DefDelReader_Get_Schema_t)(lucy_DefaultDeletionsReader* self);

typedef lucy_Folder*
(*LUCY_DefDelReader_Get_Folder_t)(lucy_DefaultDeletionsReader* self);

typedef lucy_Snapshot*
(*LUCY_DefDelReader_Get_Snapshot_t)(lucy_DefaultDeletionsReader* self);

typedef cfish_Vector*
(*LUCY_DefDelReader_Get_Segments_t)(lucy_DefaultDeletionsReader* self);

typedef lucy_Segment*
(*LUCY_DefDelReader_Get_Segment_t)(lucy_DefaultDeletionsReader* self);

typedef int32_t
(*LUCY_DefDelReader_Get_Seg_Tick_t)(lucy_DefaultDeletionsReader* self);

typedef void
(*LUCY_DefDelReader_Close_t)(lucy_DefaultDeletionsReader* self);

typedef int32_t
(*LUCY_DefDelReader_Del_Count_t)(lucy_DefaultDeletionsReader* self);

typedef lucy_Matcher*
(*LUCY_DefDelReader_Iterator_t)(lucy_DefaultDeletionsReader* self);

typedef lucy_BitVector*
(*LUCY_DefDelReader_Read_Deletions_t)(lucy_DefaultDeletionsReader* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_DefDelReader_get_class(lucy_DefaultDeletionsReader *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_DefDelReader_get_class_name(lucy_DefaultDeletionsReader *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_DefDelReader_is_a(lucy_DefaultDeletionsReader *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_DefDelReader_To_Host(lucy_DefaultDeletionsReader* self, void* vcache) {
    const LUCY_DefDelReader_To_Host_t method = (LUCY_DefDelReader_To_Host_t)cfish_obj_method(self, LUCY_DefDelReader_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_DefDelReader_Clone(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Clone_t method = (LUCY_DefDelReader_Clone_t)cfish_obj_method(self, LUCY_DefDelReader_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_DefDelReader_Equals(lucy_DefaultDeletionsReader* self, cfish_Obj* other) {
    const LUCY_DefDelReader_Equals_t method = (LUCY_DefDelReader_Equals_t)cfish_obj_method(self, LUCY_DefDelReader_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_DefDelReader_Compare_To(lucy_DefaultDeletionsReader* self, cfish_Obj* other) {
    const LUCY_DefDelReader_Compare_To_t method = (LUCY_DefDelReader_Compare_To_t)cfish_obj_method(self, LUCY_DefDelReader_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_DefDelReader_Destroy(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Destroy_t method = (LUCY_DefDelReader_Destroy_t)cfish_obj_method(self, LUCY_DefDelReader_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_DefDelReader_To_String(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_To_String_t method = (LUCY_DefDelReader_To_String_t)cfish_obj_method(self, LUCY_DefDelReader_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Aggregator_OFFSET;
static CFISH_INLINE lucy_DeletionsReader*
LUCY_DefDelReader_Aggregator(lucy_DefaultDeletionsReader* self, cfish_Vector* readers, lucy_I32Array* offsets) {
    const LUCY_DefDelReader_Aggregator_t method = (LUCY_DefDelReader_Aggregator_t)cfish_obj_method(self, LUCY_DefDelReader_Aggregator_OFFSET);
    return method(self, readers, offsets);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Get_Schema_OFFSET;
static CFISH_INLINE lucy_Schema*
LUCY_DefDelReader_Get_Schema(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Get_Schema_t method = (LUCY_DefDelReader_Get_Schema_t)cfish_obj_method(self, LUCY_DefDelReader_Get_Schema_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Get_Folder_OFFSET;
static CFISH_INLINE lucy_Folder*
LUCY_DefDelReader_Get_Folder(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Get_Folder_t method = (LUCY_DefDelReader_Get_Folder_t)cfish_obj_method(self, LUCY_DefDelReader_Get_Folder_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Get_Snapshot_OFFSET;
static CFISH_INLINE lucy_Snapshot*
LUCY_DefDelReader_Get_Snapshot(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Get_Snapshot_t method = (LUCY_DefDelReader_Get_Snapshot_t)cfish_obj_method(self, LUCY_DefDelReader_Get_Snapshot_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Get_Segments_OFFSET;
static CFISH_INLINE cfish_Vector*
LUCY_DefDelReader_Get_Segments(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Get_Segments_t method = (LUCY_DefDelReader_Get_Segments_t)cfish_obj_method(self, LUCY_DefDelReader_Get_Segments_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Get_Segment_OFFSET;
static CFISH_INLINE lucy_Segment*
LUCY_DefDelReader_Get_Segment(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Get_Segment_t method = (LUCY_DefDelReader_Get_Segment_t)cfish_obj_method(self, LUCY_DefDelReader_Get_Segment_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Get_Seg_Tick_OFFSET;
static CFISH_INLINE int32_t
LUCY_DefDelReader_Get_Seg_Tick(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Get_Seg_Tick_t method = (LUCY_DefDelReader_Get_Seg_Tick_t)cfish_obj_method(self, LUCY_DefDelReader_Get_Seg_Tick_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Close_OFFSET;
static CFISH_INLINE void
LUCY_DefDelReader_Close(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Close_t method = (LUCY_DefDelReader_Close_t)cfish_obj_method(self, LUCY_DefDelReader_Close_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Del_Count_OFFSET;
static CFISH_INLINE int32_t
LUCY_DefDelReader_Del_Count(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Del_Count_t method = (LUCY_DefDelReader_Del_Count_t)cfish_obj_method(self, LUCY_DefDelReader_Del_Count_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Iterator_OFFSET;
static CFISH_INLINE lucy_Matcher*
LUCY_DefDelReader_Iterator(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Iterator_t method = (LUCY_DefDelReader_Iterator_t)cfish_obj_method(self, LUCY_DefDelReader_Iterator_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_DefDelReader_Read_Deletions_OFFSET;
static CFISH_INLINE lucy_BitVector*
LUCY_DefDelReader_Read_Deletions(lucy_DefaultDeletionsReader* self) {
    const LUCY_DefDelReader_Read_Deletions_t method = (LUCY_DefDelReader_Read_Deletions_t)cfish_obj_method(self, LUCY_DefDelReader_Read_Deletions_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_DefDelReader_Read_Deletions_OVERRIDE NULL
#else
lucy_BitVector*
Lucy_DefDelReader_Read_Deletions_OVERRIDE(lucy_DefaultDeletionsReader* self);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define DefaultDeletionsReader lucy_DefaultDeletionsReader
  #define DEFAULTDELETIONSREADER LUCY_DEFAULTDELETIONSREADER
  #define DefDelReader_new lucy_DefDelReader_new
  #define DefDelReader_init lucy_DefDelReader_init
  #define DefDelReader_get_class lucy_DefDelReader_get_class
  #define DefDelReader_get_class_name lucy_DefDelReader_get_class_name
  #define DefDelReader_is_a lucy_DefDelReader_is_a
  #define DefDelReader_Del_Count_IMP LUCY_DefDelReader_Del_Count_IMP
  #define DefDelReader_Iterator_IMP LUCY_DefDelReader_Iterator_IMP
  #define DefDelReader_Read_Deletions_IMP LUCY_DefDelReader_Read_Deletions_IMP
  #define DefDelReader_Close_IMP LUCY_DefDelReader_Close_IMP
  #define DefDelReader_Destroy_IMP LUCY_DefDelReader_Destroy_IMP
  #define DefDelReader_To_Host LUCY_DefDelReader_To_Host
  #define DefDelReader_To_Host_t LUCY_DefDelReader_To_Host_t
  #define DefDelReader_Clone LUCY_DefDelReader_Clone
  #define DefDelReader_Clone_t LUCY_DefDelReader_Clone_t
  #define DefDelReader_Equals LUCY_DefDelReader_Equals
  #define DefDelReader_Equals_t LUCY_DefDelReader_Equals_t
  #define DefDelReader_Compare_To LUCY_DefDelReader_Compare_To
  #define DefDelReader_Compare_To_t LUCY_DefDelReader_Compare_To_t
  #define DefDelReader_Destroy LUCY_DefDelReader_Destroy
  #define DefDelReader_Destroy_t LUCY_DefDelReader_Destroy_t
  #define DefDelReader_To_String LUCY_DefDelReader_To_String
  #define DefDelReader_To_String_t LUCY_DefDelReader_To_String_t
  #define DefDelReader_Aggregator LUCY_DefDelReader_Aggregator
  #define DefDelReader_Aggregator_t LUCY_DefDelReader_Aggregator_t
  #define DefDelReader_Get_Schema LUCY_DefDelReader_Get_Schema
  #define DefDelReader_Get_Schema_t LUCY_DefDelReader_Get_Schema_t
  #define DefDelReader_Get_Folder LUCY_DefDelReader_Get_Folder
  #define DefDelReader_Get_Folder_t LUCY_DefDelReader_Get_Folder_t
  #define DefDelReader_Get_Snapshot LUCY_DefDelReader_Get_Snapshot
  #define DefDelReader_Get_Snapshot_t LUCY_DefDelReader_Get_Snapshot_t
  #define DefDelReader_Get_Segments LUCY_DefDelReader_Get_Segments
  #define DefDelReader_Get_Segments_t LUCY_DefDelReader_Get_Segments_t
  #define DefDelReader_Get_Segment LUCY_DefDelReader_Get_Segment
  #define DefDelReader_Get_Segment_t LUCY_DefDelReader_Get_Segment_t
  #define DefDelReader_Get_Seg_Tick LUCY_DefDelReader_Get_Seg_Tick
  #define DefDelReader_Get_Seg_Tick_t LUCY_DefDelReader_Get_Seg_Tick_t
  #define DefDelReader_Close LUCY_DefDelReader_Close
  #define DefDelReader_Close_t LUCY_DefDelReader_Close_t
  #define DefDelReader_Del_Count LUCY_DefDelReader_Del_Count
  #define DefDelReader_Del_Count_t LUCY_DefDelReader_Del_Count_t
  #define DefDelReader_Iterator LUCY_DefDelReader_Iterator
  #define DefDelReader_Iterator_t LUCY_DefDelReader_Iterator_t
  #define DefDelReader_Read_Deletions LUCY_DefDelReader_Read_Deletions
  #define DefDelReader_Read_Deletions_t LUCY_DefDelReader_Read_Deletions_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_INDEX_DELETIONSREADER */




