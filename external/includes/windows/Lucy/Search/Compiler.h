/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_SEARCH_COMPILER
#define H_LUCY_SEARCH_COMPILER 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Lucy\Search\Query.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_COMPILER
extern uint32_t lucy_Compiler_IVARS_OFFSET;
typedef struct lucy_CompilerIVARS lucy_CompilerIVARS;
static CFISH_INLINE lucy_CompilerIVARS*
lucy_Compiler_IVARS(lucy_Compiler *self) {
   char *ptr = (char*)self + lucy_Compiler_IVARS_OFFSET;
   return (lucy_CompilerIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define CompilerIVARS lucy_CompilerIVARS
  #define Compiler_IVARS lucy_Compiler_IVARS
#endif

struct lucy_CompilerIVARS {
    float boost;
    lucy_Query* parent;
    lucy_Similarity* sim;
};

#endif /* C_LUCY_COMPILER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_Compiler*
lucy_Compiler_init(lucy_Compiler* self, lucy_Query* parent, lucy_Searcher* searcher, lucy_Similarity* similarity, float boost);

lucy_Matcher*
LUCY_Compiler_Make_Matcher_IMP(lucy_Compiler* self, lucy_SegReader* reader, bool need_score);

float
LUCY_Compiler_Get_Weight_IMP(lucy_Compiler* self);

lucy_Similarity*
LUCY_Compiler_Get_Similarity_IMP(lucy_Compiler* self);

lucy_Query*
LUCY_Compiler_Get_Parent_IMP(lucy_Compiler* self);

float
LUCY_Compiler_Sum_Of_Squared_Weights_IMP(lucy_Compiler* self);

void
LUCY_Compiler_Apply_Norm_Factor_IMP(lucy_Compiler* self, float factor);

void
LUCY_Compiler_Normalize_IMP(lucy_Compiler* self);

cfish_Vector*
LUCY_Compiler_Highlight_Spans_IMP(lucy_Compiler* self, lucy_Searcher* searcher, lucy_DocVector* doc_vec, cfish_String* field);

void
LUCY_Compiler_Serialize_IMP(lucy_Compiler* self, lucy_OutStream* outstream);

lucy_Compiler*
LUCY_Compiler_Deserialize_IMP(lucy_Compiler* self, lucy_InStream* instream);

bool
LUCY_Compiler_Equals_IMP(lucy_Compiler* self, cfish_Obj* other);

cfish_String*
LUCY_Compiler_To_String_IMP(lucy_Compiler* self);

void
LUCY_Compiler_Destroy_IMP(lucy_Compiler* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_Compiler_To_Host_t)(lucy_Compiler* self, void* vcache);

typedef cfish_Obj*
(*LUCY_Compiler_Clone_t)(lucy_Compiler* self);

typedef bool
(*LUCY_Compiler_Equals_t)(lucy_Compiler* self, cfish_Obj* other);

typedef int32_t
(*LUCY_Compiler_Compare_To_t)(lucy_Compiler* self, cfish_Obj* other);

typedef void
(*LUCY_Compiler_Destroy_t)(lucy_Compiler* self);

typedef cfish_String*
(*LUCY_Compiler_To_String_t)(lucy_Compiler* self);

typedef lucy_Compiler*
(*LUCY_Compiler_Make_Compiler_t)(lucy_Compiler* self, lucy_Searcher* searcher, float boost, bool subordinate);

typedef void
(*LUCY_Compiler_Set_Boost_t)(lucy_Compiler* self, float boost);

typedef float
(*LUCY_Compiler_Get_Boost_t)(lucy_Compiler* self);

typedef void
(*LUCY_Compiler_Serialize_t)(lucy_Compiler* self, lucy_OutStream* outstream);

typedef lucy_Compiler*
(*LUCY_Compiler_Deserialize_t)(lucy_Compiler* self, lucy_InStream* instream);

typedef cfish_Obj*
(*LUCY_Compiler_Dump_t)(lucy_Compiler* self);

typedef cfish_Obj*
(*LUCY_Compiler_Load_t)(lucy_Compiler* self, cfish_Obj* dump);

typedef lucy_Matcher*
(*LUCY_Compiler_Make_Matcher_t)(lucy_Compiler* self, lucy_SegReader* reader, bool need_score);

typedef float
(*LUCY_Compiler_Get_Weight_t)(lucy_Compiler* self);

typedef lucy_Similarity*
(*LUCY_Compiler_Get_Similarity_t)(lucy_Compiler* self);

typedef lucy_Query*
(*LUCY_Compiler_Get_Parent_t)(lucy_Compiler* self);

typedef float
(*LUCY_Compiler_Sum_Of_Squared_Weights_t)(lucy_Compiler* self);

typedef void
(*LUCY_Compiler_Apply_Norm_Factor_t)(lucy_Compiler* self, float factor);

typedef void
(*LUCY_Compiler_Normalize_t)(lucy_Compiler* self);

typedef cfish_Vector*
(*LUCY_Compiler_Highlight_Spans_t)(lucy_Compiler* self, lucy_Searcher* searcher, lucy_DocVector* doc_vec, cfish_String* field);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_Compiler_get_class(lucy_Compiler *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_Compiler_get_class_name(lucy_Compiler *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_Compiler_is_a(lucy_Compiler *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_Compiler_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_Compiler_To_Host(lucy_Compiler* self, void* vcache) {
    const LUCY_Compiler_To_Host_t method = (LUCY_Compiler_To_Host_t)cfish_obj_method(self, LUCY_Compiler_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_Compiler_Clone(lucy_Compiler* self) {
    const LUCY_Compiler_Clone_t method = (LUCY_Compiler_Clone_t)cfish_obj_method(self, LUCY_Compiler_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_Compiler_Equals(lucy_Compiler* self, cfish_Obj* other) {
    const LUCY_Compiler_Equals_t method = (LUCY_Compiler_Equals_t)cfish_obj_method(self, LUCY_Compiler_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_Compiler_Compare_To(lucy_Compiler* self, cfish_Obj* other) {
    const LUCY_Compiler_Compare_To_t method = (LUCY_Compiler_Compare_To_t)cfish_obj_method(self, LUCY_Compiler_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_Compiler_Destroy(lucy_Compiler* self) {
    const LUCY_Compiler_Destroy_t method = (LUCY_Compiler_Destroy_t)cfish_obj_method(self, LUCY_Compiler_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Compiler_To_String(lucy_Compiler* self) {
    const LUCY_Compiler_To_String_t method = (LUCY_Compiler_To_String_t)cfish_obj_method(self, LUCY_Compiler_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Make_Compiler_OFFSET;
static CFISH_INLINE lucy_Compiler*
LUCY_Compiler_Make_Compiler(lucy_Compiler* self, lucy_Searcher* searcher, float boost, bool subordinate) {
    const LUCY_Compiler_Make_Compiler_t method = (LUCY_Compiler_Make_Compiler_t)cfish_obj_method(self, LUCY_Compiler_Make_Compiler_OFFSET);
    return method(self, searcher, boost, subordinate);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Set_Boost_OFFSET;
static CFISH_INLINE void
LUCY_Compiler_Set_Boost(lucy_Compiler* self, float boost) {
    const LUCY_Compiler_Set_Boost_t method = (LUCY_Compiler_Set_Boost_t)cfish_obj_method(self, LUCY_Compiler_Set_Boost_OFFSET);
    method(self, boost);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Get_Boost_OFFSET;
static CFISH_INLINE float
LUCY_Compiler_Get_Boost(lucy_Compiler* self) {
    const LUCY_Compiler_Get_Boost_t method = (LUCY_Compiler_Get_Boost_t)cfish_obj_method(self, LUCY_Compiler_Get_Boost_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Serialize_OFFSET;
static CFISH_INLINE void
LUCY_Compiler_Serialize(lucy_Compiler* self, lucy_OutStream* outstream) {
    const LUCY_Compiler_Serialize_t method = (LUCY_Compiler_Serialize_t)cfish_obj_method(self, LUCY_Compiler_Serialize_OFFSET);
    method(self, outstream);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Deserialize_OFFSET;
static CFISH_INLINE lucy_Compiler*
LUCY_Compiler_Deserialize(lucy_Compiler* self, lucy_InStream* instream) {
    const LUCY_Compiler_Deserialize_t method = (LUCY_Compiler_Deserialize_t)cfish_obj_method(self, LUCY_Compiler_Deserialize_OFFSET);
    return method(self, instream);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Dump_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_Compiler_Dump(lucy_Compiler* self) {
    const LUCY_Compiler_Dump_t method = (LUCY_Compiler_Dump_t)cfish_obj_method(self, LUCY_Compiler_Dump_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Load_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_Compiler_Load(lucy_Compiler* self, cfish_Obj* dump) {
    const LUCY_Compiler_Load_t method = (LUCY_Compiler_Load_t)cfish_obj_method(self, LUCY_Compiler_Load_OFFSET);
    return method(self, dump);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Make_Matcher_OFFSET;
static CFISH_INLINE lucy_Matcher*
LUCY_Compiler_Make_Matcher(lucy_Compiler* self, lucy_SegReader* reader, bool need_score) {
    const LUCY_Compiler_Make_Matcher_t method = (LUCY_Compiler_Make_Matcher_t)cfish_obj_method(self, LUCY_Compiler_Make_Matcher_OFFSET);
    return method(self, reader, need_score);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Get_Weight_OFFSET;
static CFISH_INLINE float
LUCY_Compiler_Get_Weight(lucy_Compiler* self) {
    const LUCY_Compiler_Get_Weight_t method = (LUCY_Compiler_Get_Weight_t)cfish_obj_method(self, LUCY_Compiler_Get_Weight_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Get_Similarity_OFFSET;
static CFISH_INLINE lucy_Similarity*
LUCY_Compiler_Get_Similarity(lucy_Compiler* self) {
    const LUCY_Compiler_Get_Similarity_t method = (LUCY_Compiler_Get_Similarity_t)cfish_obj_method(self, LUCY_Compiler_Get_Similarity_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Get_Parent_OFFSET;
static CFISH_INLINE lucy_Query*
LUCY_Compiler_Get_Parent(lucy_Compiler* self) {
    const LUCY_Compiler_Get_Parent_t method = (LUCY_Compiler_Get_Parent_t)cfish_obj_method(self, LUCY_Compiler_Get_Parent_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Sum_Of_Squared_Weights_OFFSET;
static CFISH_INLINE float
LUCY_Compiler_Sum_Of_Squared_Weights(lucy_Compiler* self) {
    const LUCY_Compiler_Sum_Of_Squared_Weights_t method = (LUCY_Compiler_Sum_Of_Squared_Weights_t)cfish_obj_method(self, LUCY_Compiler_Sum_Of_Squared_Weights_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Apply_Norm_Factor_OFFSET;
static CFISH_INLINE void
LUCY_Compiler_Apply_Norm_Factor(lucy_Compiler* self, float factor) {
    const LUCY_Compiler_Apply_Norm_Factor_t method = (LUCY_Compiler_Apply_Norm_Factor_t)cfish_obj_method(self, LUCY_Compiler_Apply_Norm_Factor_OFFSET);
    method(self, factor);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Normalize_OFFSET;
static CFISH_INLINE void
LUCY_Compiler_Normalize(lucy_Compiler* self) {
    const LUCY_Compiler_Normalize_t method = (LUCY_Compiler_Normalize_t)cfish_obj_method(self, LUCY_Compiler_Normalize_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Compiler_Highlight_Spans_OFFSET;
static CFISH_INLINE cfish_Vector*
LUCY_Compiler_Highlight_Spans(lucy_Compiler* self, lucy_Searcher* searcher, lucy_DocVector* doc_vec, cfish_String* field) {
    const LUCY_Compiler_Highlight_Spans_t method = (LUCY_Compiler_Highlight_Spans_t)cfish_obj_method(self, LUCY_Compiler_Highlight_Spans_OFFSET);
    return method(self, searcher, doc_vec, field);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_Compiler_Make_Matcher_OVERRIDE NULL
#define Lucy_Compiler_Get_Weight_OVERRIDE NULL
#define Lucy_Compiler_Get_Similarity_OVERRIDE NULL
#define Lucy_Compiler_Get_Parent_OVERRIDE NULL
#define Lucy_Compiler_Sum_Of_Squared_Weights_OVERRIDE NULL
#define Lucy_Compiler_Apply_Norm_Factor_OVERRIDE NULL
#define Lucy_Compiler_Normalize_OVERRIDE NULL
#define Lucy_Compiler_Highlight_Spans_OVERRIDE NULL
#else
lucy_Matcher*
Lucy_Compiler_Make_Matcher_OVERRIDE(lucy_Compiler* self, lucy_SegReader* reader, bool need_score);
float
Lucy_Compiler_Get_Weight_OVERRIDE(lucy_Compiler* self);
lucy_Similarity*
Lucy_Compiler_Get_Similarity_OVERRIDE(lucy_Compiler* self);
lucy_Query*
Lucy_Compiler_Get_Parent_OVERRIDE(lucy_Compiler* self);
float
Lucy_Compiler_Sum_Of_Squared_Weights_OVERRIDE(lucy_Compiler* self);
void
Lucy_Compiler_Apply_Norm_Factor_OVERRIDE(lucy_Compiler* self, float factor);
void
Lucy_Compiler_Normalize_OVERRIDE(lucy_Compiler* self);
cfish_Vector*
Lucy_Compiler_Highlight_Spans_OVERRIDE(lucy_Compiler* self, lucy_Searcher* searcher, lucy_DocVector* doc_vec, cfish_String* field);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define Compiler lucy_Compiler
  #define COMPILER LUCY_COMPILER
  #define Compiler_init lucy_Compiler_init
  #define Compiler_get_class lucy_Compiler_get_class
  #define Compiler_get_class_name lucy_Compiler_get_class_name
  #define Compiler_is_a lucy_Compiler_is_a
  #define Compiler_Make_Matcher_IMP LUCY_Compiler_Make_Matcher_IMP
  #define Compiler_Get_Weight_IMP LUCY_Compiler_Get_Weight_IMP
  #define Compiler_Get_Similarity_IMP LUCY_Compiler_Get_Similarity_IMP
  #define Compiler_Get_Parent_IMP LUCY_Compiler_Get_Parent_IMP
  #define Compiler_Sum_Of_Squared_Weights_IMP LUCY_Compiler_Sum_Of_Squared_Weights_IMP
  #define Compiler_Apply_Norm_Factor_IMP LUCY_Compiler_Apply_Norm_Factor_IMP
  #define Compiler_Normalize_IMP LUCY_Compiler_Normalize_IMP
  #define Compiler_Highlight_Spans_IMP LUCY_Compiler_Highlight_Spans_IMP
  #define Compiler_Serialize_IMP LUCY_Compiler_Serialize_IMP
  #define Compiler_Deserialize_IMP LUCY_Compiler_Deserialize_IMP
  #define Compiler_Equals_IMP LUCY_Compiler_Equals_IMP
  #define Compiler_To_String_IMP LUCY_Compiler_To_String_IMP
  #define Compiler_Destroy_IMP LUCY_Compiler_Destroy_IMP
  #define Compiler_To_Host LUCY_Compiler_To_Host
  #define Compiler_To_Host_t LUCY_Compiler_To_Host_t
  #define Compiler_Clone LUCY_Compiler_Clone
  #define Compiler_Clone_t LUCY_Compiler_Clone_t
  #define Compiler_Equals LUCY_Compiler_Equals
  #define Compiler_Equals_t LUCY_Compiler_Equals_t
  #define Compiler_Compare_To LUCY_Compiler_Compare_To
  #define Compiler_Compare_To_t LUCY_Compiler_Compare_To_t
  #define Compiler_Destroy LUCY_Compiler_Destroy
  #define Compiler_Destroy_t LUCY_Compiler_Destroy_t
  #define Compiler_To_String LUCY_Compiler_To_String
  #define Compiler_To_String_t LUCY_Compiler_To_String_t
  #define Compiler_Make_Compiler LUCY_Compiler_Make_Compiler
  #define Compiler_Make_Compiler_t LUCY_Compiler_Make_Compiler_t
  #define Compiler_Set_Boost LUCY_Compiler_Set_Boost
  #define Compiler_Set_Boost_t LUCY_Compiler_Set_Boost_t
  #define Compiler_Get_Boost LUCY_Compiler_Get_Boost
  #define Compiler_Get_Boost_t LUCY_Compiler_Get_Boost_t
  #define Compiler_Serialize LUCY_Compiler_Serialize
  #define Compiler_Serialize_t LUCY_Compiler_Serialize_t
  #define Compiler_Deserialize LUCY_Compiler_Deserialize
  #define Compiler_Deserialize_t LUCY_Compiler_Deserialize_t
  #define Compiler_Dump LUCY_Compiler_Dump
  #define Compiler_Dump_t LUCY_Compiler_Dump_t
  #define Compiler_Load LUCY_Compiler_Load
  #define Compiler_Load_t LUCY_Compiler_Load_t
  #define Compiler_Make_Matcher LUCY_Compiler_Make_Matcher
  #define Compiler_Make_Matcher_t LUCY_Compiler_Make_Matcher_t
  #define Compiler_Get_Weight LUCY_Compiler_Get_Weight
  #define Compiler_Get_Weight_t LUCY_Compiler_Get_Weight_t
  #define Compiler_Get_Similarity LUCY_Compiler_Get_Similarity
  #define Compiler_Get_Similarity_t LUCY_Compiler_Get_Similarity_t
  #define Compiler_Get_Parent LUCY_Compiler_Get_Parent
  #define Compiler_Get_Parent_t LUCY_Compiler_Get_Parent_t
  #define Compiler_Sum_Of_Squared_Weights LUCY_Compiler_Sum_Of_Squared_Weights
  #define Compiler_Sum_Of_Squared_Weights_t LUCY_Compiler_Sum_Of_Squared_Weights_t
  #define Compiler_Apply_Norm_Factor LUCY_Compiler_Apply_Norm_Factor
  #define Compiler_Apply_Norm_Factor_t LUCY_Compiler_Apply_Norm_Factor_t
  #define Compiler_Normalize LUCY_Compiler_Normalize
  #define Compiler_Normalize_t LUCY_Compiler_Normalize_t
  #define Compiler_Highlight_Spans LUCY_Compiler_Highlight_Spans
  #define Compiler_Highlight_Spans_t LUCY_Compiler_Highlight_Spans_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_SEARCH_COMPILER */




