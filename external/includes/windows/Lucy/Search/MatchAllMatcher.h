/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_SEARCH_MATCHALLMATCHER
#define H_LUCY_SEARCH_MATCHALLMATCHER 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Lucy\Search\Matcher.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_MATCHALLMATCHER
extern uint32_t lucy_MatchAllMatcher_IVARS_OFFSET;
typedef struct lucy_MatchAllMatcherIVARS lucy_MatchAllMatcherIVARS;
static CFISH_INLINE lucy_MatchAllMatcherIVARS*
lucy_MatchAllMatcher_IVARS(lucy_MatchAllMatcher *self) {
   char *ptr = (char*)self + lucy_MatchAllMatcher_IVARS_OFFSET;
   return (lucy_MatchAllMatcherIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define MatchAllMatcherIVARS lucy_MatchAllMatcherIVARS
  #define MatchAllMatcher_IVARS lucy_MatchAllMatcher_IVARS
#endif

struct lucy_MatchAllMatcherIVARS {
    int32_t doc_id;
    int32_t doc_max;
    float score;
};

#endif /* C_LUCY_MATCHALLMATCHER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_MatchAllMatcher*
lucy_MatchAllMatcher_new(float score, int32_t doc_max);

LUCY_VISIBLE lucy_MatchAllMatcher*
lucy_MatchAllMatcher_init(lucy_MatchAllMatcher* self, float score, int32_t doc_max);

int32_t
LUCY_MatchAllMatcher_Next_IMP(lucy_MatchAllMatcher* self);

int32_t
LUCY_MatchAllMatcher_Advance_IMP(lucy_MatchAllMatcher* self, int32_t target);

float
LUCY_MatchAllMatcher_Score_IMP(lucy_MatchAllMatcher* self);

int32_t
LUCY_MatchAllMatcher_Get_Doc_ID_IMP(lucy_MatchAllMatcher* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_MatchAllMatcher_To_Host_t)(lucy_MatchAllMatcher* self, void* vcache);

typedef cfish_Obj*
(*LUCY_MatchAllMatcher_Clone_t)(lucy_MatchAllMatcher* self);

typedef bool
(*LUCY_MatchAllMatcher_Equals_t)(lucy_MatchAllMatcher* self, cfish_Obj* other);

typedef int32_t
(*LUCY_MatchAllMatcher_Compare_To_t)(lucy_MatchAllMatcher* self, cfish_Obj* other);

typedef void
(*LUCY_MatchAllMatcher_Destroy_t)(lucy_MatchAllMatcher* self);

typedef cfish_String*
(*LUCY_MatchAllMatcher_To_String_t)(lucy_MatchAllMatcher* self);

typedef int32_t
(*LUCY_MatchAllMatcher_Next_t)(lucy_MatchAllMatcher* self);

typedef int32_t
(*LUCY_MatchAllMatcher_Advance_t)(lucy_MatchAllMatcher* self, int32_t target);

typedef int32_t
(*LUCY_MatchAllMatcher_Get_Doc_ID_t)(lucy_MatchAllMatcher* self);

typedef float
(*LUCY_MatchAllMatcher_Score_t)(lucy_MatchAllMatcher* self);

typedef void
(*LUCY_MatchAllMatcher_Collect_t)(lucy_MatchAllMatcher* self, lucy_Collector* collector, lucy_Matcher* deletions);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_MatchAllMatcher_get_class(lucy_MatchAllMatcher *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_MatchAllMatcher_get_class_name(lucy_MatchAllMatcher *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_MatchAllMatcher_is_a(lucy_MatchAllMatcher *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_MatchAllMatcher_To_Host(lucy_MatchAllMatcher* self, void* vcache) {
    const LUCY_MatchAllMatcher_To_Host_t method = (LUCY_MatchAllMatcher_To_Host_t)cfish_obj_method(self, LUCY_MatchAllMatcher_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_MatchAllMatcher_Clone(lucy_MatchAllMatcher* self) {
    const LUCY_MatchAllMatcher_Clone_t method = (LUCY_MatchAllMatcher_Clone_t)cfish_obj_method(self, LUCY_MatchAllMatcher_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_MatchAllMatcher_Equals(lucy_MatchAllMatcher* self, cfish_Obj* other) {
    const LUCY_MatchAllMatcher_Equals_t method = (LUCY_MatchAllMatcher_Equals_t)cfish_obj_method(self, LUCY_MatchAllMatcher_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_MatchAllMatcher_Compare_To(lucy_MatchAllMatcher* self, cfish_Obj* other) {
    const LUCY_MatchAllMatcher_Compare_To_t method = (LUCY_MatchAllMatcher_Compare_To_t)cfish_obj_method(self, LUCY_MatchAllMatcher_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_MatchAllMatcher_Destroy(lucy_MatchAllMatcher* self) {
    const LUCY_MatchAllMatcher_Destroy_t method = (LUCY_MatchAllMatcher_Destroy_t)cfish_obj_method(self, LUCY_MatchAllMatcher_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_MatchAllMatcher_To_String(lucy_MatchAllMatcher* self) {
    const LUCY_MatchAllMatcher_To_String_t method = (LUCY_MatchAllMatcher_To_String_t)cfish_obj_method(self, LUCY_MatchAllMatcher_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_Next_OFFSET;
static CFISH_INLINE int32_t
LUCY_MatchAllMatcher_Next(lucy_MatchAllMatcher* self) {
    const LUCY_MatchAllMatcher_Next_t method = (LUCY_MatchAllMatcher_Next_t)cfish_obj_method(self, LUCY_MatchAllMatcher_Next_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_Advance_OFFSET;
static CFISH_INLINE int32_t
LUCY_MatchAllMatcher_Advance(lucy_MatchAllMatcher* self, int32_t target) {
    const LUCY_MatchAllMatcher_Advance_t method = (LUCY_MatchAllMatcher_Advance_t)cfish_obj_method(self, LUCY_MatchAllMatcher_Advance_OFFSET);
    return method(self, target);
}

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_Get_Doc_ID_OFFSET;
static CFISH_INLINE int32_t
LUCY_MatchAllMatcher_Get_Doc_ID(lucy_MatchAllMatcher* self) {
    const LUCY_MatchAllMatcher_Get_Doc_ID_t method = (LUCY_MatchAllMatcher_Get_Doc_ID_t)cfish_obj_method(self, LUCY_MatchAllMatcher_Get_Doc_ID_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_Score_OFFSET;
static CFISH_INLINE float
LUCY_MatchAllMatcher_Score(lucy_MatchAllMatcher* self) {
    const LUCY_MatchAllMatcher_Score_t method = (LUCY_MatchAllMatcher_Score_t)cfish_obj_method(self, LUCY_MatchAllMatcher_Score_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_MatchAllMatcher_Collect_OFFSET;
static CFISH_INLINE void
LUCY_MatchAllMatcher_Collect(lucy_MatchAllMatcher* self, lucy_Collector* collector, lucy_Matcher* deletions) {
    const LUCY_MatchAllMatcher_Collect_t method = (LUCY_MatchAllMatcher_Collect_t)cfish_obj_method(self, LUCY_MatchAllMatcher_Collect_OFFSET);
    method(self, collector, deletions);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define MatchAllMatcher lucy_MatchAllMatcher
  #define MATCHALLMATCHER LUCY_MATCHALLMATCHER
  #define MatchAllMatcher_new lucy_MatchAllMatcher_new
  #define MatchAllMatcher_init lucy_MatchAllMatcher_init
  #define MatchAllMatcher_get_class lucy_MatchAllMatcher_get_class
  #define MatchAllMatcher_get_class_name lucy_MatchAllMatcher_get_class_name
  #define MatchAllMatcher_is_a lucy_MatchAllMatcher_is_a
  #define MatchAllMatcher_Next_IMP LUCY_MatchAllMatcher_Next_IMP
  #define MatchAllMatcher_Advance_IMP LUCY_MatchAllMatcher_Advance_IMP
  #define MatchAllMatcher_Score_IMP LUCY_MatchAllMatcher_Score_IMP
  #define MatchAllMatcher_Get_Doc_ID_IMP LUCY_MatchAllMatcher_Get_Doc_ID_IMP
  #define MatchAllMatcher_To_Host LUCY_MatchAllMatcher_To_Host
  #define MatchAllMatcher_To_Host_t LUCY_MatchAllMatcher_To_Host_t
  #define MatchAllMatcher_Clone LUCY_MatchAllMatcher_Clone
  #define MatchAllMatcher_Clone_t LUCY_MatchAllMatcher_Clone_t
  #define MatchAllMatcher_Equals LUCY_MatchAllMatcher_Equals
  #define MatchAllMatcher_Equals_t LUCY_MatchAllMatcher_Equals_t
  #define MatchAllMatcher_Compare_To LUCY_MatchAllMatcher_Compare_To
  #define MatchAllMatcher_Compare_To_t LUCY_MatchAllMatcher_Compare_To_t
  #define MatchAllMatcher_Destroy LUCY_MatchAllMatcher_Destroy
  #define MatchAllMatcher_Destroy_t LUCY_MatchAllMatcher_Destroy_t
  #define MatchAllMatcher_To_String LUCY_MatchAllMatcher_To_String
  #define MatchAllMatcher_To_String_t LUCY_MatchAllMatcher_To_String_t
  #define MatchAllMatcher_Next LUCY_MatchAllMatcher_Next
  #define MatchAllMatcher_Next_t LUCY_MatchAllMatcher_Next_t
  #define MatchAllMatcher_Advance LUCY_MatchAllMatcher_Advance
  #define MatchAllMatcher_Advance_t LUCY_MatchAllMatcher_Advance_t
  #define MatchAllMatcher_Get_Doc_ID LUCY_MatchAllMatcher_Get_Doc_ID
  #define MatchAllMatcher_Get_Doc_ID_t LUCY_MatchAllMatcher_Get_Doc_ID_t
  #define MatchAllMatcher_Score LUCY_MatchAllMatcher_Score
  #define MatchAllMatcher_Score_t LUCY_MatchAllMatcher_Score_t
  #define MatchAllMatcher_Collect LUCY_MatchAllMatcher_Collect
  #define MatchAllMatcher_Collect_t LUCY_MatchAllMatcher_Collect_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_SEARCH_MATCHALLMATCHER */




