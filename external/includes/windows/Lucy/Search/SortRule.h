/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_SEARCH_SORTRULE
#define H_LUCY_SEARCH_SORTRULE 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Clownfish\Obj.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_SORTRULE
extern uint32_t lucy_SortRule_IVARS_OFFSET;
typedef struct lucy_SortRuleIVARS lucy_SortRuleIVARS;
static CFISH_INLINE lucy_SortRuleIVARS*
lucy_SortRule_IVARS(lucy_SortRule *self) {
   char *ptr = (char*)self + lucy_SortRule_IVARS_OFFSET;
   return (lucy_SortRuleIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define SortRuleIVARS lucy_SortRuleIVARS
  #define SortRule_IVARS lucy_SortRule_IVARS
#endif

struct lucy_SortRuleIVARS {
    int32_t type;
    cfish_String* field;
    bool reverse;
};

#endif /* C_LUCY_SORTRULE */

/* Declare this class's inert variables.
 */

extern LUCY_VISIBLE int32_t lucy_SortRule_FIELD;
extern LUCY_VISIBLE int32_t lucy_SortRule_SCORE;
extern LUCY_VISIBLE int32_t lucy_SortRule_DOC_ID;


/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_SortRule*
lucy_SortRule_new(int32_t type, cfish_String* field, bool reverse);

LUCY_VISIBLE lucy_SortRule*
lucy_SortRule_init(lucy_SortRule* self, int32_t type, cfish_String* field, bool reverse);

cfish_String*
LUCY_SortRule_Get_Field_IMP(lucy_SortRule* self);

int32_t
LUCY_SortRule_Get_Type_IMP(lucy_SortRule* self);

bool
LUCY_SortRule_Get_Reverse_IMP(lucy_SortRule* self);

void
LUCY_SortRule_Serialize_IMP(lucy_SortRule* self, lucy_OutStream* outstream);

lucy_SortRule*
LUCY_SortRule_Deserialize_IMP(lucy_SortRule* self, lucy_InStream* instream);

void
LUCY_SortRule_Destroy_IMP(lucy_SortRule* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_SortRule_To_Host_t)(lucy_SortRule* self, void* vcache);

typedef cfish_Obj*
(*LUCY_SortRule_Clone_t)(lucy_SortRule* self);

typedef bool
(*LUCY_SortRule_Equals_t)(lucy_SortRule* self, cfish_Obj* other);

typedef int32_t
(*LUCY_SortRule_Compare_To_t)(lucy_SortRule* self, cfish_Obj* other);

typedef void
(*LUCY_SortRule_Destroy_t)(lucy_SortRule* self);

typedef cfish_String*
(*LUCY_SortRule_To_String_t)(lucy_SortRule* self);

typedef cfish_String*
(*LUCY_SortRule_Get_Field_t)(lucy_SortRule* self);

typedef int32_t
(*LUCY_SortRule_Get_Type_t)(lucy_SortRule* self);

typedef bool
(*LUCY_SortRule_Get_Reverse_t)(lucy_SortRule* self);

typedef void
(*LUCY_SortRule_Serialize_t)(lucy_SortRule* self, lucy_OutStream* outstream);

typedef lucy_SortRule*
(*LUCY_SortRule_Deserialize_t)(lucy_SortRule* self, lucy_InStream* instream);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_SortRule_get_class(lucy_SortRule *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_SortRule_get_class_name(lucy_SortRule *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_SortRule_is_a(lucy_SortRule *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_SortRule_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_SortRule_To_Host(lucy_SortRule* self, void* vcache) {
    const LUCY_SortRule_To_Host_t method = (LUCY_SortRule_To_Host_t)cfish_obj_method(self, LUCY_SortRule_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_SortRule_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_SortRule_Clone(lucy_SortRule* self) {
    const LUCY_SortRule_Clone_t method = (LUCY_SortRule_Clone_t)cfish_obj_method(self, LUCY_SortRule_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortRule_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_SortRule_Equals(lucy_SortRule* self, cfish_Obj* other) {
    const LUCY_SortRule_Equals_t method = (LUCY_SortRule_Equals_t)cfish_obj_method(self, LUCY_SortRule_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_SortRule_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_SortRule_Compare_To(lucy_SortRule* self, cfish_Obj* other) {
    const LUCY_SortRule_Compare_To_t method = (LUCY_SortRule_Compare_To_t)cfish_obj_method(self, LUCY_SortRule_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_SortRule_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_SortRule_Destroy(lucy_SortRule* self) {
    const LUCY_SortRule_Destroy_t method = (LUCY_SortRule_Destroy_t)cfish_obj_method(self, LUCY_SortRule_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortRule_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_SortRule_To_String(lucy_SortRule* self) {
    const LUCY_SortRule_To_String_t method = (LUCY_SortRule_To_String_t)cfish_obj_method(self, LUCY_SortRule_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortRule_Get_Field_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_SortRule_Get_Field(lucy_SortRule* self) {
    const LUCY_SortRule_Get_Field_t method = (LUCY_SortRule_Get_Field_t)cfish_obj_method(self, LUCY_SortRule_Get_Field_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortRule_Get_Type_OFFSET;
static CFISH_INLINE int32_t
LUCY_SortRule_Get_Type(lucy_SortRule* self) {
    const LUCY_SortRule_Get_Type_t method = (LUCY_SortRule_Get_Type_t)cfish_obj_method(self, LUCY_SortRule_Get_Type_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortRule_Get_Reverse_OFFSET;
static CFISH_INLINE bool
LUCY_SortRule_Get_Reverse(lucy_SortRule* self) {
    const LUCY_SortRule_Get_Reverse_t method = (LUCY_SortRule_Get_Reverse_t)cfish_obj_method(self, LUCY_SortRule_Get_Reverse_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortRule_Serialize_OFFSET;
static CFISH_INLINE void
LUCY_SortRule_Serialize(lucy_SortRule* self, lucy_OutStream* outstream) {
    const LUCY_SortRule_Serialize_t method = (LUCY_SortRule_Serialize_t)cfish_obj_method(self, LUCY_SortRule_Serialize_OFFSET);
    method(self, outstream);
}

extern LUCY_VISIBLE uint32_t LUCY_SortRule_Deserialize_OFFSET;
static CFISH_INLINE lucy_SortRule*
LUCY_SortRule_Deserialize(lucy_SortRule* self, lucy_InStream* instream) {
    const LUCY_SortRule_Deserialize_t method = (LUCY_SortRule_Deserialize_t)cfish_obj_method(self, LUCY_SortRule_Deserialize_OFFSET);
    return method(self, instream);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_SortRule_Get_Field_OVERRIDE NULL
#define Lucy_SortRule_Get_Type_OVERRIDE NULL
#define Lucy_SortRule_Get_Reverse_OVERRIDE NULL
#define Lucy_SortRule_Serialize_OVERRIDE NULL
#define Lucy_SortRule_Deserialize_OVERRIDE NULL
#else
cfish_String*
Lucy_SortRule_Get_Field_OVERRIDE(lucy_SortRule* self);
int32_t
Lucy_SortRule_Get_Type_OVERRIDE(lucy_SortRule* self);
bool
Lucy_SortRule_Get_Reverse_OVERRIDE(lucy_SortRule* self);
void
Lucy_SortRule_Serialize_OVERRIDE(lucy_SortRule* self, lucy_OutStream* outstream);
lucy_SortRule*
Lucy_SortRule_Deserialize_OVERRIDE(lucy_SortRule* self, lucy_InStream* instream);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define SortRule lucy_SortRule
  #define SORTRULE LUCY_SORTRULE
  #define SortRule_new lucy_SortRule_new
  #define SortRule_init lucy_SortRule_init
  #define SortRule_FIELD lucy_SortRule_FIELD
  #define SortRule_SCORE lucy_SortRule_SCORE
  #define SortRule_DOC_ID lucy_SortRule_DOC_ID
  #define SortRule_get_class lucy_SortRule_get_class
  #define SortRule_get_class_name lucy_SortRule_get_class_name
  #define SortRule_is_a lucy_SortRule_is_a
  #define SortRule_Get_Field_IMP LUCY_SortRule_Get_Field_IMP
  #define SortRule_Get_Type_IMP LUCY_SortRule_Get_Type_IMP
  #define SortRule_Get_Reverse_IMP LUCY_SortRule_Get_Reverse_IMP
  #define SortRule_Serialize_IMP LUCY_SortRule_Serialize_IMP
  #define SortRule_Deserialize_IMP LUCY_SortRule_Deserialize_IMP
  #define SortRule_Destroy_IMP LUCY_SortRule_Destroy_IMP
  #define SortRule_To_Host LUCY_SortRule_To_Host
  #define SortRule_To_Host_t LUCY_SortRule_To_Host_t
  #define SortRule_Clone LUCY_SortRule_Clone
  #define SortRule_Clone_t LUCY_SortRule_Clone_t
  #define SortRule_Equals LUCY_SortRule_Equals
  #define SortRule_Equals_t LUCY_SortRule_Equals_t
  #define SortRule_Compare_To LUCY_SortRule_Compare_To
  #define SortRule_Compare_To_t LUCY_SortRule_Compare_To_t
  #define SortRule_Destroy LUCY_SortRule_Destroy
  #define SortRule_Destroy_t LUCY_SortRule_Destroy_t
  #define SortRule_To_String LUCY_SortRule_To_String
  #define SortRule_To_String_t LUCY_SortRule_To_String_t
  #define SortRule_Get_Field LUCY_SortRule_Get_Field
  #define SortRule_Get_Field_t LUCY_SortRule_Get_Field_t
  #define SortRule_Get_Type LUCY_SortRule_Get_Type
  #define SortRule_Get_Type_t LUCY_SortRule_Get_Type_t
  #define SortRule_Get_Reverse LUCY_SortRule_Get_Reverse
  #define SortRule_Get_Reverse_t LUCY_SortRule_Get_Reverse_t
  #define SortRule_Serialize LUCY_SortRule_Serialize
  #define SortRule_Serialize_t LUCY_SortRule_Serialize_t
  #define SortRule_Deserialize LUCY_SortRule_Deserialize
  #define SortRule_Deserialize_t LUCY_SortRule_Deserialize_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_SEARCH_SORTRULE */




