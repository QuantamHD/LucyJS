/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_DOCUMENT_HITDOC
#define H_LUCY_DOCUMENT_HITDOC 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Lucy\Document\Doc.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_HITDOC
extern uint32_t lucy_HitDoc_IVARS_OFFSET;
typedef struct lucy_HitDocIVARS lucy_HitDocIVARS;
static CFISH_INLINE lucy_HitDocIVARS*
lucy_HitDoc_IVARS(lucy_HitDoc *self) {
   char *ptr = (char*)self + lucy_HitDoc_IVARS_OFFSET;
   return (lucy_HitDocIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define HitDocIVARS lucy_HitDocIVARS
  #define HitDoc_IVARS lucy_HitDoc_IVARS
#endif

struct lucy_HitDocIVARS {
    void* fields;
    int32_t doc_id;
    float score;
};

#endif /* C_LUCY_HITDOC */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_HitDoc*
lucy_HitDoc_new(void* fields, int32_t doc_id, float score);

LUCY_VISIBLE lucy_HitDoc*
lucy_HitDoc_init(lucy_HitDoc* self, void* fields, int32_t doc_id, float score);

void
LUCY_HitDoc_Set_Score_IMP(lucy_HitDoc* self, float score);

float
LUCY_HitDoc_Get_Score_IMP(lucy_HitDoc* self);

bool
LUCY_HitDoc_Equals_IMP(lucy_HitDoc* self, cfish_Obj* other);

cfish_Hash*
LUCY_HitDoc_Dump_IMP(lucy_HitDoc* self);

lucy_HitDoc*
LUCY_HitDoc_Load_IMP(lucy_HitDoc* self, cfish_Obj* dump);

void
LUCY_HitDoc_Serialize_IMP(lucy_HitDoc* self, lucy_OutStream* outstream);

lucy_HitDoc*
LUCY_HitDoc_Deserialize_IMP(lucy_HitDoc* self, lucy_InStream* instream);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_HitDoc_To_Host_t)(lucy_HitDoc* self, void* vcache);

typedef cfish_Obj*
(*LUCY_HitDoc_Clone_t)(lucy_HitDoc* self);

typedef bool
(*LUCY_HitDoc_Equals_t)(lucy_HitDoc* self, cfish_Obj* other);

typedef int32_t
(*LUCY_HitDoc_Compare_To_t)(lucy_HitDoc* self, cfish_Obj* other);

typedef void
(*LUCY_HitDoc_Destroy_t)(lucy_HitDoc* self);

typedef cfish_String*
(*LUCY_HitDoc_To_String_t)(lucy_HitDoc* self);

typedef void
(*LUCY_HitDoc_Set_Doc_ID_t)(lucy_HitDoc* self, int32_t doc_id);

typedef int32_t
(*LUCY_HitDoc_Get_Doc_ID_t)(lucy_HitDoc* self);

typedef void
(*LUCY_HitDoc_Store_t)(lucy_HitDoc* self, cfish_String* field, cfish_Obj* value);

typedef void
(*LUCY_HitDoc_Set_Fields_t)(lucy_HitDoc* self, void* fields);

typedef void*
(*LUCY_HitDoc_Get_Fields_t)(lucy_HitDoc* self);

typedef uint32_t
(*LUCY_HitDoc_Get_Size_t)(lucy_HitDoc* self);

typedef cfish_Obj*
(*LUCY_HitDoc_Extract_t)(lucy_HitDoc* self, cfish_String* field);

typedef cfish_Vector*
(*LUCY_HitDoc_Field_Names_t)(lucy_HitDoc* self);

typedef void
(*LUCY_HitDoc_Serialize_t)(lucy_HitDoc* self, lucy_OutStream* outstream);

typedef lucy_HitDoc*
(*LUCY_HitDoc_Deserialize_t)(lucy_HitDoc* self, lucy_InStream* instream);

typedef cfish_Hash*
(*LUCY_HitDoc_Dump_t)(lucy_HitDoc* self);

typedef lucy_HitDoc*
(*LUCY_HitDoc_Load_t)(lucy_HitDoc* self, cfish_Obj* dump);

typedef void
(*LUCY_HitDoc_Set_Score_t)(lucy_HitDoc* self, float score);

typedef float
(*LUCY_HitDoc_Get_Score_t)(lucy_HitDoc* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_HitDoc_get_class(lucy_HitDoc *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_HitDoc_get_class_name(lucy_HitDoc *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_HitDoc_is_a(lucy_HitDoc *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_HitDoc_To_Host(lucy_HitDoc* self, void* vcache) {
    const LUCY_HitDoc_To_Host_t method = (LUCY_HitDoc_To_Host_t)cfish_obj_method(self, LUCY_HitDoc_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_HitDoc_Clone(lucy_HitDoc* self) {
    const LUCY_HitDoc_Clone_t method = (LUCY_HitDoc_Clone_t)cfish_obj_method(self, LUCY_HitDoc_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_HitDoc_Equals(lucy_HitDoc* self, cfish_Obj* other) {
    const LUCY_HitDoc_Equals_t method = (LUCY_HitDoc_Equals_t)cfish_obj_method(self, LUCY_HitDoc_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_HitDoc_Compare_To(lucy_HitDoc* self, cfish_Obj* other) {
    const LUCY_HitDoc_Compare_To_t method = (LUCY_HitDoc_Compare_To_t)cfish_obj_method(self, LUCY_HitDoc_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_HitDoc_Destroy(lucy_HitDoc* self) {
    const LUCY_HitDoc_Destroy_t method = (LUCY_HitDoc_Destroy_t)cfish_obj_method(self, LUCY_HitDoc_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_HitDoc_To_String(lucy_HitDoc* self) {
    const LUCY_HitDoc_To_String_t method = (LUCY_HitDoc_To_String_t)cfish_obj_method(self, LUCY_HitDoc_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Set_Doc_ID_OFFSET;
static CFISH_INLINE void
LUCY_HitDoc_Set_Doc_ID(lucy_HitDoc* self, int32_t doc_id) {
    const LUCY_HitDoc_Set_Doc_ID_t method = (LUCY_HitDoc_Set_Doc_ID_t)cfish_obj_method(self, LUCY_HitDoc_Set_Doc_ID_OFFSET);
    method(self, doc_id);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Get_Doc_ID_OFFSET;
static CFISH_INLINE int32_t
LUCY_HitDoc_Get_Doc_ID(lucy_HitDoc* self) {
    const LUCY_HitDoc_Get_Doc_ID_t method = (LUCY_HitDoc_Get_Doc_ID_t)cfish_obj_method(self, LUCY_HitDoc_Get_Doc_ID_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Store_OFFSET;
static CFISH_INLINE void
LUCY_HitDoc_Store(lucy_HitDoc* self, cfish_String* field, cfish_Obj* value) {
    const LUCY_HitDoc_Store_t method = (LUCY_HitDoc_Store_t)cfish_obj_method(self, LUCY_HitDoc_Store_OFFSET);
    method(self, field, value);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Set_Fields_OFFSET;
static CFISH_INLINE void
LUCY_HitDoc_Set_Fields(lucy_HitDoc* self, void* fields) {
    const LUCY_HitDoc_Set_Fields_t method = (LUCY_HitDoc_Set_Fields_t)cfish_obj_method(self, LUCY_HitDoc_Set_Fields_OFFSET);
    method(self, fields);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Get_Fields_OFFSET;
static CFISH_INLINE void*
LUCY_HitDoc_Get_Fields(lucy_HitDoc* self) {
    const LUCY_HitDoc_Get_Fields_t method = (LUCY_HitDoc_Get_Fields_t)cfish_obj_method(self, LUCY_HitDoc_Get_Fields_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Get_Size_OFFSET;
static CFISH_INLINE uint32_t
LUCY_HitDoc_Get_Size(lucy_HitDoc* self) {
    const LUCY_HitDoc_Get_Size_t method = (LUCY_HitDoc_Get_Size_t)cfish_obj_method(self, LUCY_HitDoc_Get_Size_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Extract_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_HitDoc_Extract(lucy_HitDoc* self, cfish_String* field) {
    const LUCY_HitDoc_Extract_t method = (LUCY_HitDoc_Extract_t)cfish_obj_method(self, LUCY_HitDoc_Extract_OFFSET);
    return method(self, field);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Field_Names_OFFSET;
static CFISH_INLINE cfish_Vector*
LUCY_HitDoc_Field_Names(lucy_HitDoc* self) {
    const LUCY_HitDoc_Field_Names_t method = (LUCY_HitDoc_Field_Names_t)cfish_obj_method(self, LUCY_HitDoc_Field_Names_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Serialize_OFFSET;
static CFISH_INLINE void
LUCY_HitDoc_Serialize(lucy_HitDoc* self, lucy_OutStream* outstream) {
    const LUCY_HitDoc_Serialize_t method = (LUCY_HitDoc_Serialize_t)cfish_obj_method(self, LUCY_HitDoc_Serialize_OFFSET);
    method(self, outstream);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Deserialize_OFFSET;
static CFISH_INLINE lucy_HitDoc*
LUCY_HitDoc_Deserialize(lucy_HitDoc* self, lucy_InStream* instream) {
    const LUCY_HitDoc_Deserialize_t method = (LUCY_HitDoc_Deserialize_t)cfish_obj_method(self, LUCY_HitDoc_Deserialize_OFFSET);
    return method(self, instream);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Dump_OFFSET;
static CFISH_INLINE cfish_Hash*
LUCY_HitDoc_Dump(lucy_HitDoc* self) {
    const LUCY_HitDoc_Dump_t method = (LUCY_HitDoc_Dump_t)cfish_obj_method(self, LUCY_HitDoc_Dump_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Load_OFFSET;
static CFISH_INLINE lucy_HitDoc*
LUCY_HitDoc_Load(lucy_HitDoc* self, cfish_Obj* dump) {
    const LUCY_HitDoc_Load_t method = (LUCY_HitDoc_Load_t)cfish_obj_method(self, LUCY_HitDoc_Load_OFFSET);
    return method(self, dump);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Set_Score_OFFSET;
static CFISH_INLINE void
LUCY_HitDoc_Set_Score(lucy_HitDoc* self, float score) {
    const LUCY_HitDoc_Set_Score_t method = (LUCY_HitDoc_Set_Score_t)cfish_obj_method(self, LUCY_HitDoc_Set_Score_OFFSET);
    method(self, score);
}

extern LUCY_VISIBLE uint32_t LUCY_HitDoc_Get_Score_OFFSET;
static CFISH_INLINE float
LUCY_HitDoc_Get_Score(lucy_HitDoc* self) {
    const LUCY_HitDoc_Get_Score_t method = (LUCY_HitDoc_Get_Score_t)cfish_obj_method(self, LUCY_HitDoc_Get_Score_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_HitDoc_Set_Score_OVERRIDE NULL
#define Lucy_HitDoc_Get_Score_OVERRIDE NULL
#else
void
Lucy_HitDoc_Set_Score_OVERRIDE(lucy_HitDoc* self, float score);
float
Lucy_HitDoc_Get_Score_OVERRIDE(lucy_HitDoc* self);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define HitDoc lucy_HitDoc
  #define HITDOC LUCY_HITDOC
  #define HitDoc_new lucy_HitDoc_new
  #define HitDoc_init lucy_HitDoc_init
  #define HitDoc_get_class lucy_HitDoc_get_class
  #define HitDoc_get_class_name lucy_HitDoc_get_class_name
  #define HitDoc_is_a lucy_HitDoc_is_a
  #define HitDoc_Set_Score_IMP LUCY_HitDoc_Set_Score_IMP
  #define HitDoc_Get_Score_IMP LUCY_HitDoc_Get_Score_IMP
  #define HitDoc_Equals_IMP LUCY_HitDoc_Equals_IMP
  #define HitDoc_Dump_IMP LUCY_HitDoc_Dump_IMP
  #define HitDoc_Load_IMP LUCY_HitDoc_Load_IMP
  #define HitDoc_Serialize_IMP LUCY_HitDoc_Serialize_IMP
  #define HitDoc_Deserialize_IMP LUCY_HitDoc_Deserialize_IMP
  #define HitDoc_To_Host LUCY_HitDoc_To_Host
  #define HitDoc_To_Host_t LUCY_HitDoc_To_Host_t
  #define HitDoc_Clone LUCY_HitDoc_Clone
  #define HitDoc_Clone_t LUCY_HitDoc_Clone_t
  #define HitDoc_Equals LUCY_HitDoc_Equals
  #define HitDoc_Equals_t LUCY_HitDoc_Equals_t
  #define HitDoc_Compare_To LUCY_HitDoc_Compare_To
  #define HitDoc_Compare_To_t LUCY_HitDoc_Compare_To_t
  #define HitDoc_Destroy LUCY_HitDoc_Destroy
  #define HitDoc_Destroy_t LUCY_HitDoc_Destroy_t
  #define HitDoc_To_String LUCY_HitDoc_To_String
  #define HitDoc_To_String_t LUCY_HitDoc_To_String_t
  #define HitDoc_Set_Doc_ID LUCY_HitDoc_Set_Doc_ID
  #define HitDoc_Set_Doc_ID_t LUCY_HitDoc_Set_Doc_ID_t
  #define HitDoc_Get_Doc_ID LUCY_HitDoc_Get_Doc_ID
  #define HitDoc_Get_Doc_ID_t LUCY_HitDoc_Get_Doc_ID_t
  #define HitDoc_Store LUCY_HitDoc_Store
  #define HitDoc_Store_t LUCY_HitDoc_Store_t
  #define HitDoc_Set_Fields LUCY_HitDoc_Set_Fields
  #define HitDoc_Set_Fields_t LUCY_HitDoc_Set_Fields_t
  #define HitDoc_Get_Fields LUCY_HitDoc_Get_Fields
  #define HitDoc_Get_Fields_t LUCY_HitDoc_Get_Fields_t
  #define HitDoc_Get_Size LUCY_HitDoc_Get_Size
  #define HitDoc_Get_Size_t LUCY_HitDoc_Get_Size_t
  #define HitDoc_Extract LUCY_HitDoc_Extract
  #define HitDoc_Extract_t LUCY_HitDoc_Extract_t
  #define HitDoc_Field_Names LUCY_HitDoc_Field_Names
  #define HitDoc_Field_Names_t LUCY_HitDoc_Field_Names_t
  #define HitDoc_Serialize LUCY_HitDoc_Serialize
  #define HitDoc_Serialize_t LUCY_HitDoc_Serialize_t
  #define HitDoc_Deserialize LUCY_HitDoc_Deserialize
  #define HitDoc_Deserialize_t LUCY_HitDoc_Deserialize_t
  #define HitDoc_Dump LUCY_HitDoc_Dump
  #define HitDoc_Dump_t LUCY_HitDoc_Dump_t
  #define HitDoc_Load LUCY_HitDoc_Load
  #define HitDoc_Load_t LUCY_HitDoc_Load_t
  #define HitDoc_Set_Score LUCY_HitDoc_Set_Score
  #define HitDoc_Set_Score_t LUCY_HitDoc_Set_Score_t
  #define HitDoc_Get_Score LUCY_HitDoc_Get_Score
  #define HitDoc_Get_Score_t LUCY_HitDoc_Get_Score_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_DOCUMENT_HITDOC */




