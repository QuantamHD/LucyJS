/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_HIGHLIGHT_HIGHLIGHTER
#define H_LUCY_HIGHLIGHT_HIGHLIGHTER 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Clownfish\Obj.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_HIGHLIGHTER
extern uint32_t lucy_Highlighter_IVARS_OFFSET;
typedef struct lucy_HighlighterIVARS lucy_HighlighterIVARS;
static CFISH_INLINE lucy_HighlighterIVARS*
lucy_Highlighter_IVARS(lucy_Highlighter *self) {
   char *ptr = (char*)self + lucy_Highlighter_IVARS_OFFSET;
   return (lucy_HighlighterIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define HighlighterIVARS lucy_HighlighterIVARS
  #define Highlighter_IVARS lucy_Highlighter_IVARS
#endif

struct lucy_HighlighterIVARS {
    lucy_Searcher* searcher;
    lucy_Query* query;
    cfish_String* field;
    uint32_t excerpt_length;
    uint32_t slop;
    cfish_String* pre_tag;
    cfish_String* post_tag;
    lucy_Compiler* compiler;
};

#endif /* C_LUCY_HIGHLIGHTER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_Highlighter*
lucy_Highlighter_new(lucy_Searcher* searcher, cfish_Obj* query, cfish_String* field, uint32_t excerpt_length);

LUCY_VISIBLE lucy_Highlighter*
lucy_Highlighter_init(lucy_Highlighter* self, lucy_Searcher* searcher, cfish_Obj* query, cfish_String* field, uint32_t excerpt_length);

cfish_String*
LUCY_Highlighter_Create_Excerpt_IMP(lucy_Highlighter* self, lucy_HitDoc* hit_doc);

cfish_String*
LUCY_Highlighter_Encode_IMP(lucy_Highlighter* self, cfish_String* text);

cfish_String*
LUCY_Highlighter_Highlight_IMP(lucy_Highlighter* self, cfish_String* text);

void
LUCY_Highlighter_Set_Pre_Tag_IMP(lucy_Highlighter* self, cfish_String* pre_tag);

void
LUCY_Highlighter_Set_Post_Tag_IMP(lucy_Highlighter* self, cfish_String* post_tag);

cfish_String*
LUCY_Highlighter_Get_Pre_Tag_IMP(lucy_Highlighter* self);

cfish_String*
LUCY_Highlighter_Get_Post_Tag_IMP(lucy_Highlighter* self);

cfish_String*
LUCY_Highlighter_Get_Field_IMP(lucy_Highlighter* self);

uint32_t
LUCY_Highlighter_Get_Excerpt_Length_IMP(lucy_Highlighter* self);

lucy_Searcher*
LUCY_Highlighter_Get_Searcher_IMP(lucy_Highlighter* self);

lucy_Query*
LUCY_Highlighter_Get_Query_IMP(lucy_Highlighter* self);

lucy_Compiler*
LUCY_Highlighter_Get_Compiler_IMP(lucy_Highlighter* self);

cfish_String*
LUCY_Highlighter_Raw_Excerpt_IMP(lucy_Highlighter* self, cfish_String* field_value, int32_t* top, lucy_HeatMap* heat_map);

cfish_String*
LUCY_Highlighter_Highlight_Excerpt_IMP(lucy_Highlighter* self, cfish_Vector* spans, cfish_String* raw_excerpt, int32_t top);

void
LUCY_Highlighter_Destroy_IMP(lucy_Highlighter* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_Highlighter_To_Host_t)(lucy_Highlighter* self, void* vcache);

typedef cfish_Obj*
(*LUCY_Highlighter_Clone_t)(lucy_Highlighter* self);

typedef bool
(*LUCY_Highlighter_Equals_t)(lucy_Highlighter* self, cfish_Obj* other);

typedef int32_t
(*LUCY_Highlighter_Compare_To_t)(lucy_Highlighter* self, cfish_Obj* other);

typedef void
(*LUCY_Highlighter_Destroy_t)(lucy_Highlighter* self);

typedef cfish_String*
(*LUCY_Highlighter_To_String_t)(lucy_Highlighter* self);

typedef cfish_String*
(*LUCY_Highlighter_Create_Excerpt_t)(lucy_Highlighter* self, lucy_HitDoc* hit_doc);

typedef cfish_String*
(*LUCY_Highlighter_Encode_t)(lucy_Highlighter* self, cfish_String* text);

typedef cfish_String*
(*LUCY_Highlighter_Highlight_t)(lucy_Highlighter* self, cfish_String* text);

typedef void
(*LUCY_Highlighter_Set_Pre_Tag_t)(lucy_Highlighter* self, cfish_String* pre_tag);

typedef void
(*LUCY_Highlighter_Set_Post_Tag_t)(lucy_Highlighter* self, cfish_String* post_tag);

typedef cfish_String*
(*LUCY_Highlighter_Get_Pre_Tag_t)(lucy_Highlighter* self);

typedef cfish_String*
(*LUCY_Highlighter_Get_Post_Tag_t)(lucy_Highlighter* self);

typedef cfish_String*
(*LUCY_Highlighter_Get_Field_t)(lucy_Highlighter* self);

typedef uint32_t
(*LUCY_Highlighter_Get_Excerpt_Length_t)(lucy_Highlighter* self);

typedef lucy_Searcher*
(*LUCY_Highlighter_Get_Searcher_t)(lucy_Highlighter* self);

typedef lucy_Query*
(*LUCY_Highlighter_Get_Query_t)(lucy_Highlighter* self);

typedef lucy_Compiler*
(*LUCY_Highlighter_Get_Compiler_t)(lucy_Highlighter* self);

typedef cfish_String*
(*LUCY_Highlighter_Raw_Excerpt_t)(lucy_Highlighter* self, cfish_String* field_value, int32_t* top, lucy_HeatMap* heat_map);

typedef cfish_String*
(*LUCY_Highlighter_Highlight_Excerpt_t)(lucy_Highlighter* self, cfish_Vector* spans, cfish_String* raw_excerpt, int32_t top);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_Highlighter_get_class(lucy_Highlighter *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_Highlighter_get_class_name(lucy_Highlighter *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_Highlighter_is_a(lucy_Highlighter *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_Highlighter_To_Host(lucy_Highlighter* self, void* vcache) {
    const LUCY_Highlighter_To_Host_t method = (LUCY_Highlighter_To_Host_t)cfish_obj_method(self, LUCY_Highlighter_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_Highlighter_Clone(lucy_Highlighter* self) {
    const LUCY_Highlighter_Clone_t method = (LUCY_Highlighter_Clone_t)cfish_obj_method(self, LUCY_Highlighter_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_Highlighter_Equals(lucy_Highlighter* self, cfish_Obj* other) {
    const LUCY_Highlighter_Equals_t method = (LUCY_Highlighter_Equals_t)cfish_obj_method(self, LUCY_Highlighter_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_Highlighter_Compare_To(lucy_Highlighter* self, cfish_Obj* other) {
    const LUCY_Highlighter_Compare_To_t method = (LUCY_Highlighter_Compare_To_t)cfish_obj_method(self, LUCY_Highlighter_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_Highlighter_Destroy(lucy_Highlighter* self) {
    const LUCY_Highlighter_Destroy_t method = (LUCY_Highlighter_Destroy_t)cfish_obj_method(self, LUCY_Highlighter_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Highlighter_To_String(lucy_Highlighter* self) {
    const LUCY_Highlighter_To_String_t method = (LUCY_Highlighter_To_String_t)cfish_obj_method(self, LUCY_Highlighter_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Create_Excerpt_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Highlighter_Create_Excerpt(lucy_Highlighter* self, lucy_HitDoc* hit_doc) {
    const LUCY_Highlighter_Create_Excerpt_t method = (LUCY_Highlighter_Create_Excerpt_t)cfish_obj_method(self, LUCY_Highlighter_Create_Excerpt_OFFSET);
    return method(self, hit_doc);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Encode_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Highlighter_Encode(lucy_Highlighter* self, cfish_String* text) {
    const LUCY_Highlighter_Encode_t method = (LUCY_Highlighter_Encode_t)cfish_obj_method(self, LUCY_Highlighter_Encode_OFFSET);
    return method(self, text);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Highlight_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Highlighter_Highlight(lucy_Highlighter* self, cfish_String* text) {
    const LUCY_Highlighter_Highlight_t method = (LUCY_Highlighter_Highlight_t)cfish_obj_method(self, LUCY_Highlighter_Highlight_OFFSET);
    return method(self, text);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Set_Pre_Tag_OFFSET;
static CFISH_INLINE void
LUCY_Highlighter_Set_Pre_Tag(lucy_Highlighter* self, cfish_String* pre_tag) {
    const LUCY_Highlighter_Set_Pre_Tag_t method = (LUCY_Highlighter_Set_Pre_Tag_t)cfish_obj_method(self, LUCY_Highlighter_Set_Pre_Tag_OFFSET);
    method(self, pre_tag);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Set_Post_Tag_OFFSET;
static CFISH_INLINE void
LUCY_Highlighter_Set_Post_Tag(lucy_Highlighter* self, cfish_String* post_tag) {
    const LUCY_Highlighter_Set_Post_Tag_t method = (LUCY_Highlighter_Set_Post_Tag_t)cfish_obj_method(self, LUCY_Highlighter_Set_Post_Tag_OFFSET);
    method(self, post_tag);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Get_Pre_Tag_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Highlighter_Get_Pre_Tag(lucy_Highlighter* self) {
    const LUCY_Highlighter_Get_Pre_Tag_t method = (LUCY_Highlighter_Get_Pre_Tag_t)cfish_obj_method(self, LUCY_Highlighter_Get_Pre_Tag_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Get_Post_Tag_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Highlighter_Get_Post_Tag(lucy_Highlighter* self) {
    const LUCY_Highlighter_Get_Post_Tag_t method = (LUCY_Highlighter_Get_Post_Tag_t)cfish_obj_method(self, LUCY_Highlighter_Get_Post_Tag_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Get_Field_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Highlighter_Get_Field(lucy_Highlighter* self) {
    const LUCY_Highlighter_Get_Field_t method = (LUCY_Highlighter_Get_Field_t)cfish_obj_method(self, LUCY_Highlighter_Get_Field_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Get_Excerpt_Length_OFFSET;
static CFISH_INLINE uint32_t
LUCY_Highlighter_Get_Excerpt_Length(lucy_Highlighter* self) {
    const LUCY_Highlighter_Get_Excerpt_Length_t method = (LUCY_Highlighter_Get_Excerpt_Length_t)cfish_obj_method(self, LUCY_Highlighter_Get_Excerpt_Length_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Get_Searcher_OFFSET;
static CFISH_INLINE lucy_Searcher*
LUCY_Highlighter_Get_Searcher(lucy_Highlighter* self) {
    const LUCY_Highlighter_Get_Searcher_t method = (LUCY_Highlighter_Get_Searcher_t)cfish_obj_method(self, LUCY_Highlighter_Get_Searcher_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Get_Query_OFFSET;
static CFISH_INLINE lucy_Query*
LUCY_Highlighter_Get_Query(lucy_Highlighter* self) {
    const LUCY_Highlighter_Get_Query_t method = (LUCY_Highlighter_Get_Query_t)cfish_obj_method(self, LUCY_Highlighter_Get_Query_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Get_Compiler_OFFSET;
static CFISH_INLINE lucy_Compiler*
LUCY_Highlighter_Get_Compiler(lucy_Highlighter* self) {
    const LUCY_Highlighter_Get_Compiler_t method = (LUCY_Highlighter_Get_Compiler_t)cfish_obj_method(self, LUCY_Highlighter_Get_Compiler_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Raw_Excerpt_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Highlighter_Raw_Excerpt(lucy_Highlighter* self, cfish_String* field_value, int32_t* top, lucy_HeatMap* heat_map) {
    const LUCY_Highlighter_Raw_Excerpt_t method = (LUCY_Highlighter_Raw_Excerpt_t)cfish_obj_method(self, LUCY_Highlighter_Raw_Excerpt_OFFSET);
    return method(self, field_value, top, heat_map);
}

extern LUCY_VISIBLE uint32_t LUCY_Highlighter_Highlight_Excerpt_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_Highlighter_Highlight_Excerpt(lucy_Highlighter* self, cfish_Vector* spans, cfish_String* raw_excerpt, int32_t top) {
    const LUCY_Highlighter_Highlight_Excerpt_t method = (LUCY_Highlighter_Highlight_Excerpt_t)cfish_obj_method(self, LUCY_Highlighter_Highlight_Excerpt_OFFSET);
    return method(self, spans, raw_excerpt, top);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_Highlighter_Create_Excerpt_OVERRIDE NULL
#define Lucy_Highlighter_Encode_OVERRIDE NULL
#define Lucy_Highlighter_Highlight_OVERRIDE NULL
#define Lucy_Highlighter_Set_Pre_Tag_OVERRIDE NULL
#define Lucy_Highlighter_Set_Post_Tag_OVERRIDE NULL
#define Lucy_Highlighter_Get_Pre_Tag_OVERRIDE NULL
#define Lucy_Highlighter_Get_Post_Tag_OVERRIDE NULL
#define Lucy_Highlighter_Get_Field_OVERRIDE NULL
#define Lucy_Highlighter_Get_Excerpt_Length_OVERRIDE NULL
#define Lucy_Highlighter_Get_Searcher_OVERRIDE NULL
#define Lucy_Highlighter_Get_Query_OVERRIDE NULL
#define Lucy_Highlighter_Get_Compiler_OVERRIDE NULL
#define Lucy_Highlighter_Raw_Excerpt_OVERRIDE NULL
#define Lucy_Highlighter_Highlight_Excerpt_OVERRIDE NULL
#else
cfish_String*
Lucy_Highlighter_Create_Excerpt_OVERRIDE(lucy_Highlighter* self, lucy_HitDoc* hit_doc);
cfish_String*
Lucy_Highlighter_Encode_OVERRIDE(lucy_Highlighter* self, cfish_String* text);
cfish_String*
Lucy_Highlighter_Highlight_OVERRIDE(lucy_Highlighter* self, cfish_String* text);
void
Lucy_Highlighter_Set_Pre_Tag_OVERRIDE(lucy_Highlighter* self, cfish_String* pre_tag);
void
Lucy_Highlighter_Set_Post_Tag_OVERRIDE(lucy_Highlighter* self, cfish_String* post_tag);
cfish_String*
Lucy_Highlighter_Get_Pre_Tag_OVERRIDE(lucy_Highlighter* self);
cfish_String*
Lucy_Highlighter_Get_Post_Tag_OVERRIDE(lucy_Highlighter* self);
cfish_String*
Lucy_Highlighter_Get_Field_OVERRIDE(lucy_Highlighter* self);
uint32_t
Lucy_Highlighter_Get_Excerpt_Length_OVERRIDE(lucy_Highlighter* self);
lucy_Searcher*
Lucy_Highlighter_Get_Searcher_OVERRIDE(lucy_Highlighter* self);
lucy_Query*
Lucy_Highlighter_Get_Query_OVERRIDE(lucy_Highlighter* self);
lucy_Compiler*
Lucy_Highlighter_Get_Compiler_OVERRIDE(lucy_Highlighter* self);
cfish_String*
Lucy_Highlighter_Raw_Excerpt_OVERRIDE(lucy_Highlighter* self, cfish_String* field_value, int32_t* top, lucy_HeatMap* heat_map);
cfish_String*
Lucy_Highlighter_Highlight_Excerpt_OVERRIDE(lucy_Highlighter* self, cfish_Vector* spans, cfish_String* raw_excerpt, int32_t top);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define Highlighter lucy_Highlighter
  #define HIGHLIGHTER LUCY_HIGHLIGHTER
  #define Highlighter_new lucy_Highlighter_new
  #define Highlighter_init lucy_Highlighter_init
  #define Highlighter_get_class lucy_Highlighter_get_class
  #define Highlighter_get_class_name lucy_Highlighter_get_class_name
  #define Highlighter_is_a lucy_Highlighter_is_a
  #define Highlighter_Create_Excerpt_IMP LUCY_Highlighter_Create_Excerpt_IMP
  #define Highlighter_Encode_IMP LUCY_Highlighter_Encode_IMP
  #define Highlighter_Highlight_IMP LUCY_Highlighter_Highlight_IMP
  #define Highlighter_Set_Pre_Tag_IMP LUCY_Highlighter_Set_Pre_Tag_IMP
  #define Highlighter_Set_Post_Tag_IMP LUCY_Highlighter_Set_Post_Tag_IMP
  #define Highlighter_Get_Pre_Tag_IMP LUCY_Highlighter_Get_Pre_Tag_IMP
  #define Highlighter_Get_Post_Tag_IMP LUCY_Highlighter_Get_Post_Tag_IMP
  #define Highlighter_Get_Field_IMP LUCY_Highlighter_Get_Field_IMP
  #define Highlighter_Get_Excerpt_Length_IMP LUCY_Highlighter_Get_Excerpt_Length_IMP
  #define Highlighter_Get_Searcher_IMP LUCY_Highlighter_Get_Searcher_IMP
  #define Highlighter_Get_Query_IMP LUCY_Highlighter_Get_Query_IMP
  #define Highlighter_Get_Compiler_IMP LUCY_Highlighter_Get_Compiler_IMP
  #define Highlighter_Raw_Excerpt_IMP LUCY_Highlighter_Raw_Excerpt_IMP
  #define Highlighter_Highlight_Excerpt_IMP LUCY_Highlighter_Highlight_Excerpt_IMP
  #define Highlighter_Destroy_IMP LUCY_Highlighter_Destroy_IMP
  #define Highlighter_To_Host LUCY_Highlighter_To_Host
  #define Highlighter_To_Host_t LUCY_Highlighter_To_Host_t
  #define Highlighter_Clone LUCY_Highlighter_Clone
  #define Highlighter_Clone_t LUCY_Highlighter_Clone_t
  #define Highlighter_Equals LUCY_Highlighter_Equals
  #define Highlighter_Equals_t LUCY_Highlighter_Equals_t
  #define Highlighter_Compare_To LUCY_Highlighter_Compare_To
  #define Highlighter_Compare_To_t LUCY_Highlighter_Compare_To_t
  #define Highlighter_Destroy LUCY_Highlighter_Destroy
  #define Highlighter_Destroy_t LUCY_Highlighter_Destroy_t
  #define Highlighter_To_String LUCY_Highlighter_To_String
  #define Highlighter_To_String_t LUCY_Highlighter_To_String_t
  #define Highlighter_Create_Excerpt LUCY_Highlighter_Create_Excerpt
  #define Highlighter_Create_Excerpt_t LUCY_Highlighter_Create_Excerpt_t
  #define Highlighter_Encode LUCY_Highlighter_Encode
  #define Highlighter_Encode_t LUCY_Highlighter_Encode_t
  #define Highlighter_Highlight LUCY_Highlighter_Highlight
  #define Highlighter_Highlight_t LUCY_Highlighter_Highlight_t
  #define Highlighter_Set_Pre_Tag LUCY_Highlighter_Set_Pre_Tag
  #define Highlighter_Set_Pre_Tag_t LUCY_Highlighter_Set_Pre_Tag_t
  #define Highlighter_Set_Post_Tag LUCY_Highlighter_Set_Post_Tag
  #define Highlighter_Set_Post_Tag_t LUCY_Highlighter_Set_Post_Tag_t
  #define Highlighter_Get_Pre_Tag LUCY_Highlighter_Get_Pre_Tag
  #define Highlighter_Get_Pre_Tag_t LUCY_Highlighter_Get_Pre_Tag_t
  #define Highlighter_Get_Post_Tag LUCY_Highlighter_Get_Post_Tag
  #define Highlighter_Get_Post_Tag_t LUCY_Highlighter_Get_Post_Tag_t
  #define Highlighter_Get_Field LUCY_Highlighter_Get_Field
  #define Highlighter_Get_Field_t LUCY_Highlighter_Get_Field_t
  #define Highlighter_Get_Excerpt_Length LUCY_Highlighter_Get_Excerpt_Length
  #define Highlighter_Get_Excerpt_Length_t LUCY_Highlighter_Get_Excerpt_Length_t
  #define Highlighter_Get_Searcher LUCY_Highlighter_Get_Searcher
  #define Highlighter_Get_Searcher_t LUCY_Highlighter_Get_Searcher_t
  #define Highlighter_Get_Query LUCY_Highlighter_Get_Query
  #define Highlighter_Get_Query_t LUCY_Highlighter_Get_Query_t
  #define Highlighter_Get_Compiler LUCY_Highlighter_Get_Compiler
  #define Highlighter_Get_Compiler_t LUCY_Highlighter_Get_Compiler_t
  #define Highlighter_Raw_Excerpt LUCY_Highlighter_Raw_Excerpt
  #define Highlighter_Raw_Excerpt_t LUCY_Highlighter_Raw_Excerpt_t
  #define Highlighter_Highlight_Excerpt LUCY_Highlighter_Highlight_Excerpt
  #define Highlighter_Highlight_Excerpt_t LUCY_Highlighter_Highlight_Excerpt_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_HIGHLIGHT_HIGHLIGHTER */




