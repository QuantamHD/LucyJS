/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_INDEX_TERMSTEPPER
#define H_LUCY_INDEX_TERMSTEPPER 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Lucy\Util\Stepper.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_TERMSTEPPER
extern uint32_t lucy_TermStepper_IVARS_OFFSET;
typedef struct lucy_TermStepperIVARS lucy_TermStepperIVARS;
static CFISH_INLINE lucy_TermStepperIVARS*
lucy_TermStepper_IVARS(lucy_TermStepper *self) {
   char *ptr = (char*)self + lucy_TermStepper_IVARS_OFFSET;
   return (lucy_TermStepperIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define TermStepperIVARS lucy_TermStepperIVARS
  #define TermStepper_IVARS lucy_TermStepper_IVARS
#endif

struct lucy_TermStepperIVARS {
    cfish_Obj* value;
};

#endif /* C_LUCY_TERMSTEPPER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_TermStepper*
lucy_TermStepper_init(lucy_TermStepper* self);

void
LUCY_TermStepper_Set_Value_IMP(lucy_TermStepper* self, cfish_Obj* value);

cfish_Obj*
LUCY_TermStepper_Get_Value_IMP(lucy_TermStepper* self);

void
LUCY_TermStepper_Destroy_IMP(lucy_TermStepper* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_TermStepper_To_Host_t)(lucy_TermStepper* self, void* vcache);

typedef cfish_Obj*
(*LUCY_TermStepper_Clone_t)(lucy_TermStepper* self);

typedef bool
(*LUCY_TermStepper_Equals_t)(lucy_TermStepper* self, cfish_Obj* other);

typedef int32_t
(*LUCY_TermStepper_Compare_To_t)(lucy_TermStepper* self, cfish_Obj* other);

typedef void
(*LUCY_TermStepper_Destroy_t)(lucy_TermStepper* self);

typedef cfish_String*
(*LUCY_TermStepper_To_String_t)(lucy_TermStepper* self);

typedef void
(*LUCY_TermStepper_Reset_t)(lucy_TermStepper* self);

typedef void
(*LUCY_TermStepper_Write_Key_Frame_t)(lucy_TermStepper* self, lucy_OutStream* outstream, cfish_Obj* value);

typedef void
(*LUCY_TermStepper_Write_Delta_t)(lucy_TermStepper* self, lucy_OutStream* outstream, cfish_Obj* value);

typedef void
(*LUCY_TermStepper_Read_Key_Frame_t)(lucy_TermStepper* self, lucy_InStream* instream);

typedef void
(*LUCY_TermStepper_Read_Delta_t)(lucy_TermStepper* self, lucy_InStream* instream);

typedef void
(*LUCY_TermStepper_Read_Record_t)(lucy_TermStepper* self, lucy_InStream* instream);

typedef void
(*LUCY_TermStepper_Set_Value_t)(lucy_TermStepper* self, cfish_Obj* value);

typedef cfish_Obj*
(*LUCY_TermStepper_Get_Value_t)(lucy_TermStepper* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_TermStepper_get_class(lucy_TermStepper *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_TermStepper_get_class_name(lucy_TermStepper *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_TermStepper_is_a(lucy_TermStepper *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_TermStepper_To_Host(lucy_TermStepper* self, void* vcache) {
    const LUCY_TermStepper_To_Host_t method = (LUCY_TermStepper_To_Host_t)cfish_obj_method(self, LUCY_TermStepper_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_TermStepper_Clone(lucy_TermStepper* self) {
    const LUCY_TermStepper_Clone_t method = (LUCY_TermStepper_Clone_t)cfish_obj_method(self, LUCY_TermStepper_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_TermStepper_Equals(lucy_TermStepper* self, cfish_Obj* other) {
    const LUCY_TermStepper_Equals_t method = (LUCY_TermStepper_Equals_t)cfish_obj_method(self, LUCY_TermStepper_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_TermStepper_Compare_To(lucy_TermStepper* self, cfish_Obj* other) {
    const LUCY_TermStepper_Compare_To_t method = (LUCY_TermStepper_Compare_To_t)cfish_obj_method(self, LUCY_TermStepper_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_TermStepper_Destroy(lucy_TermStepper* self) {
    const LUCY_TermStepper_Destroy_t method = (LUCY_TermStepper_Destroy_t)cfish_obj_method(self, LUCY_TermStepper_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_TermStepper_To_String(lucy_TermStepper* self) {
    const LUCY_TermStepper_To_String_t method = (LUCY_TermStepper_To_String_t)cfish_obj_method(self, LUCY_TermStepper_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Reset_OFFSET;
static CFISH_INLINE void
LUCY_TermStepper_Reset(lucy_TermStepper* self) {
    const LUCY_TermStepper_Reset_t method = (LUCY_TermStepper_Reset_t)cfish_obj_method(self, LUCY_TermStepper_Reset_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Write_Key_Frame_OFFSET;
static CFISH_INLINE void
LUCY_TermStepper_Write_Key_Frame(lucy_TermStepper* self, lucy_OutStream* outstream, cfish_Obj* value) {
    const LUCY_TermStepper_Write_Key_Frame_t method = (LUCY_TermStepper_Write_Key_Frame_t)cfish_obj_method(self, LUCY_TermStepper_Write_Key_Frame_OFFSET);
    method(self, outstream, value);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Write_Delta_OFFSET;
static CFISH_INLINE void
LUCY_TermStepper_Write_Delta(lucy_TermStepper* self, lucy_OutStream* outstream, cfish_Obj* value) {
    const LUCY_TermStepper_Write_Delta_t method = (LUCY_TermStepper_Write_Delta_t)cfish_obj_method(self, LUCY_TermStepper_Write_Delta_OFFSET);
    method(self, outstream, value);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Read_Key_Frame_OFFSET;
static CFISH_INLINE void
LUCY_TermStepper_Read_Key_Frame(lucy_TermStepper* self, lucy_InStream* instream) {
    const LUCY_TermStepper_Read_Key_Frame_t method = (LUCY_TermStepper_Read_Key_Frame_t)cfish_obj_method(self, LUCY_TermStepper_Read_Key_Frame_OFFSET);
    method(self, instream);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Read_Delta_OFFSET;
static CFISH_INLINE void
LUCY_TermStepper_Read_Delta(lucy_TermStepper* self, lucy_InStream* instream) {
    const LUCY_TermStepper_Read_Delta_t method = (LUCY_TermStepper_Read_Delta_t)cfish_obj_method(self, LUCY_TermStepper_Read_Delta_OFFSET);
    method(self, instream);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Read_Record_OFFSET;
static CFISH_INLINE void
LUCY_TermStepper_Read_Record(lucy_TermStepper* self, lucy_InStream* instream) {
    const LUCY_TermStepper_Read_Record_t method = (LUCY_TermStepper_Read_Record_t)cfish_obj_method(self, LUCY_TermStepper_Read_Record_OFFSET);
    method(self, instream);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Set_Value_OFFSET;
static CFISH_INLINE void
LUCY_TermStepper_Set_Value(lucy_TermStepper* self, cfish_Obj* value) {
    const LUCY_TermStepper_Set_Value_t method = (LUCY_TermStepper_Set_Value_t)cfish_obj_method(self, LUCY_TermStepper_Set_Value_OFFSET);
    method(self, value);
}

extern LUCY_VISIBLE uint32_t LUCY_TermStepper_Get_Value_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_TermStepper_Get_Value(lucy_TermStepper* self) {
    const LUCY_TermStepper_Get_Value_t method = (LUCY_TermStepper_Get_Value_t)cfish_obj_method(self, LUCY_TermStepper_Get_Value_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_TermStepper_Set_Value_OVERRIDE NULL
#define Lucy_TermStepper_Get_Value_OVERRIDE NULL
#else
void
Lucy_TermStepper_Set_Value_OVERRIDE(lucy_TermStepper* self, cfish_Obj* value);
cfish_Obj*
Lucy_TermStepper_Get_Value_OVERRIDE(lucy_TermStepper* self);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define TermStepper lucy_TermStepper
  #define TERMSTEPPER LUCY_TERMSTEPPER
  #define TermStepper_init lucy_TermStepper_init
  #define TermStepper_get_class lucy_TermStepper_get_class
  #define TermStepper_get_class_name lucy_TermStepper_get_class_name
  #define TermStepper_is_a lucy_TermStepper_is_a
  #define TermStepper_Set_Value_IMP LUCY_TermStepper_Set_Value_IMP
  #define TermStepper_Get_Value_IMP LUCY_TermStepper_Get_Value_IMP
  #define TermStepper_Destroy_IMP LUCY_TermStepper_Destroy_IMP
  #define TermStepper_To_Host LUCY_TermStepper_To_Host
  #define TermStepper_To_Host_t LUCY_TermStepper_To_Host_t
  #define TermStepper_Clone LUCY_TermStepper_Clone
  #define TermStepper_Clone_t LUCY_TermStepper_Clone_t
  #define TermStepper_Equals LUCY_TermStepper_Equals
  #define TermStepper_Equals_t LUCY_TermStepper_Equals_t
  #define TermStepper_Compare_To LUCY_TermStepper_Compare_To
  #define TermStepper_Compare_To_t LUCY_TermStepper_Compare_To_t
  #define TermStepper_Destroy LUCY_TermStepper_Destroy
  #define TermStepper_Destroy_t LUCY_TermStepper_Destroy_t
  #define TermStepper_To_String LUCY_TermStepper_To_String
  #define TermStepper_To_String_t LUCY_TermStepper_To_String_t
  #define TermStepper_Reset LUCY_TermStepper_Reset
  #define TermStepper_Reset_t LUCY_TermStepper_Reset_t
  #define TermStepper_Write_Key_Frame LUCY_TermStepper_Write_Key_Frame
  #define TermStepper_Write_Key_Frame_t LUCY_TermStepper_Write_Key_Frame_t
  #define TermStepper_Write_Delta LUCY_TermStepper_Write_Delta
  #define TermStepper_Write_Delta_t LUCY_TermStepper_Write_Delta_t
  #define TermStepper_Read_Key_Frame LUCY_TermStepper_Read_Key_Frame
  #define TermStepper_Read_Key_Frame_t LUCY_TermStepper_Read_Key_Frame_t
  #define TermStepper_Read_Delta LUCY_TermStepper_Read_Delta
  #define TermStepper_Read_Delta_t LUCY_TermStepper_Read_Delta_t
  #define TermStepper_Read_Record LUCY_TermStepper_Read_Record
  #define TermStepper_Read_Record_t LUCY_TermStepper_Read_Record_t
  #define TermStepper_Set_Value LUCY_TermStepper_Set_Value
  #define TermStepper_Set_Value_t LUCY_TermStepper_Set_Value_t
  #define TermStepper_Get_Value LUCY_TermStepper_Get_Value
  #define TermStepper_Get_Value_t LUCY_TermStepper_Get_Value_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_INDEX_TERMSTEPPER */




