/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_INDEX_INDEXMANAGER
#define H_LUCY_INDEX_INDEXMANAGER 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Clownfish\Obj.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_INDEXMANAGER
extern uint32_t lucy_IxManager_IVARS_OFFSET;
typedef struct lucy_IndexManagerIVARS lucy_IndexManagerIVARS;
static CFISH_INLINE lucy_IndexManagerIVARS*
lucy_IxManager_IVARS(lucy_IndexManager *self) {
   char *ptr = (char*)self + lucy_IxManager_IVARS_OFFSET;
   return (lucy_IndexManagerIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define IndexManagerIVARS lucy_IndexManagerIVARS
  #define IxManager_IVARS lucy_IxManager_IVARS
#endif

struct lucy_IndexManagerIVARS {
    lucy_Folder* folder;
    cfish_String* host;
    lucy_LockFactory* lock_factory;
    uint32_t write_lock_timeout;
    uint32_t write_lock_interval;
    uint32_t merge_lock_timeout;
    uint32_t merge_lock_interval;
    uint32_t deletion_lock_timeout;
    uint32_t deletion_lock_interval;
};

#endif /* C_LUCY_INDEXMANAGER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_IndexManager*
lucy_IxManager_new(cfish_String* host, lucy_LockFactory* lock_factory);

LUCY_VISIBLE lucy_IndexManager*
lucy_IxManager_init(lucy_IndexManager* self, cfish_String* host, lucy_LockFactory* lock_factory);

void
LUCY_IxManager_Destroy_IMP(lucy_IndexManager* self);

void
LUCY_IxManager_Set_Folder_IMP(lucy_IndexManager* self, lucy_Folder* folder);

lucy_Folder*
LUCY_IxManager_Get_Folder_IMP(lucy_IndexManager* self);

cfish_String*
LUCY_IxManager_Get_Host_IMP(lucy_IndexManager* self);

cfish_Vector*
LUCY_IxManager_Recycle_IMP(lucy_IndexManager* self, lucy_PolyReader* reader, lucy_DeletionsWriter* del_writer, int64_t cutoff, bool optimize);

uint32_t
LUCY_IxManager_Choose_Sparse_IMP(lucy_IndexManager* self, lucy_I32Array* doc_counts);

lucy_Lock*
LUCY_IxManager_Make_Write_Lock_IMP(lucy_IndexManager* self);

lucy_Lock*
LUCY_IxManager_Make_Deletion_Lock_IMP(lucy_IndexManager* self);

lucy_Lock*
LUCY_IxManager_Make_Merge_Lock_IMP(lucy_IndexManager* self);

void
LUCY_IxManager_Write_Merge_Data_IMP(lucy_IndexManager* self, int64_t cutoff);

cfish_Hash*
LUCY_IxManager_Read_Merge_Data_IMP(lucy_IndexManager* self);

bool
LUCY_IxManager_Remove_Merge_Data_IMP(lucy_IndexManager* self);

lucy_Lock*
LUCY_IxManager_Make_Snapshot_Read_Lock_IMP(lucy_IndexManager* self, cfish_String* filename);

int64_t
LUCY_IxManager_Highest_Seg_Num_IMP(lucy_IndexManager* self, lucy_Snapshot* snapshot);

cfish_String*
LUCY_IxManager_Make_Snapshot_Filename_IMP(lucy_IndexManager* self);

void
LUCY_IxManager_Set_Write_Lock_Timeout_IMP(lucy_IndexManager* self, uint32_t timeout);

uint32_t
LUCY_IxManager_Get_Write_Lock_Timeout_IMP(lucy_IndexManager* self);

void
LUCY_IxManager_Set_Write_Lock_Interval_IMP(lucy_IndexManager* self, uint32_t timeout);

uint32_t
LUCY_IxManager_Get_Write_Lock_Interval_IMP(lucy_IndexManager* self);

void
LUCY_IxManager_Set_Merge_Lock_Timeout_IMP(lucy_IndexManager* self, uint32_t timeout);

uint32_t
LUCY_IxManager_Get_Merge_Lock_Timeout_IMP(lucy_IndexManager* self);

void
LUCY_IxManager_Set_Merge_Lock_Interval_IMP(lucy_IndexManager* self, uint32_t timeout);

uint32_t
LUCY_IxManager_Get_Merge_Lock_Interval_IMP(lucy_IndexManager* self);

void
LUCY_IxManager_Set_Deletion_Lock_Timeout_IMP(lucy_IndexManager* self, uint32_t timeout);

uint32_t
LUCY_IxManager_Get_Deletion_Lock_Timeout_IMP(lucy_IndexManager* self);

void
LUCY_IxManager_Set_Deletion_Lock_Interval_IMP(lucy_IndexManager* self, uint32_t timeout);

uint32_t
LUCY_IxManager_Get_Deletion_Lock_Interval_IMP(lucy_IndexManager* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_IxManager_To_Host_t)(lucy_IndexManager* self, void* vcache);

typedef cfish_Obj*
(*LUCY_IxManager_Clone_t)(lucy_IndexManager* self);

typedef bool
(*LUCY_IxManager_Equals_t)(lucy_IndexManager* self, cfish_Obj* other);

typedef int32_t
(*LUCY_IxManager_Compare_To_t)(lucy_IndexManager* self, cfish_Obj* other);

typedef void
(*LUCY_IxManager_Destroy_t)(lucy_IndexManager* self);

typedef cfish_String*
(*LUCY_IxManager_To_String_t)(lucy_IndexManager* self);

typedef void
(*LUCY_IxManager_Set_Folder_t)(lucy_IndexManager* self, lucy_Folder* folder);

typedef lucy_Folder*
(*LUCY_IxManager_Get_Folder_t)(lucy_IndexManager* self);

typedef cfish_String*
(*LUCY_IxManager_Get_Host_t)(lucy_IndexManager* self);

typedef cfish_Vector*
(*LUCY_IxManager_Recycle_t)(lucy_IndexManager* self, lucy_PolyReader* reader, lucy_DeletionsWriter* del_writer, int64_t cutoff, bool optimize);

typedef uint32_t
(*LUCY_IxManager_Choose_Sparse_t)(lucy_IndexManager* self, lucy_I32Array* doc_counts);

typedef lucy_Lock*
(*LUCY_IxManager_Make_Write_Lock_t)(lucy_IndexManager* self);

typedef lucy_Lock*
(*LUCY_IxManager_Make_Deletion_Lock_t)(lucy_IndexManager* self);

typedef lucy_Lock*
(*LUCY_IxManager_Make_Merge_Lock_t)(lucy_IndexManager* self);

typedef void
(*LUCY_IxManager_Write_Merge_Data_t)(lucy_IndexManager* self, int64_t cutoff);

typedef cfish_Hash*
(*LUCY_IxManager_Read_Merge_Data_t)(lucy_IndexManager* self);

typedef bool
(*LUCY_IxManager_Remove_Merge_Data_t)(lucy_IndexManager* self);

typedef lucy_Lock*
(*LUCY_IxManager_Make_Snapshot_Read_Lock_t)(lucy_IndexManager* self, cfish_String* filename);

typedef int64_t
(*LUCY_IxManager_Highest_Seg_Num_t)(lucy_IndexManager* self, lucy_Snapshot* snapshot);

typedef cfish_String*
(*LUCY_IxManager_Make_Snapshot_Filename_t)(lucy_IndexManager* self);

typedef void
(*LUCY_IxManager_Set_Write_Lock_Timeout_t)(lucy_IndexManager* self, uint32_t timeout);

typedef uint32_t
(*LUCY_IxManager_Get_Write_Lock_Timeout_t)(lucy_IndexManager* self);

typedef void
(*LUCY_IxManager_Set_Write_Lock_Interval_t)(lucy_IndexManager* self, uint32_t timeout);

typedef uint32_t
(*LUCY_IxManager_Get_Write_Lock_Interval_t)(lucy_IndexManager* self);

typedef void
(*LUCY_IxManager_Set_Merge_Lock_Timeout_t)(lucy_IndexManager* self, uint32_t timeout);

typedef uint32_t
(*LUCY_IxManager_Get_Merge_Lock_Timeout_t)(lucy_IndexManager* self);

typedef void
(*LUCY_IxManager_Set_Merge_Lock_Interval_t)(lucy_IndexManager* self, uint32_t timeout);

typedef uint32_t
(*LUCY_IxManager_Get_Merge_Lock_Interval_t)(lucy_IndexManager* self);

typedef void
(*LUCY_IxManager_Set_Deletion_Lock_Timeout_t)(lucy_IndexManager* self, uint32_t timeout);

typedef uint32_t
(*LUCY_IxManager_Get_Deletion_Lock_Timeout_t)(lucy_IndexManager* self);

typedef void
(*LUCY_IxManager_Set_Deletion_Lock_Interval_t)(lucy_IndexManager* self, uint32_t timeout);

typedef uint32_t
(*LUCY_IxManager_Get_Deletion_Lock_Interval_t)(lucy_IndexManager* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_IxManager_get_class(lucy_IndexManager *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_IxManager_get_class_name(lucy_IndexManager *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_IxManager_is_a(lucy_IndexManager *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_IxManager_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_IxManager_To_Host(lucy_IndexManager* self, void* vcache) {
    const LUCY_IxManager_To_Host_t method = (LUCY_IxManager_To_Host_t)cfish_obj_method(self, LUCY_IxManager_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_IxManager_Clone(lucy_IndexManager* self) {
    const LUCY_IxManager_Clone_t method = (LUCY_IxManager_Clone_t)cfish_obj_method(self, LUCY_IxManager_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_IxManager_Equals(lucy_IndexManager* self, cfish_Obj* other) {
    const LUCY_IxManager_Equals_t method = (LUCY_IxManager_Equals_t)cfish_obj_method(self, LUCY_IxManager_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_IxManager_Compare_To(lucy_IndexManager* self, cfish_Obj* other) {
    const LUCY_IxManager_Compare_To_t method = (LUCY_IxManager_Compare_To_t)cfish_obj_method(self, LUCY_IxManager_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_IxManager_Destroy(lucy_IndexManager* self) {
    const LUCY_IxManager_Destroy_t method = (LUCY_IxManager_Destroy_t)cfish_obj_method(self, LUCY_IxManager_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_IxManager_To_String(lucy_IndexManager* self) {
    const LUCY_IxManager_To_String_t method = (LUCY_IxManager_To_String_t)cfish_obj_method(self, LUCY_IxManager_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Set_Folder_OFFSET;
static CFISH_INLINE void
LUCY_IxManager_Set_Folder(lucy_IndexManager* self, lucy_Folder* folder) {
    const LUCY_IxManager_Set_Folder_t method = (LUCY_IxManager_Set_Folder_t)cfish_obj_method(self, LUCY_IxManager_Set_Folder_OFFSET);
    method(self, folder);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Get_Folder_OFFSET;
static CFISH_INLINE lucy_Folder*
LUCY_IxManager_Get_Folder(lucy_IndexManager* self) {
    const LUCY_IxManager_Get_Folder_t method = (LUCY_IxManager_Get_Folder_t)cfish_obj_method(self, LUCY_IxManager_Get_Folder_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Get_Host_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_IxManager_Get_Host(lucy_IndexManager* self) {
    const LUCY_IxManager_Get_Host_t method = (LUCY_IxManager_Get_Host_t)cfish_obj_method(self, LUCY_IxManager_Get_Host_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Recycle_OFFSET;
static CFISH_INLINE cfish_Vector*
LUCY_IxManager_Recycle(lucy_IndexManager* self, lucy_PolyReader* reader, lucy_DeletionsWriter* del_writer, int64_t cutoff, bool optimize) {
    const LUCY_IxManager_Recycle_t method = (LUCY_IxManager_Recycle_t)cfish_obj_method(self, LUCY_IxManager_Recycle_OFFSET);
    return method(self, reader, del_writer, cutoff, optimize);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Choose_Sparse_OFFSET;
static CFISH_INLINE uint32_t
LUCY_IxManager_Choose_Sparse(lucy_IndexManager* self, lucy_I32Array* doc_counts) {
    const LUCY_IxManager_Choose_Sparse_t method = (LUCY_IxManager_Choose_Sparse_t)cfish_obj_method(self, LUCY_IxManager_Choose_Sparse_OFFSET);
    return method(self, doc_counts);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Make_Write_Lock_OFFSET;
static CFISH_INLINE lucy_Lock*
LUCY_IxManager_Make_Write_Lock(lucy_IndexManager* self) {
    const LUCY_IxManager_Make_Write_Lock_t method = (LUCY_IxManager_Make_Write_Lock_t)cfish_obj_method(self, LUCY_IxManager_Make_Write_Lock_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Make_Deletion_Lock_OFFSET;
static CFISH_INLINE lucy_Lock*
LUCY_IxManager_Make_Deletion_Lock(lucy_IndexManager* self) {
    const LUCY_IxManager_Make_Deletion_Lock_t method = (LUCY_IxManager_Make_Deletion_Lock_t)cfish_obj_method(self, LUCY_IxManager_Make_Deletion_Lock_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Make_Merge_Lock_OFFSET;
static CFISH_INLINE lucy_Lock*
LUCY_IxManager_Make_Merge_Lock(lucy_IndexManager* self) {
    const LUCY_IxManager_Make_Merge_Lock_t method = (LUCY_IxManager_Make_Merge_Lock_t)cfish_obj_method(self, LUCY_IxManager_Make_Merge_Lock_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Write_Merge_Data_OFFSET;
static CFISH_INLINE void
LUCY_IxManager_Write_Merge_Data(lucy_IndexManager* self, int64_t cutoff) {
    const LUCY_IxManager_Write_Merge_Data_t method = (LUCY_IxManager_Write_Merge_Data_t)cfish_obj_method(self, LUCY_IxManager_Write_Merge_Data_OFFSET);
    method(self, cutoff);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Read_Merge_Data_OFFSET;
static CFISH_INLINE cfish_Hash*
LUCY_IxManager_Read_Merge_Data(lucy_IndexManager* self) {
    const LUCY_IxManager_Read_Merge_Data_t method = (LUCY_IxManager_Read_Merge_Data_t)cfish_obj_method(self, LUCY_IxManager_Read_Merge_Data_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Remove_Merge_Data_OFFSET;
static CFISH_INLINE bool
LUCY_IxManager_Remove_Merge_Data(lucy_IndexManager* self) {
    const LUCY_IxManager_Remove_Merge_Data_t method = (LUCY_IxManager_Remove_Merge_Data_t)cfish_obj_method(self, LUCY_IxManager_Remove_Merge_Data_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Make_Snapshot_Read_Lock_OFFSET;
static CFISH_INLINE lucy_Lock*
LUCY_IxManager_Make_Snapshot_Read_Lock(lucy_IndexManager* self, cfish_String* filename) {
    const LUCY_IxManager_Make_Snapshot_Read_Lock_t method = (LUCY_IxManager_Make_Snapshot_Read_Lock_t)cfish_obj_method(self, LUCY_IxManager_Make_Snapshot_Read_Lock_OFFSET);
    return method(self, filename);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Highest_Seg_Num_OFFSET;
static CFISH_INLINE int64_t
LUCY_IxManager_Highest_Seg_Num(lucy_IndexManager* self, lucy_Snapshot* snapshot) {
    const LUCY_IxManager_Highest_Seg_Num_t method = (LUCY_IxManager_Highest_Seg_Num_t)cfish_obj_method(self, LUCY_IxManager_Highest_Seg_Num_OFFSET);
    return method(self, snapshot);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Make_Snapshot_Filename_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_IxManager_Make_Snapshot_Filename(lucy_IndexManager* self) {
    const LUCY_IxManager_Make_Snapshot_Filename_t method = (LUCY_IxManager_Make_Snapshot_Filename_t)cfish_obj_method(self, LUCY_IxManager_Make_Snapshot_Filename_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Set_Write_Lock_Timeout_OFFSET;
static CFISH_INLINE void
LUCY_IxManager_Set_Write_Lock_Timeout(lucy_IndexManager* self, uint32_t timeout) {
    const LUCY_IxManager_Set_Write_Lock_Timeout_t method = (LUCY_IxManager_Set_Write_Lock_Timeout_t)cfish_obj_method(self, LUCY_IxManager_Set_Write_Lock_Timeout_OFFSET);
    method(self, timeout);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Get_Write_Lock_Timeout_OFFSET;
static CFISH_INLINE uint32_t
LUCY_IxManager_Get_Write_Lock_Timeout(lucy_IndexManager* self) {
    const LUCY_IxManager_Get_Write_Lock_Timeout_t method = (LUCY_IxManager_Get_Write_Lock_Timeout_t)cfish_obj_method(self, LUCY_IxManager_Get_Write_Lock_Timeout_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Set_Write_Lock_Interval_OFFSET;
static CFISH_INLINE void
LUCY_IxManager_Set_Write_Lock_Interval(lucy_IndexManager* self, uint32_t timeout) {
    const LUCY_IxManager_Set_Write_Lock_Interval_t method = (LUCY_IxManager_Set_Write_Lock_Interval_t)cfish_obj_method(self, LUCY_IxManager_Set_Write_Lock_Interval_OFFSET);
    method(self, timeout);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Get_Write_Lock_Interval_OFFSET;
static CFISH_INLINE uint32_t
LUCY_IxManager_Get_Write_Lock_Interval(lucy_IndexManager* self) {
    const LUCY_IxManager_Get_Write_Lock_Interval_t method = (LUCY_IxManager_Get_Write_Lock_Interval_t)cfish_obj_method(self, LUCY_IxManager_Get_Write_Lock_Interval_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Set_Merge_Lock_Timeout_OFFSET;
static CFISH_INLINE void
LUCY_IxManager_Set_Merge_Lock_Timeout(lucy_IndexManager* self, uint32_t timeout) {
    const LUCY_IxManager_Set_Merge_Lock_Timeout_t method = (LUCY_IxManager_Set_Merge_Lock_Timeout_t)cfish_obj_method(self, LUCY_IxManager_Set_Merge_Lock_Timeout_OFFSET);
    method(self, timeout);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Get_Merge_Lock_Timeout_OFFSET;
static CFISH_INLINE uint32_t
LUCY_IxManager_Get_Merge_Lock_Timeout(lucy_IndexManager* self) {
    const LUCY_IxManager_Get_Merge_Lock_Timeout_t method = (LUCY_IxManager_Get_Merge_Lock_Timeout_t)cfish_obj_method(self, LUCY_IxManager_Get_Merge_Lock_Timeout_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Set_Merge_Lock_Interval_OFFSET;
static CFISH_INLINE void
LUCY_IxManager_Set_Merge_Lock_Interval(lucy_IndexManager* self, uint32_t timeout) {
    const LUCY_IxManager_Set_Merge_Lock_Interval_t method = (LUCY_IxManager_Set_Merge_Lock_Interval_t)cfish_obj_method(self, LUCY_IxManager_Set_Merge_Lock_Interval_OFFSET);
    method(self, timeout);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Get_Merge_Lock_Interval_OFFSET;
static CFISH_INLINE uint32_t
LUCY_IxManager_Get_Merge_Lock_Interval(lucy_IndexManager* self) {
    const LUCY_IxManager_Get_Merge_Lock_Interval_t method = (LUCY_IxManager_Get_Merge_Lock_Interval_t)cfish_obj_method(self, LUCY_IxManager_Get_Merge_Lock_Interval_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Set_Deletion_Lock_Timeout_OFFSET;
static CFISH_INLINE void
LUCY_IxManager_Set_Deletion_Lock_Timeout(lucy_IndexManager* self, uint32_t timeout) {
    const LUCY_IxManager_Set_Deletion_Lock_Timeout_t method = (LUCY_IxManager_Set_Deletion_Lock_Timeout_t)cfish_obj_method(self, LUCY_IxManager_Set_Deletion_Lock_Timeout_OFFSET);
    method(self, timeout);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Get_Deletion_Lock_Timeout_OFFSET;
static CFISH_INLINE uint32_t
LUCY_IxManager_Get_Deletion_Lock_Timeout(lucy_IndexManager* self) {
    const LUCY_IxManager_Get_Deletion_Lock_Timeout_t method = (LUCY_IxManager_Get_Deletion_Lock_Timeout_t)cfish_obj_method(self, LUCY_IxManager_Get_Deletion_Lock_Timeout_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Set_Deletion_Lock_Interval_OFFSET;
static CFISH_INLINE void
LUCY_IxManager_Set_Deletion_Lock_Interval(lucy_IndexManager* self, uint32_t timeout) {
    const LUCY_IxManager_Set_Deletion_Lock_Interval_t method = (LUCY_IxManager_Set_Deletion_Lock_Interval_t)cfish_obj_method(self, LUCY_IxManager_Set_Deletion_Lock_Interval_OFFSET);
    method(self, timeout);
}

extern LUCY_VISIBLE uint32_t LUCY_IxManager_Get_Deletion_Lock_Interval_OFFSET;
static CFISH_INLINE uint32_t
LUCY_IxManager_Get_Deletion_Lock_Interval(lucy_IndexManager* self) {
    const LUCY_IxManager_Get_Deletion_Lock_Interval_t method = (LUCY_IxManager_Get_Deletion_Lock_Interval_t)cfish_obj_method(self, LUCY_IxManager_Get_Deletion_Lock_Interval_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_IxManager_Set_Folder_OVERRIDE NULL
#define Lucy_IxManager_Get_Folder_OVERRIDE NULL
#define Lucy_IxManager_Get_Host_OVERRIDE NULL
#define Lucy_IxManager_Recycle_OVERRIDE NULL
#define Lucy_IxManager_Choose_Sparse_OVERRIDE NULL
#define Lucy_IxManager_Make_Write_Lock_OVERRIDE NULL
#define Lucy_IxManager_Make_Deletion_Lock_OVERRIDE NULL
#define Lucy_IxManager_Make_Merge_Lock_OVERRIDE NULL
#define Lucy_IxManager_Write_Merge_Data_OVERRIDE NULL
#define Lucy_IxManager_Read_Merge_Data_OVERRIDE NULL
#define Lucy_IxManager_Remove_Merge_Data_OVERRIDE NULL
#define Lucy_IxManager_Make_Snapshot_Read_Lock_OVERRIDE NULL
#define Lucy_IxManager_Highest_Seg_Num_OVERRIDE NULL
#define Lucy_IxManager_Make_Snapshot_Filename_OVERRIDE NULL
#define Lucy_IxManager_Set_Write_Lock_Timeout_OVERRIDE NULL
#define Lucy_IxManager_Get_Write_Lock_Timeout_OVERRIDE NULL
#define Lucy_IxManager_Set_Write_Lock_Interval_OVERRIDE NULL
#define Lucy_IxManager_Get_Write_Lock_Interval_OVERRIDE NULL
#define Lucy_IxManager_Set_Merge_Lock_Timeout_OVERRIDE NULL
#define Lucy_IxManager_Get_Merge_Lock_Timeout_OVERRIDE NULL
#define Lucy_IxManager_Set_Merge_Lock_Interval_OVERRIDE NULL
#define Lucy_IxManager_Get_Merge_Lock_Interval_OVERRIDE NULL
#define Lucy_IxManager_Set_Deletion_Lock_Timeout_OVERRIDE NULL
#define Lucy_IxManager_Get_Deletion_Lock_Timeout_OVERRIDE NULL
#define Lucy_IxManager_Set_Deletion_Lock_Interval_OVERRIDE NULL
#define Lucy_IxManager_Get_Deletion_Lock_Interval_OVERRIDE NULL
#else
void
Lucy_IxManager_Set_Folder_OVERRIDE(lucy_IndexManager* self, lucy_Folder* folder);
lucy_Folder*
Lucy_IxManager_Get_Folder_OVERRIDE(lucy_IndexManager* self);
cfish_String*
Lucy_IxManager_Get_Host_OVERRIDE(lucy_IndexManager* self);
cfish_Vector*
Lucy_IxManager_Recycle_OVERRIDE(lucy_IndexManager* self, lucy_PolyReader* reader, lucy_DeletionsWriter* del_writer, int64_t cutoff, bool optimize);
uint32_t
Lucy_IxManager_Choose_Sparse_OVERRIDE(lucy_IndexManager* self, lucy_I32Array* doc_counts);
lucy_Lock*
Lucy_IxManager_Make_Write_Lock_OVERRIDE(lucy_IndexManager* self);
lucy_Lock*
Lucy_IxManager_Make_Deletion_Lock_OVERRIDE(lucy_IndexManager* self);
lucy_Lock*
Lucy_IxManager_Make_Merge_Lock_OVERRIDE(lucy_IndexManager* self);
void
Lucy_IxManager_Write_Merge_Data_OVERRIDE(lucy_IndexManager* self, int64_t cutoff);
cfish_Hash*
Lucy_IxManager_Read_Merge_Data_OVERRIDE(lucy_IndexManager* self);
bool
Lucy_IxManager_Remove_Merge_Data_OVERRIDE(lucy_IndexManager* self);
lucy_Lock*
Lucy_IxManager_Make_Snapshot_Read_Lock_OVERRIDE(lucy_IndexManager* self, cfish_String* filename);
int64_t
Lucy_IxManager_Highest_Seg_Num_OVERRIDE(lucy_IndexManager* self, lucy_Snapshot* snapshot);
cfish_String*
Lucy_IxManager_Make_Snapshot_Filename_OVERRIDE(lucy_IndexManager* self);
void
Lucy_IxManager_Set_Write_Lock_Timeout_OVERRIDE(lucy_IndexManager* self, uint32_t timeout);
uint32_t
Lucy_IxManager_Get_Write_Lock_Timeout_OVERRIDE(lucy_IndexManager* self);
void
Lucy_IxManager_Set_Write_Lock_Interval_OVERRIDE(lucy_IndexManager* self, uint32_t timeout);
uint32_t
Lucy_IxManager_Get_Write_Lock_Interval_OVERRIDE(lucy_IndexManager* self);
void
Lucy_IxManager_Set_Merge_Lock_Timeout_OVERRIDE(lucy_IndexManager* self, uint32_t timeout);
uint32_t
Lucy_IxManager_Get_Merge_Lock_Timeout_OVERRIDE(lucy_IndexManager* self);
void
Lucy_IxManager_Set_Merge_Lock_Interval_OVERRIDE(lucy_IndexManager* self, uint32_t timeout);
uint32_t
Lucy_IxManager_Get_Merge_Lock_Interval_OVERRIDE(lucy_IndexManager* self);
void
Lucy_IxManager_Set_Deletion_Lock_Timeout_OVERRIDE(lucy_IndexManager* self, uint32_t timeout);
uint32_t
Lucy_IxManager_Get_Deletion_Lock_Timeout_OVERRIDE(lucy_IndexManager* self);
void
Lucy_IxManager_Set_Deletion_Lock_Interval_OVERRIDE(lucy_IndexManager* self, uint32_t timeout);
uint32_t
Lucy_IxManager_Get_Deletion_Lock_Interval_OVERRIDE(lucy_IndexManager* self);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define IndexManager lucy_IndexManager
  #define INDEXMANAGER LUCY_INDEXMANAGER
  #define IxManager_new lucy_IxManager_new
  #define IxManager_init lucy_IxManager_init
  #define IxManager_get_class lucy_IxManager_get_class
  #define IxManager_get_class_name lucy_IxManager_get_class_name
  #define IxManager_is_a lucy_IxManager_is_a
  #define IxManager_Destroy_IMP LUCY_IxManager_Destroy_IMP
  #define IxManager_Set_Folder_IMP LUCY_IxManager_Set_Folder_IMP
  #define IxManager_Get_Folder_IMP LUCY_IxManager_Get_Folder_IMP
  #define IxManager_Get_Host_IMP LUCY_IxManager_Get_Host_IMP
  #define IxManager_Recycle_IMP LUCY_IxManager_Recycle_IMP
  #define IxManager_Choose_Sparse_IMP LUCY_IxManager_Choose_Sparse_IMP
  #define IxManager_Make_Write_Lock_IMP LUCY_IxManager_Make_Write_Lock_IMP
  #define IxManager_Make_Deletion_Lock_IMP LUCY_IxManager_Make_Deletion_Lock_IMP
  #define IxManager_Make_Merge_Lock_IMP LUCY_IxManager_Make_Merge_Lock_IMP
  #define IxManager_Write_Merge_Data_IMP LUCY_IxManager_Write_Merge_Data_IMP
  #define IxManager_Read_Merge_Data_IMP LUCY_IxManager_Read_Merge_Data_IMP
  #define IxManager_Remove_Merge_Data_IMP LUCY_IxManager_Remove_Merge_Data_IMP
  #define IxManager_Make_Snapshot_Read_Lock_IMP LUCY_IxManager_Make_Snapshot_Read_Lock_IMP
  #define IxManager_Highest_Seg_Num_IMP LUCY_IxManager_Highest_Seg_Num_IMP
  #define IxManager_Make_Snapshot_Filename_IMP LUCY_IxManager_Make_Snapshot_Filename_IMP
  #define IxManager_Set_Write_Lock_Timeout_IMP LUCY_IxManager_Set_Write_Lock_Timeout_IMP
  #define IxManager_Get_Write_Lock_Timeout_IMP LUCY_IxManager_Get_Write_Lock_Timeout_IMP
  #define IxManager_Set_Write_Lock_Interval_IMP LUCY_IxManager_Set_Write_Lock_Interval_IMP
  #define IxManager_Get_Write_Lock_Interval_IMP LUCY_IxManager_Get_Write_Lock_Interval_IMP
  #define IxManager_Set_Merge_Lock_Timeout_IMP LUCY_IxManager_Set_Merge_Lock_Timeout_IMP
  #define IxManager_Get_Merge_Lock_Timeout_IMP LUCY_IxManager_Get_Merge_Lock_Timeout_IMP
  #define IxManager_Set_Merge_Lock_Interval_IMP LUCY_IxManager_Set_Merge_Lock_Interval_IMP
  #define IxManager_Get_Merge_Lock_Interval_IMP LUCY_IxManager_Get_Merge_Lock_Interval_IMP
  #define IxManager_Set_Deletion_Lock_Timeout_IMP LUCY_IxManager_Set_Deletion_Lock_Timeout_IMP
  #define IxManager_Get_Deletion_Lock_Timeout_IMP LUCY_IxManager_Get_Deletion_Lock_Timeout_IMP
  #define IxManager_Set_Deletion_Lock_Interval_IMP LUCY_IxManager_Set_Deletion_Lock_Interval_IMP
  #define IxManager_Get_Deletion_Lock_Interval_IMP LUCY_IxManager_Get_Deletion_Lock_Interval_IMP
  #define IxManager_To_Host LUCY_IxManager_To_Host
  #define IxManager_To_Host_t LUCY_IxManager_To_Host_t
  #define IxManager_Clone LUCY_IxManager_Clone
  #define IxManager_Clone_t LUCY_IxManager_Clone_t
  #define IxManager_Equals LUCY_IxManager_Equals
  #define IxManager_Equals_t LUCY_IxManager_Equals_t
  #define IxManager_Compare_To LUCY_IxManager_Compare_To
  #define IxManager_Compare_To_t LUCY_IxManager_Compare_To_t
  #define IxManager_Destroy LUCY_IxManager_Destroy
  #define IxManager_Destroy_t LUCY_IxManager_Destroy_t
  #define IxManager_To_String LUCY_IxManager_To_String
  #define IxManager_To_String_t LUCY_IxManager_To_String_t
  #define IxManager_Set_Folder LUCY_IxManager_Set_Folder
  #define IxManager_Set_Folder_t LUCY_IxManager_Set_Folder_t
  #define IxManager_Get_Folder LUCY_IxManager_Get_Folder
  #define IxManager_Get_Folder_t LUCY_IxManager_Get_Folder_t
  #define IxManager_Get_Host LUCY_IxManager_Get_Host
  #define IxManager_Get_Host_t LUCY_IxManager_Get_Host_t
  #define IxManager_Recycle LUCY_IxManager_Recycle
  #define IxManager_Recycle_t LUCY_IxManager_Recycle_t
  #define IxManager_Choose_Sparse LUCY_IxManager_Choose_Sparse
  #define IxManager_Choose_Sparse_t LUCY_IxManager_Choose_Sparse_t
  #define IxManager_Make_Write_Lock LUCY_IxManager_Make_Write_Lock
  #define IxManager_Make_Write_Lock_t LUCY_IxManager_Make_Write_Lock_t
  #define IxManager_Make_Deletion_Lock LUCY_IxManager_Make_Deletion_Lock
  #define IxManager_Make_Deletion_Lock_t LUCY_IxManager_Make_Deletion_Lock_t
  #define IxManager_Make_Merge_Lock LUCY_IxManager_Make_Merge_Lock
  #define IxManager_Make_Merge_Lock_t LUCY_IxManager_Make_Merge_Lock_t
  #define IxManager_Write_Merge_Data LUCY_IxManager_Write_Merge_Data
  #define IxManager_Write_Merge_Data_t LUCY_IxManager_Write_Merge_Data_t
  #define IxManager_Read_Merge_Data LUCY_IxManager_Read_Merge_Data
  #define IxManager_Read_Merge_Data_t LUCY_IxManager_Read_Merge_Data_t
  #define IxManager_Remove_Merge_Data LUCY_IxManager_Remove_Merge_Data
  #define IxManager_Remove_Merge_Data_t LUCY_IxManager_Remove_Merge_Data_t
  #define IxManager_Make_Snapshot_Read_Lock LUCY_IxManager_Make_Snapshot_Read_Lock
  #define IxManager_Make_Snapshot_Read_Lock_t LUCY_IxManager_Make_Snapshot_Read_Lock_t
  #define IxManager_Highest_Seg_Num LUCY_IxManager_Highest_Seg_Num
  #define IxManager_Highest_Seg_Num_t LUCY_IxManager_Highest_Seg_Num_t
  #define IxManager_Make_Snapshot_Filename LUCY_IxManager_Make_Snapshot_Filename
  #define IxManager_Make_Snapshot_Filename_t LUCY_IxManager_Make_Snapshot_Filename_t
  #define IxManager_Set_Write_Lock_Timeout LUCY_IxManager_Set_Write_Lock_Timeout
  #define IxManager_Set_Write_Lock_Timeout_t LUCY_IxManager_Set_Write_Lock_Timeout_t
  #define IxManager_Get_Write_Lock_Timeout LUCY_IxManager_Get_Write_Lock_Timeout
  #define IxManager_Get_Write_Lock_Timeout_t LUCY_IxManager_Get_Write_Lock_Timeout_t
  #define IxManager_Set_Write_Lock_Interval LUCY_IxManager_Set_Write_Lock_Interval
  #define IxManager_Set_Write_Lock_Interval_t LUCY_IxManager_Set_Write_Lock_Interval_t
  #define IxManager_Get_Write_Lock_Interval LUCY_IxManager_Get_Write_Lock_Interval
  #define IxManager_Get_Write_Lock_Interval_t LUCY_IxManager_Get_Write_Lock_Interval_t
  #define IxManager_Set_Merge_Lock_Timeout LUCY_IxManager_Set_Merge_Lock_Timeout
  #define IxManager_Set_Merge_Lock_Timeout_t LUCY_IxManager_Set_Merge_Lock_Timeout_t
  #define IxManager_Get_Merge_Lock_Timeout LUCY_IxManager_Get_Merge_Lock_Timeout
  #define IxManager_Get_Merge_Lock_Timeout_t LUCY_IxManager_Get_Merge_Lock_Timeout_t
  #define IxManager_Set_Merge_Lock_Interval LUCY_IxManager_Set_Merge_Lock_Interval
  #define IxManager_Set_Merge_Lock_Interval_t LUCY_IxManager_Set_Merge_Lock_Interval_t
  #define IxManager_Get_Merge_Lock_Interval LUCY_IxManager_Get_Merge_Lock_Interval
  #define IxManager_Get_Merge_Lock_Interval_t LUCY_IxManager_Get_Merge_Lock_Interval_t
  #define IxManager_Set_Deletion_Lock_Timeout LUCY_IxManager_Set_Deletion_Lock_Timeout
  #define IxManager_Set_Deletion_Lock_Timeout_t LUCY_IxManager_Set_Deletion_Lock_Timeout_t
  #define IxManager_Get_Deletion_Lock_Timeout LUCY_IxManager_Get_Deletion_Lock_Timeout
  #define IxManager_Get_Deletion_Lock_Timeout_t LUCY_IxManager_Get_Deletion_Lock_Timeout_t
  #define IxManager_Set_Deletion_Lock_Interval LUCY_IxManager_Set_Deletion_Lock_Interval
  #define IxManager_Set_Deletion_Lock_Interval_t LUCY_IxManager_Set_Deletion_Lock_Interval_t
  #define IxManager_Get_Deletion_Lock_Interval LUCY_IxManager_Get_Deletion_Lock_Interval
  #define IxManager_Get_Deletion_Lock_Interval_t LUCY_IxManager_Get_Deletion_Lock_Interval_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_INDEX_INDEXMANAGER */




