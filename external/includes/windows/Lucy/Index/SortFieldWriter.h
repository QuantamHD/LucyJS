/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_INDEX_SORTFIELDWRITER
#define H_LUCY_INDEX_SORTFIELDWRITER 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Lucy\Util\SortExternal.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_SORTFIELDWRITER
extern uint32_t lucy_SortFieldWriter_IVARS_OFFSET;
typedef struct lucy_SortFieldWriterIVARS lucy_SortFieldWriterIVARS;
static CFISH_INLINE lucy_SortFieldWriterIVARS*
lucy_SortFieldWriter_IVARS(lucy_SortFieldWriter *self) {
   char *ptr = (char*)self + lucy_SortFieldWriter_IVARS_OFFSET;
   return (lucy_SortFieldWriterIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define SortFieldWriterIVARS lucy_SortFieldWriterIVARS
  #define SortFieldWriter_IVARS lucy_SortFieldWriter_IVARS
#endif

struct lucy_SortFieldWriterIVARS {
    cfish_Obj** buffer;
    uint32_t buf_cap;
    uint32_t buf_max;
    uint32_t buf_tick;
    cfish_Obj** scratch;
    uint32_t scratch_cap;
    cfish_Vector* runs;
    cfish_Obj*** slice_starts;
    uint32_t* slice_sizes;
    uint32_t mem_thresh;
    bool flipped;
    cfish_String* field;
    lucy_Schema* schema;
    lucy_Snapshot* snapshot;
    lucy_Segment* segment;
    lucy_PolyReader* polyreader;
    lucy_FieldType* type;
    lucy_I32Array* doc_map;
    lucy_Counter* counter;
    int32_t field_num;
    int32_t null_ord;
    size_t mem_per_entry;
    int8_t prim_id;
    int32_t count;
    lucy_OutStream* temp_ord_out;
    lucy_OutStream* temp_ix_out;
    lucy_OutStream* temp_dat_out;
    lucy_InStream* ord_in;
    lucy_InStream* ix_in;
    lucy_InStream* dat_in;
    lucy_SortCache* sort_cache;
    int64_t ord_start;
    int64_t ord_end;
    int64_t ix_start;
    int64_t ix_end;
    int64_t dat_start;
    int64_t dat_end;
    int32_t run_cardinality;
    int32_t run_max;
    bool var_width;
    int32_t* sorted_ids;
    int32_t run_tick;
    int32_t ord_width;
};

#endif /* C_LUCY_SORTFIELDWRITER */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_SortFieldWriter*
lucy_SortFieldWriter_new(lucy_Schema* schema, lucy_Snapshot* snapshot, lucy_Segment* segment, lucy_PolyReader* polyreader, cfish_String* field, lucy_Counter* counter, uint32_t mem_thresh, lucy_OutStream* temp_ord_out, lucy_OutStream* temp_ix_out, lucy_OutStream* temp_dat_out);

LUCY_VISIBLE lucy_SortFieldWriter*
lucy_SortFieldWriter_init(lucy_SortFieldWriter* self, lucy_Schema* schema, lucy_Snapshot* snapshot, lucy_Segment* segment, lucy_PolyReader* polyreader, cfish_String* field, lucy_Counter* counter, uint32_t mem_thresh, lucy_OutStream* temp_ord_out, lucy_OutStream* temp_ix_out, lucy_OutStream* temp_dat_out);

void
LUCY_SortFieldWriter_Add_IMP(lucy_SortFieldWriter* self, int32_t doc_id, cfish_Obj* value);

void
LUCY_SortFieldWriter_Add_Segment_IMP(lucy_SortFieldWriter* self, lucy_SegReader* reader, lucy_I32Array* doc_map, lucy_SortCache* sort_cache);

void
LUCY_SortFieldWriter_Flush_IMP(lucy_SortFieldWriter* self);

void
LUCY_SortFieldWriter_Flip_IMP(lucy_SortFieldWriter* self);

uint32_t
LUCY_SortFieldWriter_Refill_IMP(lucy_SortFieldWriter* self);

int32_t
LUCY_SortFieldWriter_Finish_IMP(lucy_SortFieldWriter* self);

int
LUCY_SortFieldWriter_Compare_IMP(lucy_SortFieldWriter* self, cfish_Obj** ptr_a, cfish_Obj** ptr_b);

int32_t
LUCY_SortFieldWriter_Get_Null_Ord_IMP(lucy_SortFieldWriter* self);

int32_t
LUCY_SortFieldWriter_Get_Ord_Width_IMP(lucy_SortFieldWriter* self);

void
LUCY_SortFieldWriter_Destroy_IMP(lucy_SortFieldWriter* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_SortFieldWriter_To_Host_t)(lucy_SortFieldWriter* self, void* vcache);

typedef cfish_Obj*
(*LUCY_SortFieldWriter_Clone_t)(lucy_SortFieldWriter* self);

typedef bool
(*LUCY_SortFieldWriter_Equals_t)(lucy_SortFieldWriter* self, cfish_Obj* other);

typedef int32_t
(*LUCY_SortFieldWriter_Compare_To_t)(lucy_SortFieldWriter* self, cfish_Obj* other);

typedef void
(*LUCY_SortFieldWriter_Destroy_t)(lucy_SortFieldWriter* self);

typedef cfish_String*
(*LUCY_SortFieldWriter_To_String_t)(lucy_SortFieldWriter* self);

typedef int
(*LUCY_SortFieldWriter_Compare_t)(lucy_SortFieldWriter* self, cfish_Obj** ptr_a, cfish_Obj** ptr_b);

typedef void
(*LUCY_SortFieldWriter_Flush_t)(lucy_SortFieldWriter* self);

typedef void
(*LUCY_SortFieldWriter_Feed_t)(lucy_SortFieldWriter* self, cfish_Obj* item);

typedef void
(*LUCY_SortFieldWriter_Flip_t)(lucy_SortFieldWriter* self);

typedef cfish_Obj*
(*LUCY_SortFieldWriter_Fetch_t)(lucy_SortFieldWriter* self);

typedef cfish_Obj*
(*LUCY_SortFieldWriter_Peek_t)(lucy_SortFieldWriter* self);

typedef void
(*LUCY_SortFieldWriter_Add_Run_t)(lucy_SortFieldWriter* self, lucy_SortExternal* run);

typedef void
(*LUCY_SortFieldWriter_Shrink_t)(lucy_SortFieldWriter* self);

typedef uint32_t
(*LUCY_SortFieldWriter_Refill_t)(lucy_SortFieldWriter* self);

typedef void
(*LUCY_SortFieldWriter_Sort_Buffer_t)(lucy_SortFieldWriter* self);

typedef void
(*LUCY_SortFieldWriter_Clear_Buffer_t)(lucy_SortFieldWriter* self);

typedef uint32_t
(*LUCY_SortFieldWriter_Buffer_Count_t)(lucy_SortFieldWriter* self);

typedef void
(*LUCY_SortFieldWriter_Grow_Buffer_t)(lucy_SortFieldWriter* self, uint32_t cap);

typedef void
(*LUCY_SortFieldWriter_Set_Mem_Thresh_t)(lucy_SortFieldWriter* self, uint32_t mem_thresh);

typedef void
(*LUCY_SortFieldWriter_Add_t)(lucy_SortFieldWriter* self, int32_t doc_id, cfish_Obj* value);

typedef void
(*LUCY_SortFieldWriter_Add_Segment_t)(lucy_SortFieldWriter* self, lucy_SegReader* reader, lucy_I32Array* doc_map, lucy_SortCache* sort_cache);

typedef int32_t
(*LUCY_SortFieldWriter_Finish_t)(lucy_SortFieldWriter* self);

typedef int32_t
(*LUCY_SortFieldWriter_Get_Null_Ord_t)(lucy_SortFieldWriter* self);

typedef int32_t
(*LUCY_SortFieldWriter_Get_Ord_Width_t)(lucy_SortFieldWriter* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_SortFieldWriter_get_class(lucy_SortFieldWriter *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_SortFieldWriter_get_class_name(lucy_SortFieldWriter *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_SortFieldWriter_is_a(lucy_SortFieldWriter *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_SortFieldWriter_To_Host(lucy_SortFieldWriter* self, void* vcache) {
    const LUCY_SortFieldWriter_To_Host_t method = (LUCY_SortFieldWriter_To_Host_t)cfish_obj_method(self, LUCY_SortFieldWriter_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_SortFieldWriter_Clone(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Clone_t method = (LUCY_SortFieldWriter_Clone_t)cfish_obj_method(self, LUCY_SortFieldWriter_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_SortFieldWriter_Equals(lucy_SortFieldWriter* self, cfish_Obj* other) {
    const LUCY_SortFieldWriter_Equals_t method = (LUCY_SortFieldWriter_Equals_t)cfish_obj_method(self, LUCY_SortFieldWriter_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_SortFieldWriter_Compare_To(lucy_SortFieldWriter* self, cfish_Obj* other) {
    const LUCY_SortFieldWriter_Compare_To_t method = (LUCY_SortFieldWriter_Compare_To_t)cfish_obj_method(self, LUCY_SortFieldWriter_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Destroy(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Destroy_t method = (LUCY_SortFieldWriter_Destroy_t)cfish_obj_method(self, LUCY_SortFieldWriter_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_SortFieldWriter_To_String(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_To_String_t method = (LUCY_SortFieldWriter_To_String_t)cfish_obj_method(self, LUCY_SortFieldWriter_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Compare_OFFSET;
static CFISH_INLINE int
LUCY_SortFieldWriter_Compare(lucy_SortFieldWriter* self, cfish_Obj** ptr_a, cfish_Obj** ptr_b) {
    const LUCY_SortFieldWriter_Compare_t method = (LUCY_SortFieldWriter_Compare_t)cfish_obj_method(self, LUCY_SortFieldWriter_Compare_OFFSET);
    return method(self, ptr_a, ptr_b);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Flush_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Flush(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Flush_t method = (LUCY_SortFieldWriter_Flush_t)cfish_obj_method(self, LUCY_SortFieldWriter_Flush_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Feed_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Feed(lucy_SortFieldWriter* self, cfish_Obj* item) {
    const LUCY_SortFieldWriter_Feed_t method = (LUCY_SortFieldWriter_Feed_t)cfish_obj_method(self, LUCY_SortFieldWriter_Feed_OFFSET);
    method(self, item);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Flip_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Flip(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Flip_t method = (LUCY_SortFieldWriter_Flip_t)cfish_obj_method(self, LUCY_SortFieldWriter_Flip_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Fetch_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_SortFieldWriter_Fetch(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Fetch_t method = (LUCY_SortFieldWriter_Fetch_t)cfish_obj_method(self, LUCY_SortFieldWriter_Fetch_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Peek_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_SortFieldWriter_Peek(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Peek_t method = (LUCY_SortFieldWriter_Peek_t)cfish_obj_method(self, LUCY_SortFieldWriter_Peek_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Add_Run_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Add_Run(lucy_SortFieldWriter* self, lucy_SortExternal* run) {
    const LUCY_SortFieldWriter_Add_Run_t method = (LUCY_SortFieldWriter_Add_Run_t)cfish_obj_method(self, LUCY_SortFieldWriter_Add_Run_OFFSET);
    method(self, run);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Shrink_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Shrink(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Shrink_t method = (LUCY_SortFieldWriter_Shrink_t)cfish_obj_method(self, LUCY_SortFieldWriter_Shrink_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Refill_OFFSET;
static CFISH_INLINE uint32_t
LUCY_SortFieldWriter_Refill(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Refill_t method = (LUCY_SortFieldWriter_Refill_t)cfish_obj_method(self, LUCY_SortFieldWriter_Refill_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Sort_Buffer_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Sort_Buffer(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Sort_Buffer_t method = (LUCY_SortFieldWriter_Sort_Buffer_t)cfish_obj_method(self, LUCY_SortFieldWriter_Sort_Buffer_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Clear_Buffer_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Clear_Buffer(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Clear_Buffer_t method = (LUCY_SortFieldWriter_Clear_Buffer_t)cfish_obj_method(self, LUCY_SortFieldWriter_Clear_Buffer_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Buffer_Count_OFFSET;
static CFISH_INLINE uint32_t
LUCY_SortFieldWriter_Buffer_Count(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Buffer_Count_t method = (LUCY_SortFieldWriter_Buffer_Count_t)cfish_obj_method(self, LUCY_SortFieldWriter_Buffer_Count_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Grow_Buffer_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Grow_Buffer(lucy_SortFieldWriter* self, uint32_t cap) {
    const LUCY_SortFieldWriter_Grow_Buffer_t method = (LUCY_SortFieldWriter_Grow_Buffer_t)cfish_obj_method(self, LUCY_SortFieldWriter_Grow_Buffer_OFFSET);
    method(self, cap);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Set_Mem_Thresh_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Set_Mem_Thresh(lucy_SortFieldWriter* self, uint32_t mem_thresh) {
    const LUCY_SortFieldWriter_Set_Mem_Thresh_t method = (LUCY_SortFieldWriter_Set_Mem_Thresh_t)cfish_obj_method(self, LUCY_SortFieldWriter_Set_Mem_Thresh_OFFSET);
    method(self, mem_thresh);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Add_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Add(lucy_SortFieldWriter* self, int32_t doc_id, cfish_Obj* value) {
    const LUCY_SortFieldWriter_Add_t method = (LUCY_SortFieldWriter_Add_t)cfish_obj_method(self, LUCY_SortFieldWriter_Add_OFFSET);
    method(self, doc_id, value);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Add_Segment_OFFSET;
static CFISH_INLINE void
LUCY_SortFieldWriter_Add_Segment(lucy_SortFieldWriter* self, lucy_SegReader* reader, lucy_I32Array* doc_map, lucy_SortCache* sort_cache) {
    const LUCY_SortFieldWriter_Add_Segment_t method = (LUCY_SortFieldWriter_Add_Segment_t)cfish_obj_method(self, LUCY_SortFieldWriter_Add_Segment_OFFSET);
    method(self, reader, doc_map, sort_cache);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Finish_OFFSET;
static CFISH_INLINE int32_t
LUCY_SortFieldWriter_Finish(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Finish_t method = (LUCY_SortFieldWriter_Finish_t)cfish_obj_method(self, LUCY_SortFieldWriter_Finish_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Get_Null_Ord_OFFSET;
static CFISH_INLINE int32_t
LUCY_SortFieldWriter_Get_Null_Ord(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Get_Null_Ord_t method = (LUCY_SortFieldWriter_Get_Null_Ord_t)cfish_obj_method(self, LUCY_SortFieldWriter_Get_Null_Ord_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SortFieldWriter_Get_Ord_Width_OFFSET;
static CFISH_INLINE int32_t
LUCY_SortFieldWriter_Get_Ord_Width(lucy_SortFieldWriter* self) {
    const LUCY_SortFieldWriter_Get_Ord_Width_t method = (LUCY_SortFieldWriter_Get_Ord_Width_t)cfish_obj_method(self, LUCY_SortFieldWriter_Get_Ord_Width_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#define Lucy_SortFieldWriter_Add_OVERRIDE NULL
#define Lucy_SortFieldWriter_Add_Segment_OVERRIDE NULL
#define Lucy_SortFieldWriter_Finish_OVERRIDE NULL
#define Lucy_SortFieldWriter_Get_Null_Ord_OVERRIDE NULL
#define Lucy_SortFieldWriter_Get_Ord_Width_OVERRIDE NULL
#else
void
Lucy_SortFieldWriter_Add_OVERRIDE(lucy_SortFieldWriter* self, int32_t doc_id, cfish_Obj* value);
void
Lucy_SortFieldWriter_Add_Segment_OVERRIDE(lucy_SortFieldWriter* self, lucy_SegReader* reader, lucy_I32Array* doc_map, lucy_SortCache* sort_cache);
int32_t
Lucy_SortFieldWriter_Finish_OVERRIDE(lucy_SortFieldWriter* self);
int32_t
Lucy_SortFieldWriter_Get_Null_Ord_OVERRIDE(lucy_SortFieldWriter* self);
int32_t
Lucy_SortFieldWriter_Get_Ord_Width_OVERRIDE(lucy_SortFieldWriter* self);
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define SortFieldWriter lucy_SortFieldWriter
  #define SORTFIELDWRITER LUCY_SORTFIELDWRITER
  #define SortFieldWriter_new lucy_SortFieldWriter_new
  #define SortFieldWriter_init lucy_SortFieldWriter_init
  #define SortFieldWriter_get_class lucy_SortFieldWriter_get_class
  #define SortFieldWriter_get_class_name lucy_SortFieldWriter_get_class_name
  #define SortFieldWriter_is_a lucy_SortFieldWriter_is_a
  #define SortFieldWriter_Add_IMP LUCY_SortFieldWriter_Add_IMP
  #define SortFieldWriter_Add_Segment_IMP LUCY_SortFieldWriter_Add_Segment_IMP
  #define SortFieldWriter_Flush_IMP LUCY_SortFieldWriter_Flush_IMP
  #define SortFieldWriter_Flip_IMP LUCY_SortFieldWriter_Flip_IMP
  #define SortFieldWriter_Refill_IMP LUCY_SortFieldWriter_Refill_IMP
  #define SortFieldWriter_Finish_IMP LUCY_SortFieldWriter_Finish_IMP
  #define SortFieldWriter_Compare_IMP LUCY_SortFieldWriter_Compare_IMP
  #define SortFieldWriter_Get_Null_Ord_IMP LUCY_SortFieldWriter_Get_Null_Ord_IMP
  #define SortFieldWriter_Get_Ord_Width_IMP LUCY_SortFieldWriter_Get_Ord_Width_IMP
  #define SortFieldWriter_Destroy_IMP LUCY_SortFieldWriter_Destroy_IMP
  #define SortFieldWriter_To_Host LUCY_SortFieldWriter_To_Host
  #define SortFieldWriter_To_Host_t LUCY_SortFieldWriter_To_Host_t
  #define SortFieldWriter_Clone LUCY_SortFieldWriter_Clone
  #define SortFieldWriter_Clone_t LUCY_SortFieldWriter_Clone_t
  #define SortFieldWriter_Equals LUCY_SortFieldWriter_Equals
  #define SortFieldWriter_Equals_t LUCY_SortFieldWriter_Equals_t
  #define SortFieldWriter_Compare_To LUCY_SortFieldWriter_Compare_To
  #define SortFieldWriter_Compare_To_t LUCY_SortFieldWriter_Compare_To_t
  #define SortFieldWriter_Destroy LUCY_SortFieldWriter_Destroy
  #define SortFieldWriter_Destroy_t LUCY_SortFieldWriter_Destroy_t
  #define SortFieldWriter_To_String LUCY_SortFieldWriter_To_String
  #define SortFieldWriter_To_String_t LUCY_SortFieldWriter_To_String_t
  #define SortFieldWriter_Compare LUCY_SortFieldWriter_Compare
  #define SortFieldWriter_Compare_t LUCY_SortFieldWriter_Compare_t
  #define SortFieldWriter_Flush LUCY_SortFieldWriter_Flush
  #define SortFieldWriter_Flush_t LUCY_SortFieldWriter_Flush_t
  #define SortFieldWriter_Feed LUCY_SortFieldWriter_Feed
  #define SortFieldWriter_Feed_t LUCY_SortFieldWriter_Feed_t
  #define SortFieldWriter_Flip LUCY_SortFieldWriter_Flip
  #define SortFieldWriter_Flip_t LUCY_SortFieldWriter_Flip_t
  #define SortFieldWriter_Fetch LUCY_SortFieldWriter_Fetch
  #define SortFieldWriter_Fetch_t LUCY_SortFieldWriter_Fetch_t
  #define SortFieldWriter_Peek LUCY_SortFieldWriter_Peek
  #define SortFieldWriter_Peek_t LUCY_SortFieldWriter_Peek_t
  #define SortFieldWriter_Add_Run LUCY_SortFieldWriter_Add_Run
  #define SortFieldWriter_Add_Run_t LUCY_SortFieldWriter_Add_Run_t
  #define SortFieldWriter_Shrink LUCY_SortFieldWriter_Shrink
  #define SortFieldWriter_Shrink_t LUCY_SortFieldWriter_Shrink_t
  #define SortFieldWriter_Refill LUCY_SortFieldWriter_Refill
  #define SortFieldWriter_Refill_t LUCY_SortFieldWriter_Refill_t
  #define SortFieldWriter_Sort_Buffer LUCY_SortFieldWriter_Sort_Buffer
  #define SortFieldWriter_Sort_Buffer_t LUCY_SortFieldWriter_Sort_Buffer_t
  #define SortFieldWriter_Clear_Buffer LUCY_SortFieldWriter_Clear_Buffer
  #define SortFieldWriter_Clear_Buffer_t LUCY_SortFieldWriter_Clear_Buffer_t
  #define SortFieldWriter_Buffer_Count LUCY_SortFieldWriter_Buffer_Count
  #define SortFieldWriter_Buffer_Count_t LUCY_SortFieldWriter_Buffer_Count_t
  #define SortFieldWriter_Grow_Buffer LUCY_SortFieldWriter_Grow_Buffer
  #define SortFieldWriter_Grow_Buffer_t LUCY_SortFieldWriter_Grow_Buffer_t
  #define SortFieldWriter_Set_Mem_Thresh LUCY_SortFieldWriter_Set_Mem_Thresh
  #define SortFieldWriter_Set_Mem_Thresh_t LUCY_SortFieldWriter_Set_Mem_Thresh_t
  #define SortFieldWriter_Add LUCY_SortFieldWriter_Add
  #define SortFieldWriter_Add_t LUCY_SortFieldWriter_Add_t
  #define SortFieldWriter_Add_Segment LUCY_SortFieldWriter_Add_Segment
  #define SortFieldWriter_Add_Segment_t LUCY_SortFieldWriter_Add_Segment_t
  #define SortFieldWriter_Finish LUCY_SortFieldWriter_Finish
  #define SortFieldWriter_Finish_t LUCY_SortFieldWriter_Finish_t
  #define SortFieldWriter_Get_Null_Ord LUCY_SortFieldWriter_Get_Null_Ord
  #define SortFieldWriter_Get_Null_Ord_t LUCY_SortFieldWriter_Get_Null_Ord_t
  #define SortFieldWriter_Get_Ord_Width LUCY_SortFieldWriter_Get_Ord_Width
  #define SortFieldWriter_Get_Ord_Width_t LUCY_SortFieldWriter_Get_Ord_Width_t
#endif /* LUCY_USE_SHORT_NAMES */



/* Include the header for this class's parent. 
 */

#include "Clownfish\Obj.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_SFWRITERELEM
extern uint32_t lucy_SFWriterElem_IVARS_OFFSET;
typedef struct lucy_SFWriterElemIVARS lucy_SFWriterElemIVARS;
static CFISH_INLINE lucy_SFWriterElemIVARS*
lucy_SFWriterElem_IVARS(lucy_SFWriterElem *self) {
   char *ptr = (char*)self + lucy_SFWriterElem_IVARS_OFFSET;
   return (lucy_SFWriterElemIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define SFWriterElemIVARS lucy_SFWriterElemIVARS
  #define SFWriterElem_IVARS lucy_SFWriterElem_IVARS
#endif

struct lucy_SFWriterElemIVARS {
    int32_t doc_id;
    cfish_Obj* value;
};

#endif /* C_LUCY_SFWRITERELEM */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

void
LUCY_SFWriterElem_Destroy_IMP(lucy_SFWriterElem* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_SFWriterElem_To_Host_t)(lucy_SFWriterElem* self, void* vcache);

typedef cfish_Obj*
(*LUCY_SFWriterElem_Clone_t)(lucy_SFWriterElem* self);

typedef bool
(*LUCY_SFWriterElem_Equals_t)(lucy_SFWriterElem* self, cfish_Obj* other);

typedef int32_t
(*LUCY_SFWriterElem_Compare_To_t)(lucy_SFWriterElem* self, cfish_Obj* other);

typedef void
(*LUCY_SFWriterElem_Destroy_t)(lucy_SFWriterElem* self);

typedef cfish_String*
(*LUCY_SFWriterElem_To_String_t)(lucy_SFWriterElem* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_SFWriterElem_get_class(lucy_SFWriterElem *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_SFWriterElem_get_class_name(lucy_SFWriterElem *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_SFWriterElem_is_a(lucy_SFWriterElem *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_SFWriterElem_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_SFWriterElem_To_Host(lucy_SFWriterElem* self, void* vcache) {
    const LUCY_SFWriterElem_To_Host_t method = (LUCY_SFWriterElem_To_Host_t)cfish_obj_method(self, LUCY_SFWriterElem_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_SFWriterElem_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_SFWriterElem_Clone(lucy_SFWriterElem* self) {
    const LUCY_SFWriterElem_Clone_t method = (LUCY_SFWriterElem_Clone_t)cfish_obj_method(self, LUCY_SFWriterElem_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SFWriterElem_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_SFWriterElem_Equals(lucy_SFWriterElem* self, cfish_Obj* other) {
    const LUCY_SFWriterElem_Equals_t method = (LUCY_SFWriterElem_Equals_t)cfish_obj_method(self, LUCY_SFWriterElem_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_SFWriterElem_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_SFWriterElem_Compare_To(lucy_SFWriterElem* self, cfish_Obj* other) {
    const LUCY_SFWriterElem_Compare_To_t method = (LUCY_SFWriterElem_Compare_To_t)cfish_obj_method(self, LUCY_SFWriterElem_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_SFWriterElem_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_SFWriterElem_Destroy(lucy_SFWriterElem* self) {
    const LUCY_SFWriterElem_Destroy_t method = (LUCY_SFWriterElem_Destroy_t)cfish_obj_method(self, LUCY_SFWriterElem_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_SFWriterElem_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_SFWriterElem_To_String(lucy_SFWriterElem* self) {
    const LUCY_SFWriterElem_To_String_t method = (LUCY_SFWriterElem_To_String_t)cfish_obj_method(self, LUCY_SFWriterElem_To_String_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define SFWriterElem lucy_SFWriterElem
  #define SFWRITERELEM LUCY_SFWRITERELEM
  #define SFWriterElem_get_class lucy_SFWriterElem_get_class
  #define SFWriterElem_get_class_name lucy_SFWriterElem_get_class_name
  #define SFWriterElem_is_a lucy_SFWriterElem_is_a
  #define SFWriterElem_Destroy_IMP LUCY_SFWriterElem_Destroy_IMP
  #define SFWriterElem_To_Host LUCY_SFWriterElem_To_Host
  #define SFWriterElem_To_Host_t LUCY_SFWriterElem_To_Host_t
  #define SFWriterElem_Clone LUCY_SFWriterElem_Clone
  #define SFWriterElem_Clone_t LUCY_SFWriterElem_Clone_t
  #define SFWriterElem_Equals LUCY_SFWriterElem_Equals
  #define SFWriterElem_Equals_t LUCY_SFWriterElem_Equals_t
  #define SFWriterElem_Compare_To LUCY_SFWriterElem_Compare_To
  #define SFWriterElem_Compare_To_t LUCY_SFWriterElem_Compare_To_t
  #define SFWriterElem_Destroy LUCY_SFWriterElem_Destroy
  #define SFWriterElem_Destroy_t LUCY_SFWriterElem_Destroy_t
  #define SFWriterElem_To_String LUCY_SFWriterElem_To_String
  #define SFWriterElem_To_String_t LUCY_SFWriterElem_To_String_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_INDEX_SORTFIELDWRITER */




