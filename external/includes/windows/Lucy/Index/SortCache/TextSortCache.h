/*
 * ***********************************************
 * 
 * !!!! DO NOT EDIT !!!!
 * 
 * This file was auto-generated by cfc.
 * 
 * ***********************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef H_LUCY_INDEX_SORTCACHE_TEXTSORTCACHE
#define H_LUCY_INDEX_SORTCACHE_TEXTSORTCACHE 1


#ifdef __cplusplus
extern "C" {
#endif

#include "lucy_parcel.h"

/* Include the header for this class's parent. 
 */

#include "Lucy\Index\SortCache.h"

/* Define the struct layout for instances of this class.
 */

#ifdef C_LUCY_TEXTSORTCACHE
extern uint32_t lucy_TextSortCache_IVARS_OFFSET;
typedef struct lucy_TextSortCacheIVARS lucy_TextSortCacheIVARS;
static CFISH_INLINE lucy_TextSortCacheIVARS*
lucy_TextSortCache_IVARS(lucy_TextSortCache *self) {
   char *ptr = (char*)self + lucy_TextSortCache_IVARS_OFFSET;
   return (lucy_TextSortCacheIVARS*)ptr;
}
#ifdef LUCY_USE_SHORT_NAMES
  #define TextSortCacheIVARS lucy_TextSortCacheIVARS
  #define TextSortCache_IVARS lucy_TextSortCache_IVARS
#endif

struct lucy_TextSortCacheIVARS {
    cfish_String* field;
    lucy_FieldType* type;
    const void* ords;
    int32_t doc_max;
    int32_t cardinality;
    int32_t ord_width;
    int32_t null_ord;
    bool native_ords;
    lucy_InStream* ord_in;
    lucy_InStream* ix_in;
    lucy_InStream* dat_in;
};

#endif /* C_LUCY_TEXTSORTCACHE */

/* Declare this class's inert variables.
 */



/* Declare both this class's inert functions and the C functions which
 * implement this class's dynamic methods.
 */

LUCY_VISIBLE lucy_TextSortCache*
lucy_TextSortCache_new(cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* ix_in, lucy_InStream* dat_in);

LUCY_VISIBLE lucy_TextSortCache*
lucy_TextSortCache_init(lucy_TextSortCache* self, cfish_String* field, lucy_FieldType* type, int32_t cardinality, int32_t doc_max, int32_t null_ord, int32_t ord_width, lucy_InStream* ord_in, lucy_InStream* ix_in, lucy_InStream* dat_in);

cfish_Obj*
LUCY_TextSortCache_Value_IMP(lucy_TextSortCache* self, int32_t ord);

void
LUCY_TextSortCache_Destroy_IMP(lucy_TextSortCache* self);



/* Define typedefs for each dynamic method, allowing us to cast generic
 * pointers to the appropriate function pointer type more cleanly.
 */

typedef void*
(*LUCY_TextSortCache_To_Host_t)(lucy_TextSortCache* self, void* vcache);

typedef cfish_Obj*
(*LUCY_TextSortCache_Clone_t)(lucy_TextSortCache* self);

typedef bool
(*LUCY_TextSortCache_Equals_t)(lucy_TextSortCache* self, cfish_Obj* other);

typedef int32_t
(*LUCY_TextSortCache_Compare_To_t)(lucy_TextSortCache* self, cfish_Obj* other);

typedef void
(*LUCY_TextSortCache_Destroy_t)(lucy_TextSortCache* self);

typedef cfish_String*
(*LUCY_TextSortCache_To_String_t)(lucy_TextSortCache* self);

typedef cfish_Obj*
(*LUCY_TextSortCache_Value_t)(lucy_TextSortCache* self, int32_t ord);

typedef const void*
(*LUCY_TextSortCache_Get_Ords_t)(lucy_TextSortCache* self);

typedef int32_t
(*LUCY_TextSortCache_Get_Cardinality_t)(lucy_TextSortCache* self);

typedef int32_t
(*LUCY_TextSortCache_Get_Ord_Width_t)(lucy_TextSortCache* self);

typedef int32_t
(*LUCY_TextSortCache_Get_Null_Ord_t)(lucy_TextSortCache* self);

typedef int32_t
(*LUCY_TextSortCache_Ordinal_t)(lucy_TextSortCache* self, int32_t doc_id);

typedef int32_t
(*LUCY_TextSortCache_Find_t)(lucy_TextSortCache* self, cfish_Obj* term);

typedef void
(*LUCY_TextSortCache_Set_Native_Ords_t)(lucy_TextSortCache* self, bool native_ords);

typedef bool
(*LUCY_TextSortCache_Get_Native_Ords_t)(lucy_TextSortCache* self);



/* Define type-safe wrappers for inert functions of Obj.
 */

static CFISH_INLINE cfish_Class*
lucy_TextSortCache_get_class(lucy_TextSortCache *self) {
    return cfish_Obj_get_class((cfish_Obj*)self);
}

static CFISH_INLINE cfish_String*
lucy_TextSortCache_get_class_name(lucy_TextSortCache *self) {
    return cfish_Obj_get_class_name((cfish_Obj*)self);
}

static CFISH_INLINE bool
lucy_TextSortCache_is_a(lucy_TextSortCache *self, cfish_Class *ancestor) {
    return cfish_Obj_is_a((cfish_Obj*)self, ancestor);
}


/* Define the inline functions which implement this class's virtual methods.
 */

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_To_Host_OFFSET;
static CFISH_INLINE void*
LUCY_TextSortCache_To_Host(lucy_TextSortCache* self, void* vcache) {
    const LUCY_TextSortCache_To_Host_t method = (LUCY_TextSortCache_To_Host_t)cfish_obj_method(self, LUCY_TextSortCache_To_Host_OFFSET);
    return method(self, vcache);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Clone_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_TextSortCache_Clone(lucy_TextSortCache* self) {
    const LUCY_TextSortCache_Clone_t method = (LUCY_TextSortCache_Clone_t)cfish_obj_method(self, LUCY_TextSortCache_Clone_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Equals_OFFSET;
static CFISH_INLINE bool
LUCY_TextSortCache_Equals(lucy_TextSortCache* self, cfish_Obj* other) {
    const LUCY_TextSortCache_Equals_t method = (LUCY_TextSortCache_Equals_t)cfish_obj_method(self, LUCY_TextSortCache_Equals_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Compare_To_OFFSET;
static CFISH_INLINE int32_t
LUCY_TextSortCache_Compare_To(lucy_TextSortCache* self, cfish_Obj* other) {
    const LUCY_TextSortCache_Compare_To_t method = (LUCY_TextSortCache_Compare_To_t)cfish_obj_method(self, LUCY_TextSortCache_Compare_To_OFFSET);
    return method(self, other);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Destroy_OFFSET;
static CFISH_INLINE void
LUCY_TextSortCache_Destroy(lucy_TextSortCache* self) {
    const LUCY_TextSortCache_Destroy_t method = (LUCY_TextSortCache_Destroy_t)cfish_obj_method(self, LUCY_TextSortCache_Destroy_OFFSET);
    method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_To_String_OFFSET;
static CFISH_INLINE cfish_String*
LUCY_TextSortCache_To_String(lucy_TextSortCache* self) {
    const LUCY_TextSortCache_To_String_t method = (LUCY_TextSortCache_To_String_t)cfish_obj_method(self, LUCY_TextSortCache_To_String_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Value_OFFSET;
static CFISH_INLINE cfish_Obj*
LUCY_TextSortCache_Value(lucy_TextSortCache* self, int32_t ord) {
    const LUCY_TextSortCache_Value_t method = (LUCY_TextSortCache_Value_t)cfish_obj_method(self, LUCY_TextSortCache_Value_OFFSET);
    return method(self, ord);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Get_Ords_OFFSET;
static CFISH_INLINE const void*
LUCY_TextSortCache_Get_Ords(lucy_TextSortCache* self) {
    const LUCY_TextSortCache_Get_Ords_t method = (LUCY_TextSortCache_Get_Ords_t)cfish_obj_method(self, LUCY_TextSortCache_Get_Ords_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Get_Cardinality_OFFSET;
static CFISH_INLINE int32_t
LUCY_TextSortCache_Get_Cardinality(lucy_TextSortCache* self) {
    const LUCY_TextSortCache_Get_Cardinality_t method = (LUCY_TextSortCache_Get_Cardinality_t)cfish_obj_method(self, LUCY_TextSortCache_Get_Cardinality_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Get_Ord_Width_OFFSET;
static CFISH_INLINE int32_t
LUCY_TextSortCache_Get_Ord_Width(lucy_TextSortCache* self) {
    const LUCY_TextSortCache_Get_Ord_Width_t method = (LUCY_TextSortCache_Get_Ord_Width_t)cfish_obj_method(self, LUCY_TextSortCache_Get_Ord_Width_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Get_Null_Ord_OFFSET;
static CFISH_INLINE int32_t
LUCY_TextSortCache_Get_Null_Ord(lucy_TextSortCache* self) {
    const LUCY_TextSortCache_Get_Null_Ord_t method = (LUCY_TextSortCache_Get_Null_Ord_t)cfish_obj_method(self, LUCY_TextSortCache_Get_Null_Ord_OFFSET);
    return method(self);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Ordinal_OFFSET;
static CFISH_INLINE int32_t
LUCY_TextSortCache_Ordinal(lucy_TextSortCache* self, int32_t doc_id) {
    const LUCY_TextSortCache_Ordinal_t method = (LUCY_TextSortCache_Ordinal_t)cfish_obj_method(self, LUCY_TextSortCache_Ordinal_OFFSET);
    return method(self, doc_id);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Find_OFFSET;
static CFISH_INLINE int32_t
LUCY_TextSortCache_Find(lucy_TextSortCache* self, cfish_Obj* term) {
    const LUCY_TextSortCache_Find_t method = (LUCY_TextSortCache_Find_t)cfish_obj_method(self, LUCY_TextSortCache_Find_OFFSET);
    return method(self, term);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Set_Native_Ords_OFFSET;
static CFISH_INLINE void
LUCY_TextSortCache_Set_Native_Ords(lucy_TextSortCache* self, bool native_ords) {
    const LUCY_TextSortCache_Set_Native_Ords_t method = (LUCY_TextSortCache_Set_Native_Ords_t)cfish_obj_method(self, LUCY_TextSortCache_Set_Native_Ords_OFFSET);
    method(self, native_ords);
}

extern LUCY_VISIBLE uint32_t LUCY_TextSortCache_Get_Native_Ords_OFFSET;
static CFISH_INLINE bool
LUCY_TextSortCache_Get_Native_Ords(lucy_TextSortCache* self) {
    const LUCY_TextSortCache_Get_Native_Ords_t method = (LUCY_TextSortCache_Get_Native_Ords_t)cfish_obj_method(self, LUCY_TextSortCache_Get_Native_Ords_OFFSET);
    return method(self);
}



/* Declare callbacks for wrapping host overrides.
 */

#ifdef CFISH_NO_DYNAMIC_OVERRIDES
#else
#endif


/* Define "short names" for this class's symbols.
 */

#ifdef LUCY_USE_SHORT_NAMES
  #define TextSortCache lucy_TextSortCache
  #define TEXTSORTCACHE LUCY_TEXTSORTCACHE
  #define TextSortCache_new lucy_TextSortCache_new
  #define TextSortCache_init lucy_TextSortCache_init
  #define TextSortCache_get_class lucy_TextSortCache_get_class
  #define TextSortCache_get_class_name lucy_TextSortCache_get_class_name
  #define TextSortCache_is_a lucy_TextSortCache_is_a
  #define TextSortCache_Value_IMP LUCY_TextSortCache_Value_IMP
  #define TextSortCache_Destroy_IMP LUCY_TextSortCache_Destroy_IMP
  #define TextSortCache_To_Host LUCY_TextSortCache_To_Host
  #define TextSortCache_To_Host_t LUCY_TextSortCache_To_Host_t
  #define TextSortCache_Clone LUCY_TextSortCache_Clone
  #define TextSortCache_Clone_t LUCY_TextSortCache_Clone_t
  #define TextSortCache_Equals LUCY_TextSortCache_Equals
  #define TextSortCache_Equals_t LUCY_TextSortCache_Equals_t
  #define TextSortCache_Compare_To LUCY_TextSortCache_Compare_To
  #define TextSortCache_Compare_To_t LUCY_TextSortCache_Compare_To_t
  #define TextSortCache_Destroy LUCY_TextSortCache_Destroy
  #define TextSortCache_Destroy_t LUCY_TextSortCache_Destroy_t
  #define TextSortCache_To_String LUCY_TextSortCache_To_String
  #define TextSortCache_To_String_t LUCY_TextSortCache_To_String_t
  #define TextSortCache_Value LUCY_TextSortCache_Value
  #define TextSortCache_Value_t LUCY_TextSortCache_Value_t
  #define TextSortCache_Get_Ords LUCY_TextSortCache_Get_Ords
  #define TextSortCache_Get_Ords_t LUCY_TextSortCache_Get_Ords_t
  #define TextSortCache_Get_Cardinality LUCY_TextSortCache_Get_Cardinality
  #define TextSortCache_Get_Cardinality_t LUCY_TextSortCache_Get_Cardinality_t
  #define TextSortCache_Get_Ord_Width LUCY_TextSortCache_Get_Ord_Width
  #define TextSortCache_Get_Ord_Width_t LUCY_TextSortCache_Get_Ord_Width_t
  #define TextSortCache_Get_Null_Ord LUCY_TextSortCache_Get_Null_Ord
  #define TextSortCache_Get_Null_Ord_t LUCY_TextSortCache_Get_Null_Ord_t
  #define TextSortCache_Ordinal LUCY_TextSortCache_Ordinal
  #define TextSortCache_Ordinal_t LUCY_TextSortCache_Ordinal_t
  #define TextSortCache_Find LUCY_TextSortCache_Find
  #define TextSortCache_Find_t LUCY_TextSortCache_Find_t
  #define TextSortCache_Set_Native_Ords LUCY_TextSortCache_Set_Native_Ords
  #define TextSortCache_Set_Native_Ords_t LUCY_TextSortCache_Set_Native_Ords_t
  #define TextSortCache_Get_Native_Ords LUCY_TextSortCache_Get_Native_Ords
  #define TextSortCache_Get_Native_Ords_t LUCY_TextSortCache_Get_Native_Ords_t
#endif /* LUCY_USE_SHORT_NAMES */





#ifdef __cplusplus
}
#endif

#endif /* H_LUCY_INDEX_SORTCACHE_TEXTSORTCACHE */




